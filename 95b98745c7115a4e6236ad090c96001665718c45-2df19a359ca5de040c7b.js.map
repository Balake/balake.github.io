{"version":3,"file":"95b98745c7115a4e6236ad090c96001665718c45-2df19a359ca5de040c7b.js","mappings":"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","sources":["webpack://balake_blog/./node_modules/langium/lib/utils/grammar-utils.js","webpack://balake_blog/./node_modules/@chevrotain/utils/lib/src/to-fast-properties.js","webpack://balake_blog/./node_modules/lodash-es/_baseSlice.js","webpack://balake_blog/./node_modules/lodash-es/drop.js","webpack://balake_blog/./node_modules/lodash-es/assign.js","webpack://balake_blog/./node_modules/lodash-es/pickBy.js","webpack://balake_blog/./node_modules/lodash-es/_baseIsRegExp.js","webpack://balake_blog/./node_modules/lodash-es/isRegExp.js","webpack://balake_blog/./node_modules/@chevrotain/gast/lib/src/model.js","webpack://balake_blog/./node_modules/@chevrotain/gast/lib/src/visitor.js","webpack://balake_blog/./node_modules/lodash-es/_baseSome.js","webpack://balake_blog/./node_modules/lodash-es/some.js","webpack://balake_blog/./node_modules/lodash-es/includes.js","webpack://balake_blog/./node_modules/lodash-es/_arrayEvery.js","webpack://balake_blog/./node_modules/lodash-es/_baseEvery.js","webpack://balake_blog/./node_modules/lodash-es/every.js","webpack://balake_blog/./node_modules/@chevrotain/gast/lib/src/helpers.js","webpack://balake_blog/./node_modules/chevrotain/lib/src/parse/grammar/rest.js","webpack://balake_blog/./node_modules/lodash-es/uniq.js","webpack://balake_blog/./node_modules/chevrotain/lib/src/parse/grammar/first.js","webpack://balake_blog/./node_modules/chevrotain/lib/src/parse/constants.js","webpack://balake_blog/./node_modules/chevrotain/lib/src/parse/grammar/follow.js","webpack://balake_blog/./node_modules/lodash-es/negate.js","webpack://balake_blog/./node_modules/lodash-es/reject.js","webpack://balake_blog/./node_modules/lodash-es/indexOf.js","webpack://balake_blog/./node_modules/lodash-es/_baseDifference.js","webpack://balake_blog/./node_modules/lodash-es/difference.js","webpack://balake_blog/./node_modules/lodash-es/compact.js","webpack://balake_blog/./node_modules/lodash-es/head.js","webpack://balake_blog/./node_modules/@chevrotain/utils/lib/src/print.js","webpack://balake_blog/./node_modules/chevrotain/lib/src/scan/reg_exp_parser.js","webpack://balake_blog/./node_modules/chevrotain/lib/src/scan/reg_exp.js","webpack://balake_blog/./node_modules/chevrotain/lib/src/scan/lexer.js","webpack://balake_blog/./node_modules/@chevrotain/utils/lib/src/timer.js","webpack://balake_blog/./node_modules/chevrotain/lib/src/scan/tokens.js","webpack://balake_blog/./node_modules/chevrotain/lib/src/scan/lexer_errors_public.js","webpack://balake_blog/./node_modules/chevrotain/lib/src/scan/lexer_public.js","webpack://balake_blog/./node_modules/chevrotain/lib/src/scan/tokens_public.js","webpack://balake_blog/./node_modules/chevrotain/lib/src/parse/errors_public.js","webpack://balake_blog/./node_modules/chevrotain/lib/src/parse/grammar/resolver.js","webpack://balake_blog/./node_modules/lodash-es/_arrayAggregator.js","webpack://balake_blog/./node_modules/lodash-es/_baseAggregator.js","webpack://balake_blog/./node_modules/lodash-es/_createAggregator.js","webpack://balake_blog/./node_modules/lodash-es/groupBy.js","webpack://balake_blog/./node_modules/lodash-es/dropRight.js","webpack://balake_blog/./node_modules/chevrotain/lib/src/parse/grammar/lookahead.js","webpack://balake_blog/./node_modules/chevrotain/lib/src/parse/grammar/interpreter.js","webpack://balake_blog/./node_modules/chevrotain/lib/src/parse/grammar/checks.js","webpack://balake_blog/./node_modules/chevrotain/lib/src/parse/grammar/gast/gast_resolver_public.js","webpack://balake_blog/./node_modules/chevrotain/lib/src/parse/exceptions_public.js","webpack://balake_blog/./node_modules/chevrotain/lib/src/parse/parser/traits/recoverable.js","webpack://balake_blog/./node_modules/chevrotain/lib/src/parse/grammar/keys.js","webpack://balake_blog/./node_modules/chevrotain/lib/src/parse/grammar/llk_lookahead.js","webpack://balake_blog/./node_modules/chevrotain/lib/src/parse/parser/traits/looksahead.js","webpack://balake_blog/./node_modules/chevrotain/lib/src/parse/cst/cst.js","webpack://balake_blog/./node_modules/chevrotain/lib/src/lang/lang_extensions.js","webpack://balake_blog/./node_modules/chevrotain/lib/src/parse/cst/cst_visitor.js","webpack://balake_blog/./node_modules/chevrotain/lib/src/parse/parser/traits/gast_recorder.js","webpack://balake_blog/./node_modules/chevrotain/lib/src/parse/parser/parser.js","webpack://balake_blog/./node_modules/chevrotain/lib/src/parse/parser/utils/apply_mixins.js","webpack://balake_blog/./node_modules/chevrotain/lib/src/parse/parser/traits/tree_builder.js","webpack://balake_blog/./node_modules/chevrotain/lib/src/parse/parser/traits/lexer_adapter.js","webpack://balake_blog/./node_modules/chevrotain/lib/src/parse/parser/traits/recognizer_engine.js","webpack://balake_blog/./node_modules/chevrotain/lib/src/parse/parser/traits/recognizer_api.js","webpack://balake_blog/./node_modules/chevrotain/lib/src/parse/parser/traits/error_handler.js","webpack://balake_blog/./node_modules/chevrotain/lib/src/parse/parser/traits/context_assist.js","webpack://balake_blog/./node_modules/chevrotain/lib/src/parse/parser/traits/perf_tracer.js","webpack://balake_blog/./node_modules/langium/lib/utils/grammar-loader.js","webpack://balake_blog/./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-4KMFLZZN.mjs","webpack://balake_blog/./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-T44TD3VJ.mjs","webpack://balake_blog/./node_modules/langium/lib/utils/errors.js","webpack://balake_blog/./node_modules/langium/lib/utils/stream.js","webpack://balake_blog/./node_modules/langium/lib/parser/token-builder.js","webpack://balake_blog/./node_modules/langium/lib/languages/generated/ast.js","webpack://balake_blog/./node_modules/langium/lib/syntax-tree.js","webpack://balake_blog/./node_modules/@chevrotain/regexp-to-ast/lib/src/utils.js","webpack://balake_blog/./node_modules/@chevrotain/regexp-to-ast/lib/src/character-classes.js","webpack://balake_blog/./node_modules/@chevrotain/regexp-to-ast/lib/src/regexp-parser.js","webpack://balake_blog/./node_modules/@chevrotain/regexp-to-ast/lib/src/base-regexp-visitor.js","webpack://balake_blog/./node_modules/vscode-jsonrpc/lib/common/events.js","webpack://balake_blog/./node_modules/langium/lib/utils/regexp-utils.js","webpack://balake_blog/./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-WFRQ32O7.mjs","webpack://balake_blog/./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-JEIROHC2.mjs","webpack://balake_blog/./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-XRWGC2XP.mjs","webpack://balake_blog/./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-BN7GFLIU.mjs","webpack://balake_blog/./node_modules/langium/lib/workspace/file-system-provider.js","webpack://balake_blog/./node_modules/mermaid/dist/chunks/mermaid.core/chunk-BFAMUDN2.mjs","webpack://balake_blog/./node_modules/langium/lib/parser/value-converter.js","webpack://balake_blog/./node_modules/langium/lib/utils/cst-utils.js","webpack://balake_blog/./node_modules/vscode-uri/lib/esm/index.mjs","webpack://balake_blog/./node_modules/lodash-es/flatMap.js","webpack://balake_blog/./node_modules/vscode-jsonrpc/lib/common/is.js","webpack://balake_blog/./node_modules/@mermaid-js/parser/dist/mermaid-parser.core.mjs","webpack://balake_blog/./node_modules/mermaid/dist/chunks/mermaid.core/chunk-SKB7J2MH.mjs","webpack://balake_blog/./node_modules/chevrotain-allstar/lib/atn.js","webpack://balake_blog/./node_modules/chevrotain-allstar/lib/dfa.js","webpack://balake_blog/./node_modules/lodash-es/uniqBy.js","webpack://balake_blog/./node_modules/chevrotain-allstar/lib/all-star-lookahead.js","webpack://balake_blog/./node_modules/vscode-languageserver-types/lib/esm/main.js","webpack://balake_blog/./node_modules/langium/lib/parser/cst-node-builder.js","webpack://balake_blog/./node_modules/langium/lib/parser/langium-parser.js","webpack://balake_blog/./node_modules/langium/lib/parser/parser-builder-base.js","webpack://balake_blog/./node_modules/langium/lib/parser/langium-parser-builder.js","webpack://balake_blog/./node_modules/langium/lib/utils/promise-utils.js","webpack://balake_blog/./node_modules/vscode-languageserver-textdocument/lib/esm/main.js","webpack://balake_blog/./node_modules/langium/lib/workspace/documents.js","webpack://balake_blog/./node_modules/langium/lib/references/linker.js","webpack://balake_blog/./node_modules/langium/lib/references/name-provider.js","webpack://balake_blog/./node_modules/langium/lib/utils/uri-utils.js","webpack://balake_blog/./node_modules/langium/lib/references/references.js","webpack://balake_blog/./node_modules/langium/lib/utils/collections.js","webpack://balake_blog/./node_modules/langium/lib/references/scope-computation.js","webpack://balake_blog/./node_modules/langium/lib/references/scope.js","webpack://balake_blog/./node_modules/langium/lib/utils/caching.js","webpack://balake_blog/./node_modules/langium/lib/references/scope-provider.js","webpack://balake_blog/./node_modules/langium/lib/serializer/json-serializer.js","webpack://balake_blog/./node_modules/langium/lib/service-registry.js","webpack://balake_blog/./node_modules/langium/lib/validation/validation-registry.js","webpack://balake_blog/./node_modules/langium/lib/validation/document-validator.js","webpack://balake_blog/./node_modules/langium/lib/workspace/ast-descriptions.js","webpack://balake_blog/./node_modules/langium/lib/workspace/ast-node-locator.js","webpack://balake_blog/./node_modules/langium/lib/utils/disposable.js","webpack://balake_blog/./node_modules/langium/lib/workspace/configuration.js","webpack://balake_blog/./node_modules/langium/lib/workspace/document-builder.js","webpack://balake_blog/./node_modules/langium/lib/workspace/index-manager.js","webpack://balake_blog/./node_modules/langium/lib/workspace/workspace-manager.js","webpack://balake_blog/./node_modules/langium/lib/parser/lexer.js","webpack://balake_blog/./node_modules/langium/lib/documentation/jsdoc.js","webpack://balake_blog/./node_modules/langium/lib/documentation/documentation-provider.js","webpack://balake_blog/./node_modules/langium/lib/documentation/comment-provider.js","webpack://balake_blog/./node_modules/langium/lib/parser/async-parser.js","webpack://balake_blog/./node_modules/langium/lib/workspace/workspace-lock.js","webpack://balake_blog/./node_modules/langium/lib/serializer/hydrator.js","webpack://balake_blog/./node_modules/langium/lib/default-module.js","webpack://balake_blog/./node_modules/langium/lib/languages/grammar-config.js","webpack://balake_blog/./node_modules/langium/lib/parser/completion-parser-builder.js","webpack://balake_blog/./node_modules/langium/lib/dependency-injection.js","webpack://balake_blog/./node_modules/vscode-jsonrpc/lib/common/ral.js","webpack://balake_blog/./node_modules/langium/lib/utils/ast-utils.js","webpack://balake_blog/./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-WFWHJNB7.mjs","webpack://balake_blog/./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-KMC2YHZD.mjs","webpack://balake_blog/./node_modules/vscode-jsonrpc/lib/common/cancellation.js"],"sourcesContent":["/******************************************************************************\n * Copyright 2021-2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { assertUnreachable } from '../utils/errors.js';\nimport * as ast from '../languages/generated/ast.js';\nimport { isCompositeCstNode } from '../syntax-tree.js';\nimport { getContainerOfType, streamAllContents } from './ast-utils.js';\nimport { streamCst } from './cst-utils.js';\nimport { escapeRegExp, isWhitespace } from './regexp-utils.js';\n/**\n * Returns the entry rule of the given grammar, if any. If the grammar file does not contain an entry rule,\n * the result is `undefined`.\n */\nexport function getEntryRule(grammar) {\n    return grammar.rules.find(e => ast.isParserRule(e) && e.entry);\n}\n/**\n * Returns all hidden terminal rules of the given grammar, if any.\n */\nexport function getHiddenRules(grammar) {\n    return grammar.rules.filter((e) => ast.isTerminalRule(e) && e.hidden);\n}\n/**\n * Returns all rules that can be reached from the topmost rules of the specified grammar (entry and hidden terminal rules).\n *\n * @param grammar The grammar that contains all rules\n * @param allTerminals Whether or not to include terminals that are referenced only by other terminals\n * @returns A list of referenced parser and terminal rules. If the grammar contains no entry rule,\n *      this function returns all rules of the specified grammar.\n */\nexport function getAllReachableRules(grammar, allTerminals) {\n    const ruleNames = new Set();\n    const entryRule = getEntryRule(grammar);\n    if (!entryRule) {\n        return new Set(grammar.rules);\n    }\n    const topMostRules = [entryRule].concat(getHiddenRules(grammar));\n    for (const rule of topMostRules) {\n        ruleDfs(rule, ruleNames, allTerminals);\n    }\n    const rules = new Set();\n    for (const rule of grammar.rules) {\n        if (ruleNames.has(rule.name) || (ast.isTerminalRule(rule) && rule.hidden)) {\n            rules.add(rule);\n        }\n    }\n    return rules;\n}\nfunction ruleDfs(rule, visitedSet, allTerminals) {\n    visitedSet.add(rule.name);\n    streamAllContents(rule).forEach(node => {\n        if (ast.isRuleCall(node) || (allTerminals && ast.isTerminalRuleCall(node))) {\n            const refRule = node.rule.ref;\n            if (refRule && !visitedSet.has(refRule.name)) {\n                ruleDfs(refRule, visitedSet, allTerminals);\n            }\n        }\n    });\n}\n/**\n * Determines the grammar expression used to parse a cross-reference (usually a reference to a terminal rule).\n * A cross-reference can declare this expression explicitly in the form `[Type : Terminal]`, but if `Terminal`\n * is omitted, this function attempts to infer it from the name of the referenced `Type` (using `findNameAssignment`).\n *\n * Returns the grammar expression used to parse the given cross-reference, or `undefined` if it is not declared\n * and cannot be inferred.\n */\nexport function getCrossReferenceTerminal(crossRef) {\n    if (crossRef.terminal) {\n        return crossRef.terminal;\n    }\n    else if (crossRef.type.ref) {\n        const nameAssigment = findNameAssignment(crossRef.type.ref);\n        return nameAssigment === null || nameAssigment === void 0 ? void 0 : nameAssigment.terminal;\n    }\n    return undefined;\n}\n/**\n * Determines whether the given terminal rule represents a comment. This is true if the rule is marked\n * as `hidden` and it does not match white space. This means every hidden token (i.e. excluded from the AST)\n * that contains visible characters is considered a comment.\n */\nexport function isCommentTerminal(terminalRule) {\n    return terminalRule.hidden && !isWhitespace(terminalRegex(terminalRule));\n}\n/**\n * Find all CST nodes within the given node that contribute to the specified property.\n *\n * @param node A CST node in which to look for property assignments. If this is undefined, the result is an empty array.\n * @param property A property name of the constructed AST node. If this is undefined, the result is an empty array.\n */\nexport function findNodesForProperty(node, property) {\n    if (!node || !property) {\n        return [];\n    }\n    return findNodesForPropertyInternal(node, property, node.astNode, true);\n}\n/**\n * Find a single CST node within the given node that contributes to the specified property.\n *\n * @param node A CST node in which to look for property assignments. If this is undefined, the result is `undefined`.\n * @param property A property name of the constructed AST node. If this is undefined, the result is `undefined`.\n * @param index If no index is specified or the index is less than zero, the first found node is returned. If the\n *        specified index exceeds the number of assignments to the property, the last found node is returned. Otherwise,\n *        the node with the specified index is returned.\n */\nexport function findNodeForProperty(node, property, index) {\n    if (!node || !property) {\n        return undefined;\n    }\n    const nodes = findNodesForPropertyInternal(node, property, node.astNode, true);\n    if (nodes.length === 0) {\n        return undefined;\n    }\n    if (index !== undefined) {\n        index = Math.max(0, Math.min(index, nodes.length - 1));\n    }\n    else {\n        index = 0;\n    }\n    return nodes[index];\n}\nfunction findNodesForPropertyInternal(node, property, element, first) {\n    if (!first) {\n        const nodeFeature = getContainerOfType(node.grammarSource, ast.isAssignment);\n        if (nodeFeature && nodeFeature.feature === property) {\n            return [node];\n        }\n    }\n    if (isCompositeCstNode(node) && node.astNode === element) {\n        return node.content.flatMap(e => findNodesForPropertyInternal(e, property, element, false));\n    }\n    return [];\n}\n/**\n * Find all CST nodes within the given node that correspond to the specified keyword.\n *\n * @param node A CST node in which to look for keywords. If this is undefined, the result is an empty array.\n * @param keyword A keyword as specified in the grammar.\n */\nexport function findNodesForKeyword(node, keyword) {\n    if (!node) {\n        return [];\n    }\n    return findNodesForKeywordInternal(node, keyword, node === null || node === void 0 ? void 0 : node.astNode);\n}\n/**\n * Find a single CST node within the given node that corresponds to the specified keyword.\n *\n * @param node A CST node in which to look for keywords. If this is undefined, the result is `undefined`.\n * @param keyword A keyword as specified in the grammar.\n * @param index If no index is specified or the index is less than zero, the first found node is returned. If the\n *        specified index exceeds the number of keyword occurrences, the last found node is returned. Otherwise,\n *        the node with the specified index is returned.\n */\nexport function findNodeForKeyword(node, keyword, index) {\n    if (!node) {\n        return undefined;\n    }\n    const nodes = findNodesForKeywordInternal(node, keyword, node === null || node === void 0 ? void 0 : node.astNode);\n    if (nodes.length === 0) {\n        return undefined;\n    }\n    if (index !== undefined) {\n        index = Math.max(0, Math.min(index, nodes.length - 1));\n    }\n    else {\n        index = 0;\n    }\n    return nodes[index];\n}\nexport function findNodesForKeywordInternal(node, keyword, element) {\n    if (node.astNode !== element) {\n        return [];\n    }\n    if (ast.isKeyword(node.grammarSource) && node.grammarSource.value === keyword) {\n        return [node];\n    }\n    const treeIterator = streamCst(node).iterator();\n    let result;\n    const keywordNodes = [];\n    do {\n        result = treeIterator.next();\n        if (!result.done) {\n            const childNode = result.value;\n            if (childNode.astNode === element) {\n                if (ast.isKeyword(childNode.grammarSource) && childNode.grammarSource.value === keyword) {\n                    keywordNodes.push(childNode);\n                }\n            }\n            else {\n                treeIterator.prune();\n            }\n        }\n    } while (!result.done);\n    return keywordNodes;\n}\n/**\n * If the given CST node was parsed in the context of a property assignment, the respective `Assignment` grammar\n * node is returned. If no assignment is found, the result is `undefined`.\n *\n * @param cstNode A CST node for which to find a property assignment.\n */\nexport function findAssignment(cstNode) {\n    var _a;\n    const astNode = cstNode.astNode;\n    // Only search until the ast node of the parent cst node is no longer the original ast node\n    // This would make us jump to a preceding rule call, which contains only unrelated assignments\n    while (astNode === ((_a = cstNode.container) === null || _a === void 0 ? void 0 : _a.astNode)) {\n        const assignment = getContainerOfType(cstNode.grammarSource, ast.isAssignment);\n        if (assignment) {\n            return assignment;\n        }\n        cstNode = cstNode.container;\n    }\n    return undefined;\n}\n/**\n * Find an assignment to the `name` property for the given grammar type. This requires the `type` to be inferred\n * from a parser rule, and that rule must contain an assignment to the `name` property. In all other cases,\n * this function returns `undefined`.\n */\nexport function findNameAssignment(type) {\n    let startNode = type;\n    if (ast.isInferredType(startNode)) {\n        // for inferred types, the location to start searching for the name-assignment is different\n        if (ast.isAction(startNode.$container)) {\n            // a type which is explicitly inferred by an action: investigate the sibbling of the Action node, i.e. start searching at the Action's parent\n            startNode = startNode.$container.$container;\n        }\n        else if (ast.isParserRule(startNode.$container)) {\n            // investigate the parser rule with the explicitly inferred type\n            startNode = startNode.$container;\n        }\n        else {\n            assertUnreachable(startNode.$container);\n        }\n    }\n    return findNameAssignmentInternal(type, startNode, new Map());\n}\nfunction findNameAssignmentInternal(type, startNode, cache) {\n    var _a;\n    // the cache is only required to prevent infinite loops\n    function go(node, refType) {\n        let childAssignment = undefined;\n        const parentAssignment = getContainerOfType(node, ast.isAssignment);\n        // No parent assignment implies unassigned rule call\n        if (!parentAssignment) {\n            childAssignment = findNameAssignmentInternal(refType, refType, cache);\n        }\n        cache.set(type, childAssignment);\n        return childAssignment;\n    }\n    if (cache.has(type)) {\n        return cache.get(type);\n    }\n    cache.set(type, undefined);\n    for (const node of streamAllContents(startNode)) {\n        if (ast.isAssignment(node) && node.feature.toLowerCase() === 'name') {\n            cache.set(type, node);\n            return node;\n        }\n        else if (ast.isRuleCall(node) && ast.isParserRule(node.rule.ref)) {\n            return go(node, node.rule.ref);\n        }\n        else if (ast.isSimpleType(node) && ((_a = node.typeRef) === null || _a === void 0 ? void 0 : _a.ref)) {\n            return go(node, node.typeRef.ref);\n        }\n    }\n    return undefined;\n}\nexport function getActionAtElement(element) {\n    const parent = element.$container;\n    if (ast.isGroup(parent)) {\n        const elements = parent.elements;\n        const index = elements.indexOf(element);\n        for (let i = index - 1; i >= 0; i--) {\n            const item = elements[i];\n            if (ast.isAction(item)) {\n                return item;\n            }\n            else {\n                const action = streamAllContents(elements[i]).find(ast.isAction);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    if (ast.isAbstractElement(parent)) {\n        return getActionAtElement(parent);\n    }\n    else {\n        return undefined;\n    }\n}\nexport function isOptionalCardinality(cardinality, element) {\n    return cardinality === '?' || cardinality === '*' || (ast.isGroup(element) && Boolean(element.guardCondition));\n}\nexport function isArrayCardinality(cardinality) {\n    return cardinality === '*' || cardinality === '+';\n}\nexport function isArrayOperator(operator) {\n    return operator === '+=';\n}\n/**\n * Determines whether the given parser rule is a _data type rule_, meaning that it has a\n * primitive return type like `number`, `boolean`, etc.\n */\nexport function isDataTypeRule(rule) {\n    return isDataTypeRuleInternal(rule, new Set());\n}\nfunction isDataTypeRuleInternal(rule, visited) {\n    if (visited.has(rule)) {\n        return true;\n    }\n    else {\n        visited.add(rule);\n    }\n    for (const node of streamAllContents(rule)) {\n        if (ast.isRuleCall(node)) {\n            if (!node.rule.ref) {\n                // RuleCall to unresolved rule. Don't assume `rule` is a DataType rule.\n                return false;\n            }\n            if (ast.isParserRule(node.rule.ref) && !isDataTypeRuleInternal(node.rule.ref, visited)) {\n                return false;\n            }\n        }\n        else if (ast.isAssignment(node)) {\n            return false;\n        }\n        else if (ast.isAction(node)) {\n            return false;\n        }\n    }\n    return Boolean(rule.definition);\n}\nexport function isDataType(type) {\n    return isDataTypeInternal(type.type, new Set());\n}\nfunction isDataTypeInternal(type, visited) {\n    if (visited.has(type)) {\n        return true;\n    }\n    else {\n        visited.add(type);\n    }\n    if (ast.isArrayType(type)) {\n        return false;\n    }\n    else if (ast.isReferenceType(type)) {\n        return false;\n    }\n    else if (ast.isUnionType(type)) {\n        return type.types.every(e => isDataTypeInternal(e, visited));\n    }\n    else if (ast.isSimpleType(type)) {\n        if (type.primitiveType !== undefined) {\n            return true;\n        }\n        else if (type.stringType !== undefined) {\n            return true;\n        }\n        else if (type.typeRef !== undefined) {\n            const ref = type.typeRef.ref;\n            if (ast.isType(ref)) {\n                return isDataTypeInternal(ref.type, visited);\n            }\n            else {\n                return false;\n            }\n        }\n        else {\n            return false;\n        }\n    }\n    else {\n        return false;\n    }\n}\nexport function getExplicitRuleType(rule) {\n    if (rule.inferredType) {\n        return rule.inferredType.name;\n    }\n    else if (rule.dataType) {\n        return rule.dataType;\n    }\n    else if (rule.returnType) {\n        const refType = rule.returnType.ref;\n        if (refType) {\n            // check if we need to check Action as return type\n            if (ast.isParserRule(refType)) {\n                return refType.name;\n            }\n            else if (ast.isInterface(refType) || ast.isType(refType)) {\n                return refType.name;\n            }\n        }\n    }\n    return undefined;\n}\nexport function getTypeName(type) {\n    var _a;\n    if (ast.isParserRule(type)) {\n        return isDataTypeRule(type) ? type.name : (_a = getExplicitRuleType(type)) !== null && _a !== void 0 ? _a : type.name;\n    }\n    else if (ast.isInterface(type) || ast.isType(type) || ast.isReturnType(type)) {\n        return type.name;\n    }\n    else if (ast.isAction(type)) {\n        const actionType = getActionType(type);\n        if (actionType) {\n            return actionType;\n        }\n    }\n    else if (ast.isInferredType(type)) {\n        return type.name;\n    }\n    throw new Error('Cannot get name of Unknown Type');\n}\nexport function getActionType(action) {\n    var _a;\n    if (action.inferredType) {\n        return action.inferredType.name;\n    }\n    else if ((_a = action.type) === null || _a === void 0 ? void 0 : _a.ref) {\n        return getTypeName(action.type.ref);\n    }\n    return undefined; // not inferring and not referencing a valid type\n}\n/**\n * This function is used at development time (for code generation and the internal type system) to get the type of the AST node produced by the given rule.\n * For data type rules, the name of the rule is returned,\n * e.g. \"INT_value returns number: MY_INT;\" returns \"INT_value\".\n * @param rule the given rule\n * @returns the name of the AST node type of the rule\n */\nexport function getRuleTypeName(rule) {\n    var _a, _b, _c;\n    if (ast.isTerminalRule(rule)) {\n        return (_b = (_a = rule.type) === null || _a === void 0 ? void 0 : _a.name) !== null && _b !== void 0 ? _b : 'string';\n    }\n    else {\n        return isDataTypeRule(rule) ? rule.name : (_c = getExplicitRuleType(rule)) !== null && _c !== void 0 ? _c : rule.name;\n    }\n}\n/**\n * This function is used at runtime to get the actual type of the values produced by the given rule at runtime.\n * For data type rules, the name of the declared return type of the rule is returned (if any),\n * e.g. \"INT_value returns number: MY_INT;\" returns \"number\".\n * @param rule the given rule\n * @returns the name of the type of the produced values of the rule at runtime\n */\nexport function getRuleType(rule) {\n    var _a, _b, _c;\n    if (ast.isTerminalRule(rule)) {\n        return (_b = (_a = rule.type) === null || _a === void 0 ? void 0 : _a.name) !== null && _b !== void 0 ? _b : 'string';\n    }\n    else {\n        return (_c = getExplicitRuleType(rule)) !== null && _c !== void 0 ? _c : rule.name;\n    }\n}\nexport function terminalRegex(terminalRule) {\n    const flags = {\n        s: false,\n        i: false,\n        u: false\n    };\n    const source = abstractElementToRegex(terminalRule.definition, flags);\n    const flagText = Object.entries(flags).filter(([, value]) => value).map(([name]) => name).join('');\n    return new RegExp(source, flagText);\n}\n// Using [\\s\\S]* allows to match everything, compared to . which doesn't match line terminators\nconst WILDCARD = /[\\s\\S]/.source;\nfunction abstractElementToRegex(element, flags) {\n    if (ast.isTerminalAlternatives(element)) {\n        return terminalAlternativesToRegex(element);\n    }\n    else if (ast.isTerminalGroup(element)) {\n        return terminalGroupToRegex(element);\n    }\n    else if (ast.isCharacterRange(element)) {\n        return characterRangeToRegex(element);\n    }\n    else if (ast.isTerminalRuleCall(element)) {\n        const rule = element.rule.ref;\n        if (!rule) {\n            throw new Error('Missing rule reference.');\n        }\n        return withCardinality(abstractElementToRegex(rule.definition), {\n            cardinality: element.cardinality,\n            lookahead: element.lookahead\n        });\n    }\n    else if (ast.isNegatedToken(element)) {\n        return negateTokenToRegex(element);\n    }\n    else if (ast.isUntilToken(element)) {\n        return untilTokenToRegex(element);\n    }\n    else if (ast.isRegexToken(element)) {\n        const lastSlash = element.regex.lastIndexOf('/');\n        const source = element.regex.substring(1, lastSlash);\n        const regexFlags = element.regex.substring(lastSlash + 1);\n        if (flags) {\n            flags.i = regexFlags.includes('i');\n            flags.s = regexFlags.includes('s');\n            flags.u = regexFlags.includes('u');\n        }\n        return withCardinality(source, {\n            cardinality: element.cardinality,\n            lookahead: element.lookahead,\n            wrap: false\n        });\n    }\n    else if (ast.isWildcard(element)) {\n        return withCardinality(WILDCARD, {\n            cardinality: element.cardinality,\n            lookahead: element.lookahead\n        });\n    }\n    else {\n        throw new Error(`Invalid terminal element: ${element === null || element === void 0 ? void 0 : element.$type}`);\n    }\n}\nfunction terminalAlternativesToRegex(alternatives) {\n    return withCardinality(alternatives.elements.map(e => abstractElementToRegex(e)).join('|'), {\n        cardinality: alternatives.cardinality,\n        lookahead: alternatives.lookahead\n    });\n}\nfunction terminalGroupToRegex(group) {\n    return withCardinality(group.elements.map(e => abstractElementToRegex(e)).join(''), {\n        cardinality: group.cardinality,\n        lookahead: group.lookahead\n    });\n}\nfunction untilTokenToRegex(until) {\n    return withCardinality(`${WILDCARD}*?${abstractElementToRegex(until.terminal)}`, {\n        cardinality: until.cardinality,\n        lookahead: until.lookahead\n    });\n}\nfunction negateTokenToRegex(negate) {\n    return withCardinality(`(?!${abstractElementToRegex(negate.terminal)})${WILDCARD}*?`, {\n        cardinality: negate.cardinality,\n        lookahead: negate.lookahead\n    });\n}\nfunction characterRangeToRegex(range) {\n    if (range.right) {\n        return withCardinality(`[${keywordToRegex(range.left)}-${keywordToRegex(range.right)}]`, {\n            cardinality: range.cardinality,\n            lookahead: range.lookahead,\n            wrap: false\n        });\n    }\n    return withCardinality(keywordToRegex(range.left), {\n        cardinality: range.cardinality,\n        lookahead: range.lookahead,\n        wrap: false\n    });\n}\nfunction keywordToRegex(keyword) {\n    return escapeRegExp(keyword.value);\n}\nfunction withCardinality(regex, options) {\n    var _a;\n    if (options.wrap !== false || options.lookahead) {\n        regex = `(${(_a = options.lookahead) !== null && _a !== void 0 ? _a : ''}${regex})`;\n    }\n    if (options.cardinality) {\n        return `${regex}${options.cardinality}`;\n    }\n    return regex;\n}\n//# sourceMappingURL=grammar-utils.js.map","// based on: https://github.com/petkaantonov/bluebird/blob/b97c0d2d487e8c5076e8bd897e0dcd4622d31846/src/util.js#L201-L216\nexport function toFastProperties(toBecomeFast) {\n    function FakeConstructor() { }\n    // If our object is used as a constructor, it would receive\n    FakeConstructor.prototype = toBecomeFast;\n    const fakeInstance = new FakeConstructor();\n    function fakeAccess() {\n        return typeof fakeInstance.bar;\n    }\n    // help V8 understand this is a \"real\" prototype by actually using\n    // the fake instance.\n    fakeAccess();\n    fakeAccess();\n    // Always true condition to suppress the Firefox warning of unreachable\n    // code after a return statement.\n    if (1)\n        return toBecomeFast;\n    // Eval prevents optimization of this method (even though this is dead code)\n    // - https://esbuild.github.io/content-types/#direct-eval\n    /* istanbul ignore next */\n    // tslint:disable-next-line\n    (0, eval)(toBecomeFast);\n}\n//# sourceMappingURL=to-fast-properties.js.map","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nexport default baseSlice;\n","import baseSlice from './_baseSlice.js';\nimport toInteger from './toInteger.js';\n\n/**\n * Creates a slice of `array` with `n` elements dropped from the beginning.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to drop.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.drop([1, 2, 3]);\n * // => [2, 3]\n *\n * _.drop([1, 2, 3], 2);\n * // => [3]\n *\n * _.drop([1, 2, 3], 5);\n * // => []\n *\n * _.drop([1, 2, 3], 0);\n * // => [1, 2, 3]\n */\nfunction drop(array, n, guard) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  return baseSlice(array, n < 0 ? 0 : n, length);\n}\n\nexport default drop;\n","import assignValue from './_assignValue.js';\nimport copyObject from './_copyObject.js';\nimport createAssigner from './_createAssigner.js';\nimport isArrayLike from './isArrayLike.js';\nimport isPrototype from './_isPrototype.js';\nimport keys from './keys.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own enumerable string keyed properties of source objects to the\n * destination object. Source objects are applied from left to right.\n * Subsequent sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object` and is loosely based on\n * [`Object.assign`](https://mdn.io/Object/assign).\n *\n * @static\n * @memberOf _\n * @since 0.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assignIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assign({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'c': 3 }\n */\nvar assign = createAssigner(function(object, source) {\n  if (isPrototype(source) || isArrayLike(source)) {\n    copyObject(source, keys(source), object);\n    return;\n  }\n  for (var key in source) {\n    if (hasOwnProperty.call(source, key)) {\n      assignValue(object, key, source[key]);\n    }\n  }\n});\n\nexport default assign;\n","import arrayMap from './_arrayMap.js';\nimport baseIteratee from './_baseIteratee.js';\nimport basePickBy from './_basePickBy.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\n\n/**\n * Creates an object composed of the `object` properties `predicate` returns\n * truthy for. The predicate is invoked with two arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pickBy(object, _.isNumber);\n * // => { 'a': 1, 'c': 3 }\n */\nfunction pickBy(object, predicate) {\n  if (object == null) {\n    return {};\n  }\n  var props = arrayMap(getAllKeysIn(object), function(prop) {\n    return [prop];\n  });\n  predicate = baseIteratee(predicate);\n  return basePickBy(object, props, function(value, path) {\n    return predicate(value, path[0]);\n  });\n}\n\nexport default pickBy;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar regexpTag = '[object RegExp]';\n\n/**\n * The base implementation of `_.isRegExp` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n */\nfunction baseIsRegExp(value) {\n  return isObjectLike(value) && baseGetTag(value) == regexpTag;\n}\n\nexport default baseIsRegExp;\n","import baseIsRegExp from './_baseIsRegExp.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsRegExp = nodeUtil && nodeUtil.isRegExp;\n\n/**\n * Checks if `value` is classified as a `RegExp` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n * @example\n *\n * _.isRegExp(/abc/);\n * // => true\n *\n * _.isRegExp('/abc/');\n * // => false\n */\nvar isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\nexport default isRegExp;\n","import { assign, forEach, isRegExp, isString, map, pickBy } from \"lodash-es\";\n// TODO: duplicated code to avoid extracting another sub-package -- how to avoid?\nfunction tokenLabel(tokType) {\n    if (hasTokenLabel(tokType)) {\n        return tokType.LABEL;\n    }\n    else {\n        return tokType.name;\n    }\n}\n// TODO: duplicated code to avoid extracting another sub-package -- how to avoid?\nfunction hasTokenLabel(obj) {\n    return isString(obj.LABEL) && obj.LABEL !== \"\";\n}\nexport class AbstractProduction {\n    get definition() {\n        return this._definition;\n    }\n    set definition(value) {\n        this._definition = value;\n    }\n    constructor(_definition) {\n        this._definition = _definition;\n    }\n    accept(visitor) {\n        visitor.visit(this);\n        forEach(this.definition, (prod) => {\n            prod.accept(visitor);\n        });\n    }\n}\nexport class NonTerminal extends AbstractProduction {\n    constructor(options) {\n        super([]);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n    set definition(definition) {\n        // immutable\n    }\n    get definition() {\n        if (this.referencedRule !== undefined) {\n            return this.referencedRule.definition;\n        }\n        return [];\n    }\n    accept(visitor) {\n        visitor.visit(this);\n        // don't visit children of a reference, we will get cyclic infinite loops if we do so\n    }\n}\nexport class Rule extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.orgText = \"\";\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Alternative extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.ignoreAmbiguities = false;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Option extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class RepetitionMandatory extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class RepetitionMandatoryWithSeparator extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Repetition extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class RepetitionWithSeparator extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Alternation extends AbstractProduction {\n    get definition() {\n        return this._definition;\n    }\n    set definition(value) {\n        this._definition = value;\n    }\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        this.ignoreAmbiguities = false;\n        this.hasPredicates = false;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Terminal {\n    constructor(options) {\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n    accept(visitor) {\n        visitor.visit(this);\n    }\n}\nexport function serializeGrammar(topRules) {\n    return map(topRules, serializeProduction);\n}\nexport function serializeProduction(node) {\n    function convertDefinition(definition) {\n        return map(definition, serializeProduction);\n    }\n    /* istanbul ignore else */\n    if (node instanceof NonTerminal) {\n        const serializedNonTerminal = {\n            type: \"NonTerminal\",\n            name: node.nonTerminalName,\n            idx: node.idx,\n        };\n        if (isString(node.label)) {\n            serializedNonTerminal.label = node.label;\n        }\n        return serializedNonTerminal;\n    }\n    else if (node instanceof Alternative) {\n        return {\n            type: \"Alternative\",\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Option) {\n        return {\n            type: \"Option\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof RepetitionMandatory) {\n        return {\n            type: \"RepetitionMandatory\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof RepetitionMandatoryWithSeparator) {\n        return {\n            type: \"RepetitionMandatoryWithSeparator\",\n            idx: node.idx,\n            separator: (serializeProduction(new Terminal({ terminalType: node.separator }))),\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof RepetitionWithSeparator) {\n        return {\n            type: \"RepetitionWithSeparator\",\n            idx: node.idx,\n            separator: (serializeProduction(new Terminal({ terminalType: node.separator }))),\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Repetition) {\n        return {\n            type: \"Repetition\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Alternation) {\n        return {\n            type: \"Alternation\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Terminal) {\n        const serializedTerminal = {\n            type: \"Terminal\",\n            name: node.terminalType.name,\n            label: tokenLabel(node.terminalType),\n            idx: node.idx,\n        };\n        if (isString(node.label)) {\n            serializedTerminal.terminalLabel = node.label;\n        }\n        const pattern = node.terminalType.PATTERN;\n        if (node.terminalType.PATTERN) {\n            serializedTerminal.pattern = isRegExp(pattern)\n                ? pattern.source\n                : pattern;\n        }\n        return serializedTerminal;\n    }\n    else if (node instanceof Rule) {\n        return {\n            type: \"Rule\",\n            name: node.name,\n            orgText: node.orgText,\n            definition: convertDefinition(node.definition),\n        };\n        /* c8 ignore next 3 */\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\n//# sourceMappingURL=model.js.map","import { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"./model.js\";\nexport class GAstVisitor {\n    visit(node) {\n        const nodeAny = node;\n        switch (nodeAny.constructor) {\n            case NonTerminal:\n                return this.visitNonTerminal(nodeAny);\n            case Alternative:\n                return this.visitAlternative(nodeAny);\n            case Option:\n                return this.visitOption(nodeAny);\n            case RepetitionMandatory:\n                return this.visitRepetitionMandatory(nodeAny);\n            case RepetitionMandatoryWithSeparator:\n                return this.visitRepetitionMandatoryWithSeparator(nodeAny);\n            case RepetitionWithSeparator:\n                return this.visitRepetitionWithSeparator(nodeAny);\n            case Repetition:\n                return this.visitRepetition(nodeAny);\n            case Alternation:\n                return this.visitAlternation(nodeAny);\n            case Terminal:\n                return this.visitTerminal(nodeAny);\n            case Rule:\n                return this.visitRule(nodeAny);\n            /* c8 ignore next 2 */\n            default:\n                throw Error(\"non exhaustive match\");\n        }\n    }\n    /* c8 ignore next */\n    visitNonTerminal(node) { }\n    /* c8 ignore next */\n    visitAlternative(node) { }\n    /* c8 ignore next */\n    visitOption(node) { }\n    /* c8 ignore next */\n    visitRepetition(node) { }\n    /* c8 ignore next */\n    visitRepetitionMandatory(node) { }\n    /* c8 ignore next 3 */\n    visitRepetitionMandatoryWithSeparator(node) { }\n    /* c8 ignore next */\n    visitRepetitionWithSeparator(node) { }\n    /* c8 ignore next */\n    visitAlternation(node) { }\n    /* c8 ignore next */\n    visitTerminal(node) { }\n    /* c8 ignore next */\n    visitRule(node) { }\n}\n//# sourceMappingURL=visitor.js.map","import baseEach from './_baseEach.js';\n\n/**\n * The base implementation of `_.some` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction baseSome(collection, predicate) {\n  var result;\n\n  baseEach(collection, function(value, index, collection) {\n    result = predicate(value, index, collection);\n    return !result;\n  });\n  return !!result;\n}\n\nexport default baseSome;\n","import arraySome from './_arraySome.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseSome from './_baseSome.js';\nimport isArray from './isArray.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Checks if `predicate` returns truthy for **any** element of `collection`.\n * Iteration is stopped once `predicate` returns truthy. The predicate is\n * invoked with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n * @example\n *\n * _.some([null, 0, 'yes', false], Boolean);\n * // => true\n *\n * var users = [\n *   { 'user': 'barney', 'active': true },\n *   { 'user': 'fred',   'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.some(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.some(users, ['active', false]);\n * // => true\n *\n * // The `_.property` iteratee shorthand.\n * _.some(users, 'active');\n * // => true\n */\nfunction some(collection, predicate, guard) {\n  var func = isArray(collection) ? arraySome : baseSome;\n  if (guard && isIterateeCall(collection, predicate, guard)) {\n    predicate = undefined;\n  }\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nexport default some;\n","import baseIndexOf from './_baseIndexOf.js';\nimport isArrayLike from './isArrayLike.js';\nimport isString from './isString.js';\nimport toInteger from './toInteger.js';\nimport values from './values.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Checks if `value` is in `collection`. If `collection` is a string, it's\n * checked for a substring of `value`, otherwise\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * is used for equality comparisons. If `fromIndex` is negative, it's used as\n * the offset from the end of `collection`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {boolean} Returns `true` if `value` is found, else `false`.\n * @example\n *\n * _.includes([1, 2, 3], 1);\n * // => true\n *\n * _.includes([1, 2, 3], 1, 2);\n * // => false\n *\n * _.includes({ 'a': 1, 'b': 2 }, 1);\n * // => true\n *\n * _.includes('abcd', 'bc');\n * // => true\n */\nfunction includes(collection, value, fromIndex, guard) {\n  collection = isArrayLike(collection) ? collection : values(collection);\n  fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n  var length = collection.length;\n  if (fromIndex < 0) {\n    fromIndex = nativeMax(length + fromIndex, 0);\n  }\n  return isString(collection)\n    ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n    : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n}\n\nexport default includes;\n","/**\n * A specialized version of `_.every` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`.\n */\nfunction arrayEvery(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (!predicate(array[index], index, array)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default arrayEvery;\n","import baseEach from './_baseEach.js';\n\n/**\n * The base implementation of `_.every` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`\n */\nfunction baseEvery(collection, predicate) {\n  var result = true;\n  baseEach(collection, function(value, index, collection) {\n    result = !!predicate(value, index, collection);\n    return result;\n  });\n  return result;\n}\n\nexport default baseEvery;\n","import arrayEvery from './_arrayEvery.js';\nimport baseEvery from './_baseEvery.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Checks if `predicate` returns truthy for **all** elements of `collection`.\n * Iteration is stopped once `predicate` returns falsey. The predicate is\n * invoked with three arguments: (value, index|key, collection).\n *\n * **Note:** This method returns `true` for\n * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n * elements of empty collections.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`.\n * @example\n *\n * _.every([true, 1, null, 'yes'], Boolean);\n * // => false\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': false },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.every(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.every(users, ['active', false]);\n * // => true\n *\n * // The `_.property` iteratee shorthand.\n * _.every(users, 'active');\n * // => false\n */\nfunction every(collection, predicate, guard) {\n  var func = isArray(collection) ? arrayEvery : baseEvery;\n  if (guard && isIterateeCall(collection, predicate, guard)) {\n    predicate = undefined;\n  }\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nexport default every;\n","import { every, includes, some } from \"lodash-es\";\nimport { AbstractProduction, Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"./model.js\";\nexport function isSequenceProd(prod) {\n    return (prod instanceof Alternative ||\n        prod instanceof Option ||\n        prod instanceof Repetition ||\n        prod instanceof RepetitionMandatory ||\n        prod instanceof RepetitionMandatoryWithSeparator ||\n        prod instanceof RepetitionWithSeparator ||\n        prod instanceof Terminal ||\n        prod instanceof Rule);\n}\nexport function isOptionalProd(prod, alreadyVisited = []) {\n    const isDirectlyOptional = prod instanceof Option ||\n        prod instanceof Repetition ||\n        prod instanceof RepetitionWithSeparator;\n    if (isDirectlyOptional) {\n        return true;\n    }\n    // note that this can cause infinite loop if one optional empty TOP production has a cyclic dependency with another\n    // empty optional top rule\n    // may be indirectly optional ((A?B?C?) | (D?E?F?))\n    if (prod instanceof Alternation) {\n        // for OR its enough for just one of the alternatives to be optional\n        return some(prod.definition, (subProd) => {\n            return isOptionalProd(subProd, alreadyVisited);\n        });\n    }\n    else if (prod instanceof NonTerminal && includes(alreadyVisited, prod)) {\n        // avoiding stack overflow due to infinite recursion\n        return false;\n    }\n    else if (prod instanceof AbstractProduction) {\n        if (prod instanceof NonTerminal) {\n            alreadyVisited.push(prod);\n        }\n        return every(prod.definition, (subProd) => {\n            return isOptionalProd(subProd, alreadyVisited);\n        });\n    }\n    else {\n        return false;\n    }\n}\nexport function isBranchingProd(prod) {\n    return prod instanceof Alternation;\n}\nexport function getProductionDslName(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof NonTerminal) {\n        return \"SUBRULE\";\n    }\n    else if (prod instanceof Option) {\n        return \"OPTION\";\n    }\n    else if (prod instanceof Alternation) {\n        return \"OR\";\n    }\n    else if (prod instanceof RepetitionMandatory) {\n        return \"AT_LEAST_ONE\";\n    }\n    else if (prod instanceof RepetitionMandatoryWithSeparator) {\n        return \"AT_LEAST_ONE_SEP\";\n    }\n    else if (prod instanceof RepetitionWithSeparator) {\n        return \"MANY_SEP\";\n    }\n    else if (prod instanceof Repetition) {\n        return \"MANY\";\n    }\n    else if (prod instanceof Terminal) {\n        return \"CONSUME\";\n        /* c8 ignore next 3 */\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\n//# sourceMappingURL=helpers.js.map","import { drop, forEach } from \"lodash-es\";\nimport { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Terminal, } from \"@chevrotain/gast\";\n/**\n *  A Grammar Walker that computes the \"remaining\" grammar \"after\" a productions in the grammar.\n */\nexport class RestWalker {\n    walk(prod, prevRest = []) {\n        forEach(prod.definition, (subProd, index) => {\n            const currRest = drop(prod.definition, index + 1);\n            /* istanbul ignore else */\n            if (subProd instanceof NonTerminal) {\n                this.walkProdRef(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Terminal) {\n                this.walkTerminal(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Alternative) {\n                this.walkFlat(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Option) {\n                this.walkOption(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof RepetitionMandatory) {\n                this.walkAtLeastOne(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof RepetitionMandatoryWithSeparator) {\n                this.walkAtLeastOneSep(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof RepetitionWithSeparator) {\n                this.walkManySep(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Repetition) {\n                this.walkMany(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Alternation) {\n                this.walkOr(subProd, currRest, prevRest);\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        });\n    }\n    walkTerminal(terminal, currRest, prevRest) { }\n    walkProdRef(refProd, currRest, prevRest) { }\n    walkFlat(flatProd, currRest, prevRest) {\n        // ABCDEF => after the D the rest is EF\n        const fullOrRest = currRest.concat(prevRest);\n        this.walk(flatProd, fullOrRest);\n    }\n    walkOption(optionProd, currRest, prevRest) {\n        // ABC(DE)?F => after the (DE)? the rest is F\n        const fullOrRest = currRest.concat(prevRest);\n        this.walk(optionProd, fullOrRest);\n    }\n    walkAtLeastOne(atLeastOneProd, currRest, prevRest) {\n        // ABC(DE)+F => after the (DE)+ the rest is (DE)?F\n        const fullAtLeastOneRest = [\n            new Option({ definition: atLeastOneProd.definition }),\n        ].concat(currRest, prevRest);\n        this.walk(atLeastOneProd, fullAtLeastOneRest);\n    }\n    walkAtLeastOneSep(atLeastOneSepProd, currRest, prevRest) {\n        // ABC DE(,DE)* F => after the (,DE)+ the rest is (,DE)?F\n        const fullAtLeastOneSepRest = restForRepetitionWithSeparator(atLeastOneSepProd, currRest, prevRest);\n        this.walk(atLeastOneSepProd, fullAtLeastOneSepRest);\n    }\n    walkMany(manyProd, currRest, prevRest) {\n        // ABC(DE)*F => after the (DE)* the rest is (DE)?F\n        const fullManyRest = [\n            new Option({ definition: manyProd.definition }),\n        ].concat(currRest, prevRest);\n        this.walk(manyProd, fullManyRest);\n    }\n    walkManySep(manySepProd, currRest, prevRest) {\n        // ABC (DE(,DE)*)? F => after the (,DE)* the rest is (,DE)?F\n        const fullManySepRest = restForRepetitionWithSeparator(manySepProd, currRest, prevRest);\n        this.walk(manySepProd, fullManySepRest);\n    }\n    walkOr(orProd, currRest, prevRest) {\n        // ABC(D|E|F)G => when finding the (D|E|F) the rest is G\n        const fullOrRest = currRest.concat(prevRest);\n        // walk all different alternatives\n        forEach(orProd.definition, (alt) => {\n            // wrapping each alternative in a single definition wrapper\n            // to avoid errors in computing the rest of that alternative in the invocation to computeInProdFollows\n            // (otherwise for OR([alt1,alt2]) alt2 will be considered in 'rest' of alt1\n            const prodWrapper = new Alternative({ definition: [alt] });\n            this.walk(prodWrapper, fullOrRest);\n        });\n    }\n}\nfunction restForRepetitionWithSeparator(repSepProd, currRest, prevRest) {\n    const repSepRest = [\n        new Option({\n            definition: [\n                new Terminal({ terminalType: repSepProd.separator }),\n            ].concat(repSepProd.definition),\n        }),\n    ];\n    const fullRepSepRest = repSepRest.concat(currRest, prevRest);\n    return fullRepSepRest;\n}\n//# sourceMappingURL=rest.js.map","import baseUniq from './_baseUniq.js';\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each element\n * is kept. The order of result values is determined by the order they occur\n * in the array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return (array && array.length) ? baseUniq(array) : [];\n}\n\nexport default uniq;\n","import { flatten, map, uniq } from \"lodash-es\";\nimport { isBranchingProd, isOptionalProd, isSequenceProd, NonTerminal, Terminal, } from \"@chevrotain/gast\";\nexport function first(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof NonTerminal) {\n        // this could in theory cause infinite loops if\n        // (1) prod A refs prod B.\n        // (2) prod B refs prod A\n        // (3) AB can match the empty set\n        // in other words a cycle where everything is optional so the first will keep\n        // looking ahead for the next optional part and will never exit\n        // currently there is no safeguard for this unique edge case because\n        // (1) not sure a grammar in which this can happen is useful for anything (productive)\n        return first(prod.referencedRule);\n    }\n    else if (prod instanceof Terminal) {\n        return firstForTerminal(prod);\n    }\n    else if (isSequenceProd(prod)) {\n        return firstForSequence(prod);\n    }\n    else if (isBranchingProd(prod)) {\n        return firstForBranching(prod);\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexport function firstForSequence(prod) {\n    let firstSet = [];\n    const seq = prod.definition;\n    let nextSubProdIdx = 0;\n    let hasInnerProdsRemaining = seq.length > nextSubProdIdx;\n    let currSubProd;\n    // so we enter the loop at least once (if the definition is not empty\n    let isLastInnerProdOptional = true;\n    // scan a sequence until it's end or until we have found a NONE optional production in it\n    while (hasInnerProdsRemaining && isLastInnerProdOptional) {\n        currSubProd = seq[nextSubProdIdx];\n        isLastInnerProdOptional = isOptionalProd(currSubProd);\n        firstSet = firstSet.concat(first(currSubProd));\n        nextSubProdIdx = nextSubProdIdx + 1;\n        hasInnerProdsRemaining = seq.length > nextSubProdIdx;\n    }\n    return uniq(firstSet);\n}\nexport function firstForBranching(prod) {\n    const allAlternativesFirsts = map(prod.definition, (innerProd) => {\n        return first(innerProd);\n    });\n    return uniq(flatten(allAlternativesFirsts));\n}\nexport function firstForTerminal(terminal) {\n    return [terminal.terminalType];\n}\n//# sourceMappingURL=first.js.map","// TODO: can this be removed? where is it used?\nexport const IN = \"_~IN~_\";\n//# sourceMappingURL=constants.js.map","import { RestWalker } from \"./rest.js\";\nimport { first } from \"./first.js\";\nimport { assign, forEach } from \"lodash-es\";\nimport { IN } from \"../constants.js\";\nimport { Alternative } from \"@chevrotain/gast\";\n// This ResyncFollowsWalker computes all of the follows required for RESYNC\n// (skipping reference production).\nexport class ResyncFollowsWalker extends RestWalker {\n    constructor(topProd) {\n        super();\n        this.topProd = topProd;\n        this.follows = {};\n    }\n    startWalking() {\n        this.walk(this.topProd);\n        return this.follows;\n    }\n    walkTerminal(terminal, currRest, prevRest) {\n        // do nothing! just like in the public sector after 13:00\n    }\n    walkProdRef(refProd, currRest, prevRest) {\n        const followName = buildBetweenProdsFollowPrefix(refProd.referencedRule, refProd.idx) +\n            this.topProd.name;\n        const fullRest = currRest.concat(prevRest);\n        const restProd = new Alternative({ definition: fullRest });\n        const t_in_topProd_follows = first(restProd);\n        this.follows[followName] = t_in_topProd_follows;\n    }\n}\nexport function computeAllProdsFollows(topProductions) {\n    const reSyncFollows = {};\n    forEach(topProductions, (topProd) => {\n        const currRefsFollow = new ResyncFollowsWalker(topProd).startWalking();\n        assign(reSyncFollows, currRefsFollow);\n    });\n    return reSyncFollows;\n}\nexport function buildBetweenProdsFollowPrefix(inner, occurenceInParent) {\n    return inner.name + occurenceInParent + IN;\n}\nexport function buildInProdFollowPrefix(terminal) {\n    const terminalName = terminal.terminalType.name;\n    return terminalName + terminal.idx + IN;\n}\n//# sourceMappingURL=follow.js.map","/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that negates the result of the predicate `func`. The\n * `func` predicate is invoked with the `this` binding and arguments of the\n * created function.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} predicate The predicate to negate.\n * @returns {Function} Returns the new negated function.\n * @example\n *\n * function isEven(n) {\n *   return n % 2 == 0;\n * }\n *\n * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n * // => [1, 3, 5]\n */\nfunction negate(predicate) {\n  if (typeof predicate != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return function() {\n    var args = arguments;\n    switch (args.length) {\n      case 0: return !predicate.call(this);\n      case 1: return !predicate.call(this, args[0]);\n      case 2: return !predicate.call(this, args[0], args[1]);\n      case 3: return !predicate.call(this, args[0], args[1], args[2]);\n    }\n    return !predicate.apply(this, args);\n  };\n}\n\nexport default negate;\n","import arrayFilter from './_arrayFilter.js';\nimport baseFilter from './_baseFilter.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\nimport negate from './negate.js';\n\n/**\n * The opposite of `_.filter`; this method returns the elements of `collection`\n * that `predicate` does **not** return truthy for.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.filter\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': false },\n *   { 'user': 'fred',   'age': 40, 'active': true }\n * ];\n *\n * _.reject(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.reject(users, { 'age': 40, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.reject(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.reject(users, 'active');\n * // => objects for ['barney']\n */\nfunction reject(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, negate(baseIteratee(predicate, 3)));\n}\n\nexport default reject;\n","import baseIndexOf from './_baseIndexOf.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Gets the index at which the first occurrence of `value` is found in `array`\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. If `fromIndex` is negative, it's used as the\n * offset from the end of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n * @example\n *\n * _.indexOf([1, 2, 1, 2], 2);\n * // => 1\n *\n * // Search from the `fromIndex`.\n * _.indexOf([1, 2, 1, 2], 2, 2);\n * // => 3\n */\nfunction indexOf(array, value, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseIndexOf(array, value, index);\n}\n\nexport default indexOf;\n","import SetCache from './_SetCache.js';\nimport arrayIncludes from './_arrayIncludes.js';\nimport arrayIncludesWith from './_arrayIncludesWith.js';\nimport arrayMap from './_arrayMap.js';\nimport baseUnary from './_baseUnary.js';\nimport cacheHas from './_cacheHas.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of methods like `_.difference` without support\n * for excluding multiple arrays or iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Array} values The values to exclude.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n */\nfunction baseDifference(array, values, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      isCommon = true,\n      length = array.length,\n      result = [],\n      valuesLength = values.length;\n\n  if (!length) {\n    return result;\n  }\n  if (iteratee) {\n    values = arrayMap(values, baseUnary(iteratee));\n  }\n  if (comparator) {\n    includes = arrayIncludesWith;\n    isCommon = false;\n  }\n  else if (values.length >= LARGE_ARRAY_SIZE) {\n    includes = cacheHas;\n    isCommon = false;\n    values = new SetCache(values);\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee == null ? value : iteratee(value);\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var valuesIndex = valuesLength;\n      while (valuesIndex--) {\n        if (values[valuesIndex] === computed) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    }\n    else if (!includes(values, computed, comparator)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nexport default baseDifference;\n","import baseDifference from './_baseDifference.js';\nimport baseFlatten from './_baseFlatten.js';\nimport baseRest from './_baseRest.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\n\n/**\n * Creates an array of `array` values not included in the other given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * **Note:** Unlike `_.pullAll`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.without, _.xor\n * @example\n *\n * _.difference([2, 1], [2, 3]);\n * // => [1]\n */\nvar difference = baseRest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n    : [];\n});\n\nexport default difference;\n","/**\n * Creates an array with all falsey values removed. The values `false`, `null`,\n * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to compact.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * _.compact([0, 1, false, 2, '', 3]);\n * // => [1, 2, 3]\n */\nfunction compact(array) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (value) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nexport default compact;\n","/**\n * Gets the first element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias first\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the first element of `array`.\n * @example\n *\n * _.head([1, 2, 3]);\n * // => 1\n *\n * _.head([]);\n * // => undefined\n */\nfunction head(array) {\n  return (array && array.length) ? array[0] : undefined;\n}\n\nexport default head;\n","export function PRINT_ERROR(msg) {\n    /* istanbul ignore else - can't override global.console in node.js */\n    if (console && console.error) {\n        console.error(`Error: ${msg}`);\n    }\n}\nexport function PRINT_WARNING(msg) {\n    /* istanbul ignore else - can't override global.console in node.js*/\n    if (console && console.warn) {\n        // TODO: modify docs accordingly\n        console.warn(`Warning: ${msg}`);\n    }\n}\n//# sourceMappingURL=print.js.map","import { RegExpParser, } from \"@chevrotain/regexp-to-ast\";\nlet regExpAstCache = {};\nconst regExpParser = new RegExpParser();\nexport function getRegExpAst(regExp) {\n    const regExpStr = regExp.toString();\n    if (regExpAstCache.hasOwnProperty(regExpStr)) {\n        return regExpAstCache[regExpStr];\n    }\n    else {\n        const regExpAst = regExpParser.pattern(regExpStr);\n        regExpAstCache[regExpStr] = regExpAst;\n        return regExpAst;\n    }\n}\nexport function clearRegExpParserCache() {\n    regExpAstCache = {};\n}\n//# sourceMappingURL=reg_exp_parser.js.map","import { BaseRegExpVisitor, } from \"@chevrotain/regexp-to-ast\";\nimport { every, find, forEach, includes, isArray, values } from \"lodash-es\";\nimport { PRINT_ERROR, PRINT_WARNING } from \"@chevrotain/utils\";\nimport { getRegExpAst } from \"./reg_exp_parser.js\";\nimport { charCodeToOptimizedIndex, minOptimizationVal } from \"./lexer.js\";\nconst complementErrorMessage = \"Complement Sets are not supported for first char optimization\";\nexport const failedOptimizationPrefixMsg = 'Unable to use \"first char\" lexer optimizations:\\n';\nexport function getOptimizedStartCodesIndices(regExp, ensureOptimizations = false) {\n    try {\n        const ast = getRegExpAst(regExp);\n        const firstChars = firstCharOptimizedIndices(ast.value, {}, ast.flags.ignoreCase);\n        return firstChars;\n    }\n    catch (e) {\n        /* istanbul ignore next */\n        // Testing this relies on the regexp-to-ast library having a bug... */\n        // TODO: only the else branch needs to be ignored, try to fix with newer prettier / tsc\n        if (e.message === complementErrorMessage) {\n            if (ensureOptimizations) {\n                PRINT_WARNING(`${failedOptimizationPrefixMsg}` +\n                    `\\tUnable to optimize: < ${regExp.toString()} >\\n` +\n                    \"\\tComplement Sets cannot be automatically optimized.\\n\" +\n                    \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                    \"\\tSee: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#COMPLEMENT for details.\");\n            }\n        }\n        else {\n            let msgSuffix = \"\";\n            if (ensureOptimizations) {\n                msgSuffix =\n                    \"\\n\\tThis will disable the lexer's first char optimizations.\\n\" +\n                        \"\\tSee: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#REGEXP_PARSING for details.\";\n            }\n            PRINT_ERROR(`${failedOptimizationPrefixMsg}\\n` +\n                `\\tFailed parsing: < ${regExp.toString()} >\\n` +\n                `\\tUsing the @chevrotain/regexp-to-ast library\\n` +\n                \"\\tPlease open an issue at: https://github.com/chevrotain/chevrotain/issues\" +\n                msgSuffix);\n        }\n    }\n    return [];\n}\nexport function firstCharOptimizedIndices(ast, result, ignoreCase) {\n    switch (ast.type) {\n        case \"Disjunction\":\n            for (let i = 0; i < ast.value.length; i++) {\n                firstCharOptimizedIndices(ast.value[i], result, ignoreCase);\n            }\n            break;\n        case \"Alternative\":\n            const terms = ast.value;\n            for (let i = 0; i < terms.length; i++) {\n                const term = terms[i];\n                // skip terms that cannot effect the first char results\n                switch (term.type) {\n                    case \"EndAnchor\":\n                    // A group back reference cannot affect potential starting char.\n                    // because if a back reference is the first production than automatically\n                    // the group being referenced has had to come BEFORE so its codes have already been added\n                    case \"GroupBackReference\":\n                    // assertions do not affect potential starting codes\n                    case \"Lookahead\":\n                    case \"NegativeLookahead\":\n                    case \"StartAnchor\":\n                    case \"WordBoundary\":\n                    case \"NonWordBoundary\":\n                        continue;\n                }\n                const atom = term;\n                switch (atom.type) {\n                    case \"Character\":\n                        addOptimizedIdxToResult(atom.value, result, ignoreCase);\n                        break;\n                    case \"Set\":\n                        if (atom.complement === true) {\n                            throw Error(complementErrorMessage);\n                        }\n                        forEach(atom.value, (code) => {\n                            if (typeof code === \"number\") {\n                                addOptimizedIdxToResult(code, result, ignoreCase);\n                            }\n                            else {\n                                // range\n                                const range = code;\n                                // cannot optimize when ignoreCase is\n                                if (ignoreCase === true) {\n                                    for (let rangeCode = range.from; rangeCode <= range.to; rangeCode++) {\n                                        addOptimizedIdxToResult(rangeCode, result, ignoreCase);\n                                    }\n                                }\n                                // Optimization (2 orders of magnitude less work for very large ranges)\n                                else {\n                                    // handle unoptimized values\n                                    for (let rangeCode = range.from; rangeCode <= range.to && rangeCode < minOptimizationVal; rangeCode++) {\n                                        addOptimizedIdxToResult(rangeCode, result, ignoreCase);\n                                    }\n                                    // Less common charCode where we optimize for faster init time, by using larger \"buckets\"\n                                    if (range.to >= minOptimizationVal) {\n                                        const minUnOptVal = range.from >= minOptimizationVal\n                                            ? range.from\n                                            : minOptimizationVal;\n                                        const maxUnOptVal = range.to;\n                                        const minOptIdx = charCodeToOptimizedIndex(minUnOptVal);\n                                        const maxOptIdx = charCodeToOptimizedIndex(maxUnOptVal);\n                                        for (let currOptIdx = minOptIdx; currOptIdx <= maxOptIdx; currOptIdx++) {\n                                            result[currOptIdx] = currOptIdx;\n                                        }\n                                    }\n                                }\n                            }\n                        });\n                        break;\n                    case \"Group\":\n                        firstCharOptimizedIndices(atom.value, result, ignoreCase);\n                        break;\n                    /* istanbul ignore next */\n                    default:\n                        throw Error(\"Non Exhaustive Match\");\n                }\n                // reached a mandatory production, no more **start** codes can be found on this alternative\n                const isOptionalQuantifier = atom.quantifier !== undefined && atom.quantifier.atLeast === 0;\n                if (\n                // A group may be optional due to empty contents /(?:)/\n                // or if everything inside it is optional /((a)?)/\n                (atom.type === \"Group\" && isWholeOptional(atom) === false) ||\n                    // If this term is not a group it may only be optional if it has an optional quantifier\n                    (atom.type !== \"Group\" && isOptionalQuantifier === false)) {\n                    break;\n                }\n            }\n            break;\n        /* istanbul ignore next */\n        default:\n            throw Error(\"non exhaustive match!\");\n    }\n    // console.log(Object.keys(result).length)\n    return values(result);\n}\nfunction addOptimizedIdxToResult(code, result, ignoreCase) {\n    const optimizedCharIdx = charCodeToOptimizedIndex(code);\n    result[optimizedCharIdx] = optimizedCharIdx;\n    if (ignoreCase === true) {\n        handleIgnoreCase(code, result);\n    }\n}\nfunction handleIgnoreCase(code, result) {\n    const char = String.fromCharCode(code);\n    const upperChar = char.toUpperCase();\n    /* istanbul ignore else */\n    if (upperChar !== char) {\n        const optimizedCharIdx = charCodeToOptimizedIndex(upperChar.charCodeAt(0));\n        result[optimizedCharIdx] = optimizedCharIdx;\n    }\n    else {\n        const lowerChar = char.toLowerCase();\n        if (lowerChar !== char) {\n            const optimizedCharIdx = charCodeToOptimizedIndex(lowerChar.charCodeAt(0));\n            result[optimizedCharIdx] = optimizedCharIdx;\n        }\n    }\n}\nfunction findCode(setNode, targetCharCodes) {\n    return find(setNode.value, (codeOrRange) => {\n        if (typeof codeOrRange === \"number\") {\n            return includes(targetCharCodes, codeOrRange);\n        }\n        else {\n            // range\n            const range = codeOrRange;\n            return (find(targetCharCodes, (targetCode) => range.from <= targetCode && targetCode <= range.to) !== undefined);\n        }\n    });\n}\nfunction isWholeOptional(ast) {\n    const quantifier = ast.quantifier;\n    if (quantifier && quantifier.atLeast === 0) {\n        return true;\n    }\n    if (!ast.value) {\n        return false;\n    }\n    return isArray(ast.value)\n        ? every(ast.value, isWholeOptional)\n        : isWholeOptional(ast.value);\n}\nclass CharCodeFinder extends BaseRegExpVisitor {\n    constructor(targetCharCodes) {\n        super();\n        this.targetCharCodes = targetCharCodes;\n        this.found = false;\n    }\n    visitChildren(node) {\n        // No need to keep looking...\n        if (this.found === true) {\n            return;\n        }\n        // switch lookaheads as they do not actually consume any characters thus\n        // finding a charCode at lookahead context does not mean that regexp can actually contain it in a match.\n        switch (node.type) {\n            case \"Lookahead\":\n                this.visitLookahead(node);\n                return;\n            case \"NegativeLookahead\":\n                this.visitNegativeLookahead(node);\n                return;\n        }\n        super.visitChildren(node);\n    }\n    visitCharacter(node) {\n        if (includes(this.targetCharCodes, node.value)) {\n            this.found = true;\n        }\n    }\n    visitSet(node) {\n        if (node.complement) {\n            if (findCode(node, this.targetCharCodes) === undefined) {\n                this.found = true;\n            }\n        }\n        else {\n            if (findCode(node, this.targetCharCodes) !== undefined) {\n                this.found = true;\n            }\n        }\n    }\n}\nexport function canMatchCharCode(charCodes, pattern) {\n    if (pattern instanceof RegExp) {\n        const ast = getRegExpAst(pattern);\n        const charCodeFinder = new CharCodeFinder(charCodes);\n        charCodeFinder.visit(ast);\n        return charCodeFinder.found;\n    }\n    else {\n        return (find(pattern, (char) => {\n            return includes(charCodes, char.charCodeAt(0));\n        }) !== undefined);\n    }\n}\n//# sourceMappingURL=reg_exp.js.map","import { BaseRegExpVisitor } from \"@chevrotain/regexp-to-ast\";\nimport { Lexer, LexerDefinitionErrorType, } from \"./lexer_public.js\";\nimport { compact, defaults, difference, filter, find, first, flatten, forEach, has, includes, indexOf, isArray, isEmpty, isFunction, isRegExp, isString, isUndefined, keys, map, reduce, reject, values, } from \"lodash-es\";\nimport { PRINT_ERROR } from \"@chevrotain/utils\";\nimport { canMatchCharCode, failedOptimizationPrefixMsg, getOptimizedStartCodesIndices, } from \"./reg_exp.js\";\nimport { getRegExpAst } from \"./reg_exp_parser.js\";\nconst PATTERN = \"PATTERN\";\nexport const DEFAULT_MODE = \"defaultMode\";\nexport const MODES = \"modes\";\nexport let SUPPORT_STICKY = typeof new RegExp(\"(?:)\").sticky === \"boolean\";\nexport function disableSticky() {\n    SUPPORT_STICKY = false;\n}\nexport function enableSticky() {\n    SUPPORT_STICKY = true;\n}\nexport function analyzeTokenTypes(tokenTypes, options) {\n    options = defaults(options, {\n        useSticky: SUPPORT_STICKY,\n        debug: false,\n        safeMode: false,\n        positionTracking: \"full\",\n        lineTerminatorCharacters: [\"\\r\", \"\\n\"],\n        tracer: (msg, action) => action(),\n    });\n    const tracer = options.tracer;\n    tracer(\"initCharCodeToOptimizedIndexMap\", () => {\n        initCharCodeToOptimizedIndexMap();\n    });\n    let onlyRelevantTypes;\n    tracer(\"Reject Lexer.NA\", () => {\n        onlyRelevantTypes = reject(tokenTypes, (currType) => {\n            return currType[PATTERN] === Lexer.NA;\n        });\n    });\n    let hasCustom = false;\n    let allTransformedPatterns;\n    tracer(\"Transform Patterns\", () => {\n        hasCustom = false;\n        allTransformedPatterns = map(onlyRelevantTypes, (currType) => {\n            const currPattern = currType[PATTERN];\n            /* istanbul ignore else */\n            if (isRegExp(currPattern)) {\n                const regExpSource = currPattern.source;\n                if (regExpSource.length === 1 &&\n                    // only these regExp meta characters which can appear in a length one regExp\n                    regExpSource !== \"^\" &&\n                    regExpSource !== \"$\" &&\n                    regExpSource !== \".\" &&\n                    !currPattern.ignoreCase) {\n                    return regExpSource;\n                }\n                else if (regExpSource.length === 2 &&\n                    regExpSource[0] === \"\\\\\" &&\n                    // not a meta character\n                    !includes([\n                        \"d\",\n                        \"D\",\n                        \"s\",\n                        \"S\",\n                        \"t\",\n                        \"r\",\n                        \"n\",\n                        \"t\",\n                        \"0\",\n                        \"c\",\n                        \"b\",\n                        \"B\",\n                        \"f\",\n                        \"v\",\n                        \"w\",\n                        \"W\",\n                    ], regExpSource[1])) {\n                    // escaped meta Characters: /\\+/ /\\[/\n                    // or redundant escaping: /\\a/\n                    // without the escaping \"\\\"\n                    return regExpSource[1];\n                }\n                else {\n                    return options.useSticky\n                        ? addStickyFlag(currPattern)\n                        : addStartOfInput(currPattern);\n                }\n            }\n            else if (isFunction(currPattern)) {\n                hasCustom = true;\n                // CustomPatternMatcherFunc - custom patterns do not require any transformations, only wrapping in a RegExp Like object\n                return { exec: currPattern };\n            }\n            else if (typeof currPattern === \"object\") {\n                hasCustom = true;\n                // ICustomPattern\n                return currPattern;\n            }\n            else if (typeof currPattern === \"string\") {\n                if (currPattern.length === 1) {\n                    return currPattern;\n                }\n                else {\n                    const escapedRegExpString = currPattern.replace(/[\\\\^$.*+?()[\\]{}|]/g, \"\\\\$&\");\n                    const wrappedRegExp = new RegExp(escapedRegExpString);\n                    return options.useSticky\n                        ? addStickyFlag(wrappedRegExp)\n                        : addStartOfInput(wrappedRegExp);\n                }\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        });\n    });\n    let patternIdxToType;\n    let patternIdxToGroup;\n    let patternIdxToLongerAltIdxArr;\n    let patternIdxToPushMode;\n    let patternIdxToPopMode;\n    tracer(\"misc mapping\", () => {\n        patternIdxToType = map(onlyRelevantTypes, (currType) => currType.tokenTypeIdx);\n        patternIdxToGroup = map(onlyRelevantTypes, (clazz) => {\n            const groupName = clazz.GROUP;\n            /* istanbul ignore next */\n            if (groupName === Lexer.SKIPPED) {\n                return undefined;\n            }\n            else if (isString(groupName)) {\n                return groupName;\n            }\n            else if (isUndefined(groupName)) {\n                return false;\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        });\n        patternIdxToLongerAltIdxArr = map(onlyRelevantTypes, (clazz) => {\n            const longerAltType = clazz.LONGER_ALT;\n            if (longerAltType) {\n                const longerAltIdxArr = isArray(longerAltType)\n                    ? map(longerAltType, (type) => indexOf(onlyRelevantTypes, type))\n                    : [indexOf(onlyRelevantTypes, longerAltType)];\n                return longerAltIdxArr;\n            }\n        });\n        patternIdxToPushMode = map(onlyRelevantTypes, (clazz) => clazz.PUSH_MODE);\n        patternIdxToPopMode = map(onlyRelevantTypes, (clazz) => has(clazz, \"POP_MODE\"));\n    });\n    let patternIdxToCanLineTerminator;\n    tracer(\"Line Terminator Handling\", () => {\n        const lineTerminatorCharCodes = getCharCodes(options.lineTerminatorCharacters);\n        patternIdxToCanLineTerminator = map(onlyRelevantTypes, (tokType) => false);\n        if (options.positionTracking !== \"onlyOffset\") {\n            patternIdxToCanLineTerminator = map(onlyRelevantTypes, (tokType) => {\n                if (has(tokType, \"LINE_BREAKS\")) {\n                    return !!tokType.LINE_BREAKS;\n                }\n                else {\n                    return (checkLineBreaksIssues(tokType, lineTerminatorCharCodes) === false &&\n                        canMatchCharCode(lineTerminatorCharCodes, tokType.PATTERN));\n                }\n            });\n        }\n    });\n    let patternIdxToIsCustom;\n    let patternIdxToShort;\n    let emptyGroups;\n    let patternIdxToConfig;\n    tracer(\"Misc Mapping #2\", () => {\n        patternIdxToIsCustom = map(onlyRelevantTypes, isCustomPattern);\n        patternIdxToShort = map(allTransformedPatterns, isShortPattern);\n        emptyGroups = reduce(onlyRelevantTypes, (acc, clazz) => {\n            const groupName = clazz.GROUP;\n            if (isString(groupName) && !(groupName === Lexer.SKIPPED)) {\n                acc[groupName] = [];\n            }\n            return acc;\n        }, {});\n        patternIdxToConfig = map(allTransformedPatterns, (x, idx) => {\n            return {\n                pattern: allTransformedPatterns[idx],\n                longerAlt: patternIdxToLongerAltIdxArr[idx],\n                canLineTerminator: patternIdxToCanLineTerminator[idx],\n                isCustom: patternIdxToIsCustom[idx],\n                short: patternIdxToShort[idx],\n                group: patternIdxToGroup[idx],\n                push: patternIdxToPushMode[idx],\n                pop: patternIdxToPopMode[idx],\n                tokenTypeIdx: patternIdxToType[idx],\n                tokenType: onlyRelevantTypes[idx],\n            };\n        });\n    });\n    let canBeOptimized = true;\n    let charCodeToPatternIdxToConfig = [];\n    if (!options.safeMode) {\n        tracer(\"First Char Optimization\", () => {\n            charCodeToPatternIdxToConfig = reduce(onlyRelevantTypes, (result, currTokType, idx) => {\n                if (typeof currTokType.PATTERN === \"string\") {\n                    const charCode = currTokType.PATTERN.charCodeAt(0);\n                    const optimizedIdx = charCodeToOptimizedIndex(charCode);\n                    addToMapOfArrays(result, optimizedIdx, patternIdxToConfig[idx]);\n                }\n                else if (isArray(currTokType.START_CHARS_HINT)) {\n                    let lastOptimizedIdx;\n                    forEach(currTokType.START_CHARS_HINT, (charOrInt) => {\n                        const charCode = typeof charOrInt === \"string\"\n                            ? charOrInt.charCodeAt(0)\n                            : charOrInt;\n                        const currOptimizedIdx = charCodeToOptimizedIndex(charCode);\n                        // Avoid adding the config multiple times\n                        /* istanbul ignore else */\n                        // - Difficult to check this scenario effects as it is only a performance\n                        //   optimization that does not change correctness\n                        if (lastOptimizedIdx !== currOptimizedIdx) {\n                            lastOptimizedIdx = currOptimizedIdx;\n                            addToMapOfArrays(result, currOptimizedIdx, patternIdxToConfig[idx]);\n                        }\n                    });\n                }\n                else if (isRegExp(currTokType.PATTERN)) {\n                    if (currTokType.PATTERN.unicode) {\n                        canBeOptimized = false;\n                        if (options.ensureOptimizations) {\n                            PRINT_ERROR(`${failedOptimizationPrefixMsg}` +\n                                `\\tUnable to analyze < ${currTokType.PATTERN.toString()} > pattern.\\n` +\n                                \"\\tThe regexp unicode flag is not currently supported by the regexp-to-ast library.\\n\" +\n                                \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                                \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#UNICODE_OPTIMIZE\");\n                        }\n                    }\n                    else {\n                        const optimizedCodes = getOptimizedStartCodesIndices(currTokType.PATTERN, options.ensureOptimizations);\n                        /* istanbul ignore if */\n                        // start code will only be empty given an empty regExp or failure of regexp-to-ast library\n                        // the first should be a different validation and the second cannot be tested.\n                        if (isEmpty(optimizedCodes)) {\n                            // we cannot understand what codes may start possible matches\n                            // The optimization correctness requires knowing start codes for ALL patterns.\n                            // Not actually sure this is an error, no debug message\n                            canBeOptimized = false;\n                        }\n                        forEach(optimizedCodes, (code) => {\n                            addToMapOfArrays(result, code, patternIdxToConfig[idx]);\n                        });\n                    }\n                }\n                else {\n                    if (options.ensureOptimizations) {\n                        PRINT_ERROR(`${failedOptimizationPrefixMsg}` +\n                            `\\tTokenType: <${currTokType.name}> is using a custom token pattern without providing <start_chars_hint> parameter.\\n` +\n                            \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#CUSTOM_OPTIMIZE\");\n                    }\n                    canBeOptimized = false;\n                }\n                return result;\n            }, []);\n        });\n    }\n    return {\n        emptyGroups: emptyGroups,\n        patternIdxToConfig: patternIdxToConfig,\n        charCodeToPatternIdxToConfig: charCodeToPatternIdxToConfig,\n        hasCustom: hasCustom,\n        canBeOptimized: canBeOptimized,\n    };\n}\nexport function validatePatterns(tokenTypes, validModesNames) {\n    let errors = [];\n    const missingResult = findMissingPatterns(tokenTypes);\n    errors = errors.concat(missingResult.errors);\n    const invalidResult = findInvalidPatterns(missingResult.valid);\n    const validTokenTypes = invalidResult.valid;\n    errors = errors.concat(invalidResult.errors);\n    errors = errors.concat(validateRegExpPattern(validTokenTypes));\n    errors = errors.concat(findInvalidGroupType(validTokenTypes));\n    errors = errors.concat(findModesThatDoNotExist(validTokenTypes, validModesNames));\n    errors = errors.concat(findUnreachablePatterns(validTokenTypes));\n    return errors;\n}\nfunction validateRegExpPattern(tokenTypes) {\n    let errors = [];\n    const withRegExpPatterns = filter(tokenTypes, (currTokType) => isRegExp(currTokType[PATTERN]));\n    errors = errors.concat(findEndOfInputAnchor(withRegExpPatterns));\n    errors = errors.concat(findStartOfInputAnchor(withRegExpPatterns));\n    errors = errors.concat(findUnsupportedFlags(withRegExpPatterns));\n    errors = errors.concat(findDuplicatePatterns(withRegExpPatterns));\n    errors = errors.concat(findEmptyMatchRegExps(withRegExpPatterns));\n    return errors;\n}\nexport function findMissingPatterns(tokenTypes) {\n    const tokenTypesWithMissingPattern = filter(tokenTypes, (currType) => {\n        return !has(currType, PATTERN);\n    });\n    const errors = map(tokenTypesWithMissingPattern, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- missing static 'PATTERN' property\",\n            type: LexerDefinitionErrorType.MISSING_PATTERN,\n            tokenTypes: [currType],\n        };\n    });\n    const valid = difference(tokenTypes, tokenTypesWithMissingPattern);\n    return { errors, valid };\n}\nexport function findInvalidPatterns(tokenTypes) {\n    const tokenTypesWithInvalidPattern = filter(tokenTypes, (currType) => {\n        const pattern = currType[PATTERN];\n        return (!isRegExp(pattern) &&\n            !isFunction(pattern) &&\n            !has(pattern, \"exec\") &&\n            !isString(pattern));\n    });\n    const errors = map(tokenTypesWithInvalidPattern, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' can only be a RegExp, a\" +\n                \" Function matching the {CustomPatternMatcherFunc} type or an Object matching the {ICustomPattern} interface.\",\n            type: LexerDefinitionErrorType.INVALID_PATTERN,\n            tokenTypes: [currType],\n        };\n    });\n    const valid = difference(tokenTypes, tokenTypesWithInvalidPattern);\n    return { errors, valid };\n}\nconst end_of_input = /[^\\\\][$]/;\nexport function findEndOfInputAnchor(tokenTypes) {\n    class EndAnchorFinder extends BaseRegExpVisitor {\n        constructor() {\n            super(...arguments);\n            this.found = false;\n        }\n        visitEndAnchor(node) {\n            this.found = true;\n        }\n    }\n    const invalidRegex = filter(tokenTypes, (currType) => {\n        const pattern = currType.PATTERN;\n        try {\n            const regexpAst = getRegExpAst(pattern);\n            const endAnchorVisitor = new EndAnchorFinder();\n            endAnchorVisitor.visit(regexpAst);\n            return endAnchorVisitor.found;\n        }\n        catch (e) {\n            // old behavior in case of runtime exceptions with regexp-to-ast.\n            /* istanbul ignore next - cannot ensure an error in regexp-to-ast*/\n            return end_of_input.test(pattern.source);\n        }\n    });\n    const errors = map(invalidRegex, (currType) => {\n        return {\n            message: \"Unexpected RegExp Anchor Error:\\n\" +\n                \"\\tToken Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' cannot contain end of input anchor '$'\\n\" +\n                \"\\tSee chevrotain.io/docs/guide/resolving_lexer_errors.html#ANCHORS\" +\n                \"\\tfor details.\",\n            type: LexerDefinitionErrorType.EOI_ANCHOR_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nexport function findEmptyMatchRegExps(tokenTypes) {\n    const matchesEmptyString = filter(tokenTypes, (currType) => {\n        const pattern = currType.PATTERN;\n        return pattern.test(\"\");\n    });\n    const errors = map(matchesEmptyString, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' must not match an empty string\",\n            type: LexerDefinitionErrorType.EMPTY_MATCH_PATTERN,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nconst start_of_input = /[^\\\\[][\\^]|^\\^/;\nexport function findStartOfInputAnchor(tokenTypes) {\n    class StartAnchorFinder extends BaseRegExpVisitor {\n        constructor() {\n            super(...arguments);\n            this.found = false;\n        }\n        visitStartAnchor(node) {\n            this.found = true;\n        }\n    }\n    const invalidRegex = filter(tokenTypes, (currType) => {\n        const pattern = currType.PATTERN;\n        try {\n            const regexpAst = getRegExpAst(pattern);\n            const startAnchorVisitor = new StartAnchorFinder();\n            startAnchorVisitor.visit(regexpAst);\n            return startAnchorVisitor.found;\n        }\n        catch (e) {\n            // old behavior in case of runtime exceptions with regexp-to-ast.\n            /* istanbul ignore next - cannot ensure an error in regexp-to-ast*/\n            return start_of_input.test(pattern.source);\n        }\n    });\n    const errors = map(invalidRegex, (currType) => {\n        return {\n            message: \"Unexpected RegExp Anchor Error:\\n\" +\n                \"\\tToken Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' cannot contain start of input anchor '^'\\n\" +\n                \"\\tSee https://chevrotain.io/docs/guide/resolving_lexer_errors.html#ANCHORS\" +\n                \"\\tfor details.\",\n            type: LexerDefinitionErrorType.SOI_ANCHOR_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nexport function findUnsupportedFlags(tokenTypes) {\n    const invalidFlags = filter(tokenTypes, (currType) => {\n        const pattern = currType[PATTERN];\n        return pattern instanceof RegExp && (pattern.multiline || pattern.global);\n    });\n    const errors = map(invalidFlags, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' may NOT contain global('g') or multiline('m')\",\n            type: LexerDefinitionErrorType.UNSUPPORTED_FLAGS_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\n// This can only test for identical duplicate RegExps, not semantically equivalent ones.\nexport function findDuplicatePatterns(tokenTypes) {\n    const found = [];\n    let identicalPatterns = map(tokenTypes, (outerType) => {\n        return reduce(tokenTypes, (result, innerType) => {\n            if (outerType.PATTERN.source === innerType.PATTERN.source &&\n                !includes(found, innerType) &&\n                innerType.PATTERN !== Lexer.NA) {\n                // this avoids duplicates in the result, each Token Type may only appear in one \"set\"\n                // in essence we are creating Equivalence classes on equality relation.\n                found.push(innerType);\n                result.push(innerType);\n                return result;\n            }\n            return result;\n        }, []);\n    });\n    identicalPatterns = compact(identicalPatterns);\n    const duplicatePatterns = filter(identicalPatterns, (currIdenticalSet) => {\n        return currIdenticalSet.length > 1;\n    });\n    const errors = map(duplicatePatterns, (setOfIdentical) => {\n        const tokenTypeNames = map(setOfIdentical, (currType) => {\n            return currType.name;\n        });\n        const dupPatternSrc = first(setOfIdentical).PATTERN;\n        return {\n            message: `The same RegExp pattern ->${dupPatternSrc}<-` +\n                `has been used in all of the following Token Types: ${tokenTypeNames.join(\", \")} <-`,\n            type: LexerDefinitionErrorType.DUPLICATE_PATTERNS_FOUND,\n            tokenTypes: setOfIdentical,\n        };\n    });\n    return errors;\n}\nexport function findInvalidGroupType(tokenTypes) {\n    const invalidTypes = filter(tokenTypes, (clazz) => {\n        if (!has(clazz, \"GROUP\")) {\n            return false;\n        }\n        const group = clazz.GROUP;\n        return group !== Lexer.SKIPPED && group !== Lexer.NA && !isString(group);\n    });\n    const errors = map(invalidTypes, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'GROUP' can only be Lexer.SKIPPED/Lexer.NA/A String\",\n            type: LexerDefinitionErrorType.INVALID_GROUP_TYPE_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nexport function findModesThatDoNotExist(tokenTypes, validModes) {\n    const invalidModes = filter(tokenTypes, (clazz) => {\n        return (clazz.PUSH_MODE !== undefined && !includes(validModes, clazz.PUSH_MODE));\n    });\n    const errors = map(invalidModes, (tokType) => {\n        const msg = `Token Type: ->${tokType.name}<- static 'PUSH_MODE' value cannot refer to a Lexer Mode ->${tokType.PUSH_MODE}<-` +\n            `which does not exist`;\n        return {\n            message: msg,\n            type: LexerDefinitionErrorType.PUSH_MODE_DOES_NOT_EXIST,\n            tokenTypes: [tokType],\n        };\n    });\n    return errors;\n}\nexport function findUnreachablePatterns(tokenTypes) {\n    const errors = [];\n    const canBeTested = reduce(tokenTypes, (result, tokType, idx) => {\n        const pattern = tokType.PATTERN;\n        if (pattern === Lexer.NA) {\n            return result;\n        }\n        // a more comprehensive validation for all forms of regExps would require\n        // deeper regExp analysis capabilities\n        if (isString(pattern)) {\n            result.push({ str: pattern, idx, tokenType: tokType });\n        }\n        else if (isRegExp(pattern) && noMetaChar(pattern)) {\n            result.push({ str: pattern.source, idx, tokenType: tokType });\n        }\n        return result;\n    }, []);\n    forEach(tokenTypes, (tokType, testIdx) => {\n        forEach(canBeTested, ({ str, idx, tokenType }) => {\n            if (testIdx < idx && testTokenType(str, tokType.PATTERN)) {\n                const msg = `Token: ->${tokenType.name}<- can never be matched.\\n` +\n                    `Because it appears AFTER the Token Type ->${tokType.name}<-` +\n                    `in the lexer's definition.\\n` +\n                    `See https://chevrotain.io/docs/guide/resolving_lexer_errors.html#UNREACHABLE`;\n                errors.push({\n                    message: msg,\n                    type: LexerDefinitionErrorType.UNREACHABLE_PATTERN,\n                    tokenTypes: [tokType, tokenType],\n                });\n            }\n        });\n    });\n    return errors;\n}\nfunction testTokenType(str, pattern) {\n    /* istanbul ignore else */\n    if (isRegExp(pattern)) {\n        const regExpArray = pattern.exec(str);\n        return regExpArray !== null && regExpArray.index === 0;\n    }\n    else if (isFunction(pattern)) {\n        // maintain the API of custom patterns\n        return pattern(str, 0, [], {});\n    }\n    else if (has(pattern, \"exec\")) {\n        // maintain the API of custom patterns\n        return pattern.exec(str, 0, [], {});\n    }\n    else if (typeof pattern === \"string\") {\n        return pattern === str;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction noMetaChar(regExp) {\n    //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\n    const metaChars = [\n        \".\",\n        \"\\\\\",\n        \"[\",\n        \"]\",\n        \"|\",\n        \"^\",\n        \"$\",\n        \"(\",\n        \")\",\n        \"?\",\n        \"*\",\n        \"+\",\n        \"{\",\n    ];\n    return (find(metaChars, (char) => regExp.source.indexOf(char) !== -1) === undefined);\n}\nexport function addStartOfInput(pattern) {\n    const flags = pattern.ignoreCase ? \"i\" : \"\";\n    // always wrapping in a none capturing group preceded by '^' to make sure matching can only work on start of input.\n    // duplicate/redundant start of input markers have no meaning (/^^^^A/ === /^A/)\n    return new RegExp(`^(?:${pattern.source})`, flags);\n}\nexport function addStickyFlag(pattern) {\n    const flags = pattern.ignoreCase ? \"iy\" : \"y\";\n    // always wrapping in a none capturing group preceded by '^' to make sure matching can only work on start of input.\n    // duplicate/redundant start of input markers have no meaning (/^^^^A/ === /^A/)\n    return new RegExp(`${pattern.source}`, flags);\n}\nexport function performRuntimeChecks(lexerDefinition, trackLines, lineTerminatorCharacters) {\n    const errors = [];\n    // some run time checks to help the end users.\n    if (!has(lexerDefinition, DEFAULT_MODE)) {\n        errors.push({\n            message: \"A MultiMode Lexer cannot be initialized without a <\" +\n                DEFAULT_MODE +\n                \"> property in its definition\\n\",\n            type: LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE,\n        });\n    }\n    if (!has(lexerDefinition, MODES)) {\n        errors.push({\n            message: \"A MultiMode Lexer cannot be initialized without a <\" +\n                MODES +\n                \"> property in its definition\\n\",\n            type: LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY,\n        });\n    }\n    if (has(lexerDefinition, MODES) &&\n        has(lexerDefinition, DEFAULT_MODE) &&\n        !has(lexerDefinition.modes, lexerDefinition.defaultMode)) {\n        errors.push({\n            message: `A MultiMode Lexer cannot be initialized with a ${DEFAULT_MODE}: <${lexerDefinition.defaultMode}>` +\n                `which does not exist\\n`,\n            type: LexerDefinitionErrorType.MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST,\n        });\n    }\n    if (has(lexerDefinition, MODES)) {\n        forEach(lexerDefinition.modes, (currModeValue, currModeName) => {\n            forEach(currModeValue, (currTokType, currIdx) => {\n                if (isUndefined(currTokType)) {\n                    errors.push({\n                        message: `A Lexer cannot be initialized using an undefined Token Type. Mode:` +\n                            `<${currModeName}> at index: <${currIdx}>\\n`,\n                        type: LexerDefinitionErrorType.LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED,\n                    });\n                }\n                else if (has(currTokType, \"LONGER_ALT\")) {\n                    const longerAlt = isArray(currTokType.LONGER_ALT)\n                        ? currTokType.LONGER_ALT\n                        : [currTokType.LONGER_ALT];\n                    forEach(longerAlt, (currLongerAlt) => {\n                        if (!isUndefined(currLongerAlt) &&\n                            !includes(currModeValue, currLongerAlt)) {\n                            errors.push({\n                                message: `A MultiMode Lexer cannot be initialized with a longer_alt <${currLongerAlt.name}> on token <${currTokType.name}> outside of mode <${currModeName}>\\n`,\n                                type: LexerDefinitionErrorType.MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE,\n                            });\n                        }\n                    });\n                }\n            });\n        });\n    }\n    return errors;\n}\nexport function performWarningRuntimeChecks(lexerDefinition, trackLines, lineTerminatorCharacters) {\n    const warnings = [];\n    let hasAnyLineBreak = false;\n    const allTokenTypes = compact(flatten(values(lexerDefinition.modes)));\n    const concreteTokenTypes = reject(allTokenTypes, (currType) => currType[PATTERN] === Lexer.NA);\n    const terminatorCharCodes = getCharCodes(lineTerminatorCharacters);\n    if (trackLines) {\n        forEach(concreteTokenTypes, (tokType) => {\n            const currIssue = checkLineBreaksIssues(tokType, terminatorCharCodes);\n            if (currIssue !== false) {\n                const message = buildLineBreakIssueMessage(tokType, currIssue);\n                const warningDescriptor = {\n                    message,\n                    type: currIssue.issue,\n                    tokenType: tokType,\n                };\n                warnings.push(warningDescriptor);\n            }\n            else {\n                // we don't want to attempt to scan if the user explicitly specified the line_breaks option.\n                if (has(tokType, \"LINE_BREAKS\")) {\n                    if (tokType.LINE_BREAKS === true) {\n                        hasAnyLineBreak = true;\n                    }\n                }\n                else {\n                    if (canMatchCharCode(terminatorCharCodes, tokType.PATTERN)) {\n                        hasAnyLineBreak = true;\n                    }\n                }\n            }\n        });\n    }\n    if (trackLines && !hasAnyLineBreak) {\n        warnings.push({\n            message: \"Warning: No LINE_BREAKS Found.\\n\" +\n                \"\\tThis Lexer has been defined to track line and column information,\\n\" +\n                \"\\tBut none of the Token Types can be identified as matching a line terminator.\\n\" +\n                \"\\tSee https://chevrotain.io/docs/guide/resolving_lexer_errors.html#LINE_BREAKS \\n\" +\n                \"\\tfor details.\",\n            type: LexerDefinitionErrorType.NO_LINE_BREAKS_FLAGS,\n        });\n    }\n    return warnings;\n}\nexport function cloneEmptyGroups(emptyGroups) {\n    const clonedResult = {};\n    const groupKeys = keys(emptyGroups);\n    forEach(groupKeys, (currKey) => {\n        const currGroupValue = emptyGroups[currKey];\n        /* istanbul ignore else */\n        if (isArray(currGroupValue)) {\n            clonedResult[currKey] = [];\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    });\n    return clonedResult;\n}\n// TODO: refactor to avoid duplication\nexport function isCustomPattern(tokenType) {\n    const pattern = tokenType.PATTERN;\n    /* istanbul ignore else */\n    if (isRegExp(pattern)) {\n        return false;\n    }\n    else if (isFunction(pattern)) {\n        // CustomPatternMatcherFunc - custom patterns do not require any transformations, only wrapping in a RegExp Like object\n        return true;\n    }\n    else if (has(pattern, \"exec\")) {\n        // ICustomPattern\n        return true;\n    }\n    else if (isString(pattern)) {\n        return false;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexport function isShortPattern(pattern) {\n    if (isString(pattern) && pattern.length === 1) {\n        return pattern.charCodeAt(0);\n    }\n    else {\n        return false;\n    }\n}\n/**\n * Faster than using a RegExp for default newline detection during lexing.\n */\nexport const LineTerminatorOptimizedTester = {\n    // implements /\\n|\\r\\n?/g.test\n    test: function (text) {\n        const len = text.length;\n        for (let i = this.lastIndex; i < len; i++) {\n            const c = text.charCodeAt(i);\n            if (c === 10) {\n                this.lastIndex = i + 1;\n                return true;\n            }\n            else if (c === 13) {\n                if (text.charCodeAt(i + 1) === 10) {\n                    this.lastIndex = i + 2;\n                }\n                else {\n                    this.lastIndex = i + 1;\n                }\n                return true;\n            }\n        }\n        return false;\n    },\n    lastIndex: 0,\n};\nfunction checkLineBreaksIssues(tokType, lineTerminatorCharCodes) {\n    if (has(tokType, \"LINE_BREAKS\")) {\n        // if the user explicitly declared the line_breaks option we will respect their choice\n        // and assume it is correct.\n        return false;\n    }\n    else {\n        /* istanbul ignore else */\n        if (isRegExp(tokType.PATTERN)) {\n            try {\n                // TODO: why is the casting suddenly needed?\n                canMatchCharCode(lineTerminatorCharCodes, tokType.PATTERN);\n            }\n            catch (e) {\n                /* istanbul ignore next - to test this we would have to mock <canMatchCharCode> to throw an error */\n                return {\n                    issue: LexerDefinitionErrorType.IDENTIFY_TERMINATOR,\n                    errMsg: e.message,\n                };\n            }\n            return false;\n        }\n        else if (isString(tokType.PATTERN)) {\n            // string literal patterns can always be analyzed to detect line terminator usage\n            return false;\n        }\n        else if (isCustomPattern(tokType)) {\n            // custom token types\n            return { issue: LexerDefinitionErrorType.CUSTOM_LINE_BREAK };\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    }\n}\nexport function buildLineBreakIssueMessage(tokType, details) {\n    /* istanbul ignore else */\n    if (details.issue === LexerDefinitionErrorType.IDENTIFY_TERMINATOR) {\n        return (\"Warning: unable to identify line terminator usage in pattern.\\n\" +\n            `\\tThe problem is in the <${tokType.name}> Token Type\\n` +\n            `\\t Root cause: ${details.errMsg}.\\n` +\n            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#IDENTIFY_TERMINATOR\");\n    }\n    else if (details.issue === LexerDefinitionErrorType.CUSTOM_LINE_BREAK) {\n        return (\"Warning: A Custom Token Pattern should specify the <line_breaks> option.\\n\" +\n            `\\tThe problem is in the <${tokType.name}> Token Type\\n` +\n            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#CUSTOM_LINE_BREAK\");\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction getCharCodes(charsOrCodes) {\n    const charCodes = map(charsOrCodes, (numOrString) => {\n        if (isString(numOrString)) {\n            return numOrString.charCodeAt(0);\n        }\n        else {\n            return numOrString;\n        }\n    });\n    return charCodes;\n}\nfunction addToMapOfArrays(map, key, value) {\n    if (map[key] === undefined) {\n        map[key] = [value];\n    }\n    else {\n        map[key].push(value);\n    }\n}\nexport const minOptimizationVal = 256;\n/**\n * We are mapping charCode above ASCI (256) into buckets each in the size of 256.\n * This is because ASCI are the most common start chars so each one of those will get its own\n * possible token configs vector.\n *\n * Tokens starting with charCodes \"above\" ASCI are uncommon, so we can \"afford\"\n * to place these into buckets of possible token configs, What we gain from\n * this is avoiding the case of creating an optimization 'charCodeToPatternIdxToConfig'\n * which would contain 10,000+ arrays of small size (e.g unicode Identifiers scenario).\n * Our 'charCodeToPatternIdxToConfig' max size will now be:\n * 256 + (2^16 / 2^8) - 1 === 511\n *\n * note the hack for fast division integer part extraction\n * See: https://stackoverflow.com/a/4228528\n */\nlet charCodeToOptimizedIdxMap = [];\nexport function charCodeToOptimizedIndex(charCode) {\n    return charCode < minOptimizationVal\n        ? charCode\n        : charCodeToOptimizedIdxMap[charCode];\n}\n/**\n * This is a compromise between cold start / hot running performance\n * Creating this array takes ~3ms on a modern machine,\n * But if we perform the computation at runtime as needed the CSS Lexer benchmark\n * performance degrades by ~10%\n *\n * TODO: Perhaps it should be lazy initialized only if a charCode > 255 is used.\n */\nfunction initCharCodeToOptimizedIndexMap() {\n    if (isEmpty(charCodeToOptimizedIdxMap)) {\n        charCodeToOptimizedIdxMap = new Array(65536);\n        for (let i = 0; i < 65536; i++) {\n            charCodeToOptimizedIdxMap[i] = i > 255 ? 255 + ~~(i / 255) : i;\n        }\n    }\n}\n//# sourceMappingURL=lexer.js.map","export function timer(func) {\n    const start = new Date().getTime();\n    const val = func();\n    const end = new Date().getTime();\n    const total = end - start;\n    return { time: total, value: val };\n}\n//# sourceMappingURL=timer.js.map","import { clone, compact, difference, flatten, forEach, has, includes, isArray, isEmpty, map, } from \"lodash-es\";\nexport function tokenStructuredMatcher(tokInstance, tokConstructor) {\n    const instanceType = tokInstance.tokenTypeIdx;\n    if (instanceType === tokConstructor.tokenTypeIdx) {\n        return true;\n    }\n    else {\n        return (tokConstructor.isParent === true &&\n            tokConstructor.categoryMatchesMap[instanceType] === true);\n    }\n}\n// Optimized tokenMatcher in case our grammar does not use token categories\n// Being so tiny it is much more likely to be in-lined and this avoid the function call overhead\nexport function tokenStructuredMatcherNoCategories(token, tokType) {\n    return token.tokenTypeIdx === tokType.tokenTypeIdx;\n}\nexport let tokenShortNameIdx = 1;\nexport const tokenIdxToClass = {};\nexport function augmentTokenTypes(tokenTypes) {\n    // collect the parent Token Types as well.\n    const tokenTypesAndParents = expandCategories(tokenTypes);\n    // add required tokenType and categoryMatches properties\n    assignTokenDefaultProps(tokenTypesAndParents);\n    // fill up the categoryMatches\n    assignCategoriesMapProp(tokenTypesAndParents);\n    assignCategoriesTokensProp(tokenTypesAndParents);\n    forEach(tokenTypesAndParents, (tokType) => {\n        tokType.isParent = tokType.categoryMatches.length > 0;\n    });\n}\nexport function expandCategories(tokenTypes) {\n    let result = clone(tokenTypes);\n    let categories = tokenTypes;\n    let searching = true;\n    while (searching) {\n        categories = compact(flatten(map(categories, (currTokType) => currTokType.CATEGORIES)));\n        const newCategories = difference(categories, result);\n        result = result.concat(newCategories);\n        if (isEmpty(newCategories)) {\n            searching = false;\n        }\n        else {\n            categories = newCategories;\n        }\n    }\n    return result;\n}\nexport function assignTokenDefaultProps(tokenTypes) {\n    forEach(tokenTypes, (currTokType) => {\n        if (!hasShortKeyProperty(currTokType)) {\n            tokenIdxToClass[tokenShortNameIdx] = currTokType;\n            currTokType.tokenTypeIdx = tokenShortNameIdx++;\n        }\n        // CATEGORIES? : TokenType | TokenType[]\n        if (hasCategoriesProperty(currTokType) &&\n            !isArray(currTokType.CATEGORIES)\n        // &&\n        // !isUndefined(currTokType.CATEGORIES.PATTERN)\n        ) {\n            currTokType.CATEGORIES = [currTokType.CATEGORIES];\n        }\n        if (!hasCategoriesProperty(currTokType)) {\n            currTokType.CATEGORIES = [];\n        }\n        if (!hasExtendingTokensTypesProperty(currTokType)) {\n            currTokType.categoryMatches = [];\n        }\n        if (!hasExtendingTokensTypesMapProperty(currTokType)) {\n            currTokType.categoryMatchesMap = {};\n        }\n    });\n}\nexport function assignCategoriesTokensProp(tokenTypes) {\n    forEach(tokenTypes, (currTokType) => {\n        // avoid duplications\n        currTokType.categoryMatches = [];\n        forEach(currTokType.categoryMatchesMap, (val, key) => {\n            currTokType.categoryMatches.push(tokenIdxToClass[key].tokenTypeIdx);\n        });\n    });\n}\nexport function assignCategoriesMapProp(tokenTypes) {\n    forEach(tokenTypes, (currTokType) => {\n        singleAssignCategoriesToksMap([], currTokType);\n    });\n}\nexport function singleAssignCategoriesToksMap(path, nextNode) {\n    forEach(path, (pathNode) => {\n        nextNode.categoryMatchesMap[pathNode.tokenTypeIdx] = true;\n    });\n    forEach(nextNode.CATEGORIES, (nextCategory) => {\n        const newPath = path.concat(nextNode);\n        // avoids infinite loops due to cyclic categories.\n        if (!includes(newPath, nextCategory)) {\n            singleAssignCategoriesToksMap(newPath, nextCategory);\n        }\n    });\n}\nexport function hasShortKeyProperty(tokType) {\n    return has(tokType, \"tokenTypeIdx\");\n}\nexport function hasCategoriesProperty(tokType) {\n    return has(tokType, \"CATEGORIES\");\n}\nexport function hasExtendingTokensTypesProperty(tokType) {\n    return has(tokType, \"categoryMatches\");\n}\nexport function hasExtendingTokensTypesMapProperty(tokType) {\n    return has(tokType, \"categoryMatchesMap\");\n}\nexport function isTokenType(tokType) {\n    return has(tokType, \"tokenTypeIdx\");\n}\n//# sourceMappingURL=tokens.js.map","export const defaultLexerErrorProvider = {\n    buildUnableToPopLexerModeMessage(token) {\n        return `Unable to pop Lexer Mode after encountering Token ->${token.image}<- The Mode Stack is empty`;\n    },\n    buildUnexpectedCharactersMessage(fullText, startOffset, length, line, column) {\n        return (`unexpected character: ->${fullText.charAt(startOffset)}<- at offset: ${startOffset},` + ` skipped ${length} characters.`);\n    },\n};\n//# sourceMappingURL=lexer_errors_public.js.map","import { analyzeTokenTypes, charCodeToOptimizedIndex, cloneEmptyGroups, DEFAULT_MODE, LineTerminatorOptimizedTester, performRuntimeChecks, performWarningRuntimeChecks, SUPPORT_STICKY, validatePatterns, } from \"./lexer.js\";\nimport { assign, clone, forEach, identity, isArray, isEmpty, isUndefined, keys, last, map, noop, reduce, reject, } from \"lodash-es\";\nimport { PRINT_WARNING, timer, toFastProperties } from \"@chevrotain/utils\";\nimport { augmentTokenTypes } from \"./tokens.js\";\nimport { defaultLexerErrorProvider } from \"./lexer_errors_public.js\";\nimport { clearRegExpParserCache } from \"./reg_exp_parser.js\";\nexport var LexerDefinitionErrorType;\n(function (LexerDefinitionErrorType) {\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MISSING_PATTERN\"] = 0] = \"MISSING_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"INVALID_PATTERN\"] = 1] = \"INVALID_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"EOI_ANCHOR_FOUND\"] = 2] = \"EOI_ANCHOR_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"UNSUPPORTED_FLAGS_FOUND\"] = 3] = \"UNSUPPORTED_FLAGS_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"DUPLICATE_PATTERNS_FOUND\"] = 4] = \"DUPLICATE_PATTERNS_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"INVALID_GROUP_TYPE_FOUND\"] = 5] = \"INVALID_GROUP_TYPE_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"PUSH_MODE_DOES_NOT_EXIST\"] = 6] = \"PUSH_MODE_DOES_NOT_EXIST\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE\"] = 7] = \"MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY\"] = 8] = \"MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST\"] = 9] = \"MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED\"] = 10] = \"LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"SOI_ANCHOR_FOUND\"] = 11] = \"SOI_ANCHOR_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"EMPTY_MATCH_PATTERN\"] = 12] = \"EMPTY_MATCH_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"NO_LINE_BREAKS_FLAGS\"] = 13] = \"NO_LINE_BREAKS_FLAGS\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"UNREACHABLE_PATTERN\"] = 14] = \"UNREACHABLE_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"IDENTIFY_TERMINATOR\"] = 15] = \"IDENTIFY_TERMINATOR\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"CUSTOM_LINE_BREAK\"] = 16] = \"CUSTOM_LINE_BREAK\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE\"] = 17] = \"MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE\";\n})(LexerDefinitionErrorType || (LexerDefinitionErrorType = {}));\nconst DEFAULT_LEXER_CONFIG = {\n    deferDefinitionErrorsHandling: false,\n    positionTracking: \"full\",\n    lineTerminatorsPattern: /\\n|\\r\\n?/g,\n    lineTerminatorCharacters: [\"\\n\", \"\\r\"],\n    ensureOptimizations: false,\n    safeMode: false,\n    errorMessageProvider: defaultLexerErrorProvider,\n    traceInitPerf: false,\n    skipValidations: false,\n    recoveryEnabled: true,\n};\nObject.freeze(DEFAULT_LEXER_CONFIG);\nexport class Lexer {\n    constructor(lexerDefinition, config = DEFAULT_LEXER_CONFIG) {\n        this.lexerDefinition = lexerDefinition;\n        this.lexerDefinitionErrors = [];\n        this.lexerDefinitionWarning = [];\n        this.patternIdxToConfig = {};\n        this.charCodeToPatternIdxToConfig = {};\n        this.modes = [];\n        this.emptyGroups = {};\n        this.trackStartLines = true;\n        this.trackEndLines = true;\n        this.hasCustom = false;\n        this.canModeBeOptimized = {};\n        // Duplicated from the parser's perf trace trait to allow future extraction\n        // of the lexer to a separate package.\n        this.TRACE_INIT = (phaseDesc, phaseImpl) => {\n            // No need to optimize this using NOOP pattern because\n            // It is not called in a hot spot...\n            if (this.traceInitPerf === true) {\n                this.traceInitIndent++;\n                const indent = new Array(this.traceInitIndent + 1).join(\"\\t\");\n                if (this.traceInitIndent < this.traceInitMaxIdent) {\n                    console.log(`${indent}--> <${phaseDesc}>`);\n                }\n                const { time, value } = timer(phaseImpl);\n                /* istanbul ignore next - Difficult to reproduce specific performance behavior (>10ms) in tests */\n                const traceMethod = time > 10 ? console.warn : console.log;\n                if (this.traceInitIndent < this.traceInitMaxIdent) {\n                    traceMethod(`${indent}<-- <${phaseDesc}> time: ${time}ms`);\n                }\n                this.traceInitIndent--;\n                return value;\n            }\n            else {\n                return phaseImpl();\n            }\n        };\n        if (typeof config === \"boolean\") {\n            throw Error(\"The second argument to the Lexer constructor is now an ILexerConfig Object.\\n\" +\n                \"a boolean 2nd argument is no longer supported\");\n        }\n        // todo: defaults func?\n        this.config = assign({}, DEFAULT_LEXER_CONFIG, config);\n        const traceInitVal = this.config.traceInitPerf;\n        if (traceInitVal === true) {\n            this.traceInitMaxIdent = Infinity;\n            this.traceInitPerf = true;\n        }\n        else if (typeof traceInitVal === \"number\") {\n            this.traceInitMaxIdent = traceInitVal;\n            this.traceInitPerf = true;\n        }\n        this.traceInitIndent = -1;\n        this.TRACE_INIT(\"Lexer Constructor\", () => {\n            let actualDefinition;\n            let hasOnlySingleMode = true;\n            this.TRACE_INIT(\"Lexer Config handling\", () => {\n                if (this.config.lineTerminatorsPattern ===\n                    DEFAULT_LEXER_CONFIG.lineTerminatorsPattern) {\n                    // optimized built-in implementation for the defaults definition of lineTerminators\n                    this.config.lineTerminatorsPattern = LineTerminatorOptimizedTester;\n                }\n                else {\n                    if (this.config.lineTerminatorCharacters ===\n                        DEFAULT_LEXER_CONFIG.lineTerminatorCharacters) {\n                        throw Error(\"Error: Missing <lineTerminatorCharacters> property on the Lexer config.\\n\" +\n                            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#MISSING_LINE_TERM_CHARS\");\n                    }\n                }\n                if (config.safeMode && config.ensureOptimizations) {\n                    throw Error('\"safeMode\" and \"ensureOptimizations\" flags are mutually exclusive.');\n                }\n                this.trackStartLines = /full|onlyStart/i.test(this.config.positionTracking);\n                this.trackEndLines = /full/i.test(this.config.positionTracking);\n                // Convert SingleModeLexerDefinition into a IMultiModeLexerDefinition.\n                if (isArray(lexerDefinition)) {\n                    actualDefinition = {\n                        modes: { defaultMode: clone(lexerDefinition) },\n                        defaultMode: DEFAULT_MODE,\n                    };\n                }\n                else {\n                    // no conversion needed, input should already be a IMultiModeLexerDefinition\n                    hasOnlySingleMode = false;\n                    actualDefinition = clone(lexerDefinition);\n                }\n            });\n            if (this.config.skipValidations === false) {\n                this.TRACE_INIT(\"performRuntimeChecks\", () => {\n                    this.lexerDefinitionErrors = this.lexerDefinitionErrors.concat(performRuntimeChecks(actualDefinition, this.trackStartLines, this.config.lineTerminatorCharacters));\n                });\n                this.TRACE_INIT(\"performWarningRuntimeChecks\", () => {\n                    this.lexerDefinitionWarning = this.lexerDefinitionWarning.concat(performWarningRuntimeChecks(actualDefinition, this.trackStartLines, this.config.lineTerminatorCharacters));\n                });\n            }\n            // for extra robustness to avoid throwing an none informative error message\n            actualDefinition.modes = actualDefinition.modes\n                ? actualDefinition.modes\n                : {};\n            // an error of undefined TokenTypes will be detected in \"performRuntimeChecks\" above.\n            // this transformation is to increase robustness in the case of partially invalid lexer definition.\n            forEach(actualDefinition.modes, (currModeValue, currModeName) => {\n                actualDefinition.modes[currModeName] = reject(currModeValue, (currTokType) => isUndefined(currTokType));\n            });\n            const allModeNames = keys(actualDefinition.modes);\n            forEach(actualDefinition.modes, (currModDef, currModName) => {\n                this.TRACE_INIT(`Mode: <${currModName}> processing`, () => {\n                    this.modes.push(currModName);\n                    if (this.config.skipValidations === false) {\n                        this.TRACE_INIT(`validatePatterns`, () => {\n                            this.lexerDefinitionErrors = this.lexerDefinitionErrors.concat(validatePatterns(currModDef, allModeNames));\n                        });\n                    }\n                    // If definition errors were encountered, the analysis phase may fail unexpectedly/\n                    // Considering a lexer with definition errors may never be used, there is no point\n                    // to performing the analysis anyhow...\n                    if (isEmpty(this.lexerDefinitionErrors)) {\n                        augmentTokenTypes(currModDef);\n                        let currAnalyzeResult;\n                        this.TRACE_INIT(`analyzeTokenTypes`, () => {\n                            currAnalyzeResult = analyzeTokenTypes(currModDef, {\n                                lineTerminatorCharacters: this.config.lineTerminatorCharacters,\n                                positionTracking: config.positionTracking,\n                                ensureOptimizations: config.ensureOptimizations,\n                                safeMode: config.safeMode,\n                                tracer: this.TRACE_INIT,\n                            });\n                        });\n                        this.patternIdxToConfig[currModName] =\n                            currAnalyzeResult.patternIdxToConfig;\n                        this.charCodeToPatternIdxToConfig[currModName] =\n                            currAnalyzeResult.charCodeToPatternIdxToConfig;\n                        this.emptyGroups = assign({}, this.emptyGroups, currAnalyzeResult.emptyGroups);\n                        this.hasCustom = currAnalyzeResult.hasCustom || this.hasCustom;\n                        this.canModeBeOptimized[currModName] =\n                            currAnalyzeResult.canBeOptimized;\n                    }\n                });\n            });\n            this.defaultMode = actualDefinition.defaultMode;\n            if (!isEmpty(this.lexerDefinitionErrors) &&\n                !this.config.deferDefinitionErrorsHandling) {\n                const allErrMessages = map(this.lexerDefinitionErrors, (error) => {\n                    return error.message;\n                });\n                const allErrMessagesString = allErrMessages.join(\"-----------------------\\n\");\n                throw new Error(\"Errors detected in definition of Lexer:\\n\" + allErrMessagesString);\n            }\n            // Only print warning if there are no errors, This will avoid pl\n            forEach(this.lexerDefinitionWarning, (warningDescriptor) => {\n                PRINT_WARNING(warningDescriptor.message);\n            });\n            this.TRACE_INIT(\"Choosing sub-methods implementations\", () => {\n                // Choose the relevant internal implementations for this specific parser.\n                // These implementations should be in-lined by the JavaScript engine\n                // to provide optimal performance in each scenario.\n                if (SUPPORT_STICKY) {\n                    this.chopInput = identity;\n                    this.match = this.matchWithTest;\n                }\n                else {\n                    this.updateLastIndex = noop;\n                    this.match = this.matchWithExec;\n                }\n                if (hasOnlySingleMode) {\n                    this.handleModes = noop;\n                }\n                if (this.trackStartLines === false) {\n                    this.computeNewColumn = identity;\n                }\n                if (this.trackEndLines === false) {\n                    this.updateTokenEndLineColumnLocation = noop;\n                }\n                if (/full/i.test(this.config.positionTracking)) {\n                    this.createTokenInstance = this.createFullToken;\n                }\n                else if (/onlyStart/i.test(this.config.positionTracking)) {\n                    this.createTokenInstance = this.createStartOnlyToken;\n                }\n                else if (/onlyOffset/i.test(this.config.positionTracking)) {\n                    this.createTokenInstance = this.createOffsetOnlyToken;\n                }\n                else {\n                    throw Error(`Invalid <positionTracking> config option: \"${this.config.positionTracking}\"`);\n                }\n                if (this.hasCustom) {\n                    this.addToken = this.addTokenUsingPush;\n                    this.handlePayload = this.handlePayloadWithCustom;\n                }\n                else {\n                    this.addToken = this.addTokenUsingMemberAccess;\n                    this.handlePayload = this.handlePayloadNoCustom;\n                }\n            });\n            this.TRACE_INIT(\"Failed Optimization Warnings\", () => {\n                const unOptimizedModes = reduce(this.canModeBeOptimized, (cannotBeOptimized, canBeOptimized, modeName) => {\n                    if (canBeOptimized === false) {\n                        cannotBeOptimized.push(modeName);\n                    }\n                    return cannotBeOptimized;\n                }, []);\n                if (config.ensureOptimizations && !isEmpty(unOptimizedModes)) {\n                    throw Error(`Lexer Modes: < ${unOptimizedModes.join(\", \")} > cannot be optimized.\\n` +\n                        '\\t Disable the \"ensureOptimizations\" lexer config flag to silently ignore this and run the lexer in an un-optimized mode.\\n' +\n                        \"\\t Or inspect the console log for details on how to resolve these issues.\");\n                }\n            });\n            this.TRACE_INIT(\"clearRegExpParserCache\", () => {\n                clearRegExpParserCache();\n            });\n            this.TRACE_INIT(\"toFastProperties\", () => {\n                toFastProperties(this);\n            });\n        });\n    }\n    tokenize(text, initialMode = this.defaultMode) {\n        if (!isEmpty(this.lexerDefinitionErrors)) {\n            const allErrMessages = map(this.lexerDefinitionErrors, (error) => {\n                return error.message;\n            });\n            const allErrMessagesString = allErrMessages.join(\"-----------------------\\n\");\n            throw new Error(\"Unable to Tokenize because Errors detected in definition of Lexer:\\n\" +\n                allErrMessagesString);\n        }\n        return this.tokenizeInternal(text, initialMode);\n    }\n    // There is quite a bit of duplication between this and \"tokenizeInternalLazy\"\n    // This is intentional due to performance considerations.\n    // this method also used quite a bit of `!` none null assertions because it is too optimized\n    // for `tsc` to always understand it is \"safe\"\n    tokenizeInternal(text, initialMode) {\n        let i, j, k, matchAltImage, longerAlt, matchedImage, payload, altPayload, imageLength, group, tokType, newToken, errLength, droppedChar, msg, match;\n        const orgText = text;\n        const orgLength = orgText.length;\n        let offset = 0;\n        let matchedTokensIndex = 0;\n        // initializing the tokensArray to the \"guessed\" size.\n        // guessing too little will still reduce the number of array re-sizes on pushes.\n        // guessing too large (Tested by guessing x4 too large) may cost a bit more of memory\n        // but would still have a faster runtime by avoiding (All but one) array resizing.\n        const guessedNumberOfTokens = this.hasCustom\n            ? 0 // will break custom token pattern APIs the matchedTokens array will contain undefined elements.\n            : Math.floor(text.length / 10);\n        const matchedTokens = new Array(guessedNumberOfTokens);\n        const errors = [];\n        let line = this.trackStartLines ? 1 : undefined;\n        let column = this.trackStartLines ? 1 : undefined;\n        const groups = cloneEmptyGroups(this.emptyGroups);\n        const trackLines = this.trackStartLines;\n        const lineTerminatorPattern = this.config.lineTerminatorsPattern;\n        let currModePatternsLength = 0;\n        let patternIdxToConfig = [];\n        let currCharCodeToPatternIdxToConfig = [];\n        const modeStack = [];\n        const emptyArray = [];\n        Object.freeze(emptyArray);\n        let getPossiblePatterns;\n        function getPossiblePatternsSlow() {\n            return patternIdxToConfig;\n        }\n        function getPossiblePatternsOptimized(charCode) {\n            const optimizedCharIdx = charCodeToOptimizedIndex(charCode);\n            const possiblePatterns = currCharCodeToPatternIdxToConfig[optimizedCharIdx];\n            if (possiblePatterns === undefined) {\n                return emptyArray;\n            }\n            else {\n                return possiblePatterns;\n            }\n        }\n        const pop_mode = (popToken) => {\n            // TODO: perhaps avoid this error in the edge case there is no more input?\n            if (modeStack.length === 1 &&\n                // if we have both a POP_MODE and a PUSH_MODE this is in-fact a \"transition\"\n                // So no error should occur.\n                popToken.tokenType.PUSH_MODE === undefined) {\n                // if we try to pop the last mode there lexer will no longer have ANY mode.\n                // thus the pop is ignored, an error will be created and the lexer will continue parsing in the previous mode.\n                const msg = this.config.errorMessageProvider.buildUnableToPopLexerModeMessage(popToken);\n                errors.push({\n                    offset: popToken.startOffset,\n                    line: popToken.startLine,\n                    column: popToken.startColumn,\n                    length: popToken.image.length,\n                    message: msg,\n                });\n            }\n            else {\n                modeStack.pop();\n                const newMode = last(modeStack);\n                patternIdxToConfig = this.patternIdxToConfig[newMode];\n                currCharCodeToPatternIdxToConfig =\n                    this.charCodeToPatternIdxToConfig[newMode];\n                currModePatternsLength = patternIdxToConfig.length;\n                const modeCanBeOptimized = this.canModeBeOptimized[newMode] && this.config.safeMode === false;\n                if (currCharCodeToPatternIdxToConfig && modeCanBeOptimized) {\n                    getPossiblePatterns = getPossiblePatternsOptimized;\n                }\n                else {\n                    getPossiblePatterns = getPossiblePatternsSlow;\n                }\n            }\n        };\n        function push_mode(newMode) {\n            modeStack.push(newMode);\n            currCharCodeToPatternIdxToConfig =\n                this.charCodeToPatternIdxToConfig[newMode];\n            patternIdxToConfig = this.patternIdxToConfig[newMode];\n            currModePatternsLength = patternIdxToConfig.length;\n            currModePatternsLength = patternIdxToConfig.length;\n            const modeCanBeOptimized = this.canModeBeOptimized[newMode] && this.config.safeMode === false;\n            if (currCharCodeToPatternIdxToConfig && modeCanBeOptimized) {\n                getPossiblePatterns = getPossiblePatternsOptimized;\n            }\n            else {\n                getPossiblePatterns = getPossiblePatternsSlow;\n            }\n        }\n        // this pattern seems to avoid a V8 de-optimization, although that de-optimization does not\n        // seem to matter performance wise.\n        push_mode.call(this, initialMode);\n        let currConfig;\n        const recoveryEnabled = this.config.recoveryEnabled;\n        while (offset < orgLength) {\n            matchedImage = null;\n            const nextCharCode = orgText.charCodeAt(offset);\n            const chosenPatternIdxToConfig = getPossiblePatterns(nextCharCode);\n            const chosenPatternsLength = chosenPatternIdxToConfig.length;\n            for (i = 0; i < chosenPatternsLength; i++) {\n                currConfig = chosenPatternIdxToConfig[i];\n                const currPattern = currConfig.pattern;\n                payload = null;\n                // manually in-lined because > 600 chars won't be in-lined in V8\n                const singleCharCode = currConfig.short;\n                if (singleCharCode !== false) {\n                    if (nextCharCode === singleCharCode) {\n                        // single character string\n                        matchedImage = currPattern;\n                    }\n                }\n                else if (currConfig.isCustom === true) {\n                    match = currPattern.exec(orgText, offset, matchedTokens, groups);\n                    if (match !== null) {\n                        matchedImage = match[0];\n                        if (match.payload !== undefined) {\n                            payload = match.payload;\n                        }\n                    }\n                    else {\n                        matchedImage = null;\n                    }\n                }\n                else {\n                    this.updateLastIndex(currPattern, offset);\n                    matchedImage = this.match(currPattern, text, offset);\n                }\n                if (matchedImage !== null) {\n                    // even though this pattern matched we must try a another longer alternative.\n                    // this can be used to prioritize keywords over identifiers\n                    longerAlt = currConfig.longerAlt;\n                    if (longerAlt !== undefined) {\n                        // TODO: micro optimize, avoid extra prop access\n                        // by saving/linking longerAlt on the original config?\n                        const longerAltLength = longerAlt.length;\n                        for (k = 0; k < longerAltLength; k++) {\n                            const longerAltConfig = patternIdxToConfig[longerAlt[k]];\n                            const longerAltPattern = longerAltConfig.pattern;\n                            altPayload = null;\n                            // single Char can never be a longer alt so no need to test it.\n                            // manually in-lined because > 600 chars won't be in-lined in V8\n                            if (longerAltConfig.isCustom === true) {\n                                match = longerAltPattern.exec(orgText, offset, matchedTokens, groups);\n                                if (match !== null) {\n                                    matchAltImage = match[0];\n                                    if (match.payload !== undefined) {\n                                        altPayload = match.payload;\n                                    }\n                                }\n                                else {\n                                    matchAltImage = null;\n                                }\n                            }\n                            else {\n                                this.updateLastIndex(longerAltPattern, offset);\n                                matchAltImage = this.match(longerAltPattern, text, offset);\n                            }\n                            if (matchAltImage && matchAltImage.length > matchedImage.length) {\n                                matchedImage = matchAltImage;\n                                payload = altPayload;\n                                currConfig = longerAltConfig;\n                                // Exit the loop early after matching one of the longer alternatives\n                                // The first matched alternative takes precedence\n                                break;\n                            }\n                        }\n                    }\n                    break;\n                }\n            }\n            // successful match\n            if (matchedImage !== null) {\n                imageLength = matchedImage.length;\n                group = currConfig.group;\n                if (group !== undefined) {\n                    tokType = currConfig.tokenTypeIdx;\n                    // TODO: \"offset + imageLength\" and the new column may be computed twice in case of \"full\" location information inside\n                    // createFullToken method\n                    newToken = this.createTokenInstance(matchedImage, offset, tokType, currConfig.tokenType, line, column, imageLength);\n                    this.handlePayload(newToken, payload);\n                    // TODO: optimize NOOP in case there are no special groups?\n                    if (group === false) {\n                        matchedTokensIndex = this.addToken(matchedTokens, matchedTokensIndex, newToken);\n                    }\n                    else {\n                        groups[group].push(newToken);\n                    }\n                }\n                text = this.chopInput(text, imageLength);\n                offset = offset + imageLength;\n                // TODO: with newlines the column may be assigned twice\n                column = this.computeNewColumn(column, imageLength);\n                if (trackLines === true && currConfig.canLineTerminator === true) {\n                    let numOfLTsInMatch = 0;\n                    let foundTerminator;\n                    let lastLTEndOffset;\n                    lineTerminatorPattern.lastIndex = 0;\n                    do {\n                        foundTerminator = lineTerminatorPattern.test(matchedImage);\n                        if (foundTerminator === true) {\n                            lastLTEndOffset = lineTerminatorPattern.lastIndex - 1;\n                            numOfLTsInMatch++;\n                        }\n                    } while (foundTerminator === true);\n                    if (numOfLTsInMatch !== 0) {\n                        line = line + numOfLTsInMatch;\n                        column = imageLength - lastLTEndOffset;\n                        this.updateTokenEndLineColumnLocation(newToken, group, lastLTEndOffset, numOfLTsInMatch, line, column, imageLength);\n                    }\n                }\n                // will be NOOP if no modes present\n                this.handleModes(currConfig, pop_mode, push_mode, newToken);\n            }\n            else {\n                // error recovery, drop characters until we identify a valid token's start point\n                const errorStartOffset = offset;\n                const errorLine = line;\n                const errorColumn = column;\n                let foundResyncPoint = recoveryEnabled === false;\n                while (foundResyncPoint === false && offset < orgLength) {\n                    // Identity Func (when sticky flag is enabled)\n                    text = this.chopInput(text, 1);\n                    offset++;\n                    for (j = 0; j < currModePatternsLength; j++) {\n                        const currConfig = patternIdxToConfig[j];\n                        const currPattern = currConfig.pattern;\n                        // manually in-lined because > 600 chars won't be in-lined in V8\n                        const singleCharCode = currConfig.short;\n                        if (singleCharCode !== false) {\n                            if (orgText.charCodeAt(offset) === singleCharCode) {\n                                // single character string\n                                foundResyncPoint = true;\n                            }\n                        }\n                        else if (currConfig.isCustom === true) {\n                            foundResyncPoint =\n                                currPattern.exec(orgText, offset, matchedTokens, groups) !== null;\n                        }\n                        else {\n                            this.updateLastIndex(currPattern, offset);\n                            foundResyncPoint = currPattern.exec(text) !== null;\n                        }\n                        if (foundResyncPoint === true) {\n                            break;\n                        }\n                    }\n                }\n                errLength = offset - errorStartOffset;\n                column = this.computeNewColumn(column, errLength);\n                // at this point we either re-synced or reached the end of the input text\n                msg = this.config.errorMessageProvider.buildUnexpectedCharactersMessage(orgText, errorStartOffset, errLength, errorLine, errorColumn);\n                errors.push({\n                    offset: errorStartOffset,\n                    line: errorLine,\n                    column: errorColumn,\n                    length: errLength,\n                    message: msg,\n                });\n                if (recoveryEnabled === false) {\n                    break;\n                }\n            }\n        }\n        // if we do have custom patterns which push directly into the\n        // TODO: custom tokens should not push directly??\n        if (!this.hasCustom) {\n            // if we guessed a too large size for the tokens array this will shrink it to the right size.\n            matchedTokens.length = matchedTokensIndex;\n        }\n        return {\n            tokens: matchedTokens,\n            groups: groups,\n            errors: errors,\n        };\n    }\n    handleModes(config, pop_mode, push_mode, newToken) {\n        if (config.pop === true) {\n            // need to save the PUSH_MODE property as if the mode is popped\n            // patternIdxToPopMode is updated to reflect the new mode after popping the stack\n            const pushMode = config.push;\n            pop_mode(newToken);\n            if (pushMode !== undefined) {\n                push_mode.call(this, pushMode);\n            }\n        }\n        else if (config.push !== undefined) {\n            push_mode.call(this, config.push);\n        }\n    }\n    chopInput(text, length) {\n        return text.substring(length);\n    }\n    updateLastIndex(regExp, newLastIndex) {\n        regExp.lastIndex = newLastIndex;\n    }\n    // TODO: decrease this under 600 characters? inspect stripping comments option in TSC compiler\n    updateTokenEndLineColumnLocation(newToken, group, lastLTIdx, numOfLTsInMatch, line, column, imageLength) {\n        let lastCharIsLT, fixForEndingInLT;\n        if (group !== undefined) {\n            // a none skipped multi line Token, need to update endLine/endColumn\n            lastCharIsLT = lastLTIdx === imageLength - 1;\n            fixForEndingInLT = lastCharIsLT ? -1 : 0;\n            if (!(numOfLTsInMatch === 1 && lastCharIsLT === true)) {\n                // if a token ends in a LT that last LT only affects the line numbering of following Tokens\n                newToken.endLine = line + fixForEndingInLT;\n                // the last LT in a token does not affect the endColumn either as the [columnStart ... columnEnd)\n                // inclusive to exclusive range.\n                newToken.endColumn = column - 1 + -fixForEndingInLT;\n            }\n            // else single LT in the last character of a token, no need to modify the endLine/EndColumn\n        }\n    }\n    computeNewColumn(oldColumn, imageLength) {\n        return oldColumn + imageLength;\n    }\n    createOffsetOnlyToken(image, startOffset, tokenTypeIdx, tokenType) {\n        return {\n            image,\n            startOffset,\n            tokenTypeIdx,\n            tokenType,\n        };\n    }\n    createStartOnlyToken(image, startOffset, tokenTypeIdx, tokenType, startLine, startColumn) {\n        return {\n            image,\n            startOffset,\n            startLine,\n            startColumn,\n            tokenTypeIdx,\n            tokenType,\n        };\n    }\n    createFullToken(image, startOffset, tokenTypeIdx, tokenType, startLine, startColumn, imageLength) {\n        return {\n            image,\n            startOffset,\n            endOffset: startOffset + imageLength - 1,\n            startLine,\n            endLine: startLine,\n            startColumn,\n            endColumn: startColumn + imageLength - 1,\n            tokenTypeIdx,\n            tokenType,\n        };\n    }\n    addTokenUsingPush(tokenVector, index, tokenToAdd) {\n        tokenVector.push(tokenToAdd);\n        return index;\n    }\n    addTokenUsingMemberAccess(tokenVector, index, tokenToAdd) {\n        tokenVector[index] = tokenToAdd;\n        index++;\n        return index;\n    }\n    handlePayloadNoCustom(token, payload) { }\n    handlePayloadWithCustom(token, payload) {\n        if (payload !== null) {\n            token.payload = payload;\n        }\n    }\n    matchWithTest(pattern, text, offset) {\n        const found = pattern.test(text);\n        if (found === true) {\n            return text.substring(offset, pattern.lastIndex);\n        }\n        return null;\n    }\n    matchWithExec(pattern, text) {\n        const regExpArray = pattern.exec(text);\n        return regExpArray !== null ? regExpArray[0] : null;\n    }\n}\nLexer.SKIPPED = \"This marks a skipped Token pattern, this means each token identified by it will\" +\n    \"be consumed and then thrown into oblivion, this can be used to for example to completely ignore whitespace.\";\nLexer.NA = /NOT_APPLICABLE/;\n//# sourceMappingURL=lexer_public.js.map","import { has, isString, isUndefined } from \"lodash-es\";\nimport { Lexer } from \"./lexer_public.js\";\nimport { augmentTokenTypes, tokenStructuredMatcher } from \"./tokens.js\";\nexport function tokenLabel(tokType) {\n    if (hasTokenLabel(tokType)) {\n        return tokType.LABEL;\n    }\n    else {\n        return tokType.name;\n    }\n}\nexport function tokenName(tokType) {\n    return tokType.name;\n}\nexport function hasTokenLabel(obj) {\n    return isString(obj.LABEL) && obj.LABEL !== \"\";\n}\nconst PARENT = \"parent\";\nconst CATEGORIES = \"categories\";\nconst LABEL = \"label\";\nconst GROUP = \"group\";\nconst PUSH_MODE = \"push_mode\";\nconst POP_MODE = \"pop_mode\";\nconst LONGER_ALT = \"longer_alt\";\nconst LINE_BREAKS = \"line_breaks\";\nconst START_CHARS_HINT = \"start_chars_hint\";\nexport function createToken(config) {\n    return createTokenInternal(config);\n}\nfunction createTokenInternal(config) {\n    const pattern = config.pattern;\n    const tokenType = {};\n    tokenType.name = config.name;\n    if (!isUndefined(pattern)) {\n        tokenType.PATTERN = pattern;\n    }\n    if (has(config, PARENT)) {\n        throw (\"The parent property is no longer supported.\\n\" +\n            \"See: https://github.com/chevrotain/chevrotain/issues/564#issuecomment-349062346 for details.\");\n    }\n    if (has(config, CATEGORIES)) {\n        // casting to ANY as this will be fixed inside `augmentTokenTypes``\n        tokenType.CATEGORIES = config[CATEGORIES];\n    }\n    augmentTokenTypes([tokenType]);\n    if (has(config, LABEL)) {\n        tokenType.LABEL = config[LABEL];\n    }\n    if (has(config, GROUP)) {\n        tokenType.GROUP = config[GROUP];\n    }\n    if (has(config, POP_MODE)) {\n        tokenType.POP_MODE = config[POP_MODE];\n    }\n    if (has(config, PUSH_MODE)) {\n        tokenType.PUSH_MODE = config[PUSH_MODE];\n    }\n    if (has(config, LONGER_ALT)) {\n        tokenType.LONGER_ALT = config[LONGER_ALT];\n    }\n    if (has(config, LINE_BREAKS)) {\n        tokenType.LINE_BREAKS = config[LINE_BREAKS];\n    }\n    if (has(config, START_CHARS_HINT)) {\n        tokenType.START_CHARS_HINT = config[START_CHARS_HINT];\n    }\n    return tokenType;\n}\nexport const EOF = createToken({ name: \"EOF\", pattern: Lexer.NA });\naugmentTokenTypes([EOF]);\nexport function createTokenInstance(tokType, image, startOffset, endOffset, startLine, endLine, startColumn, endColumn) {\n    return {\n        image,\n        startOffset,\n        endOffset,\n        startLine,\n        endLine,\n        startColumn,\n        endColumn,\n        tokenTypeIdx: tokType.tokenTypeIdx,\n        tokenType: tokType,\n    };\n}\nexport function tokenMatcher(token, tokType) {\n    return tokenStructuredMatcher(token, tokType);\n}\n//# sourceMappingURL=tokens_public.js.map","import { hasTokenLabel, tokenLabel } from \"../scan/tokens_public.js\";\nimport { first, map, reduce } from \"lodash-es\";\nimport { getProductionDslName, NonTerminal, Rule, Terminal, } from \"@chevrotain/gast\";\nexport const defaultParserErrorProvider = {\n    buildMismatchTokenMessage({ expected, actual, previous, ruleName }) {\n        const hasLabel = hasTokenLabel(expected);\n        const expectedMsg = hasLabel\n            ? `--> ${tokenLabel(expected)} <--`\n            : `token of type --> ${expected.name} <--`;\n        const msg = `Expecting ${expectedMsg} but found --> '${actual.image}' <--`;\n        return msg;\n    },\n    buildNotAllInputParsedMessage({ firstRedundant, ruleName }) {\n        return \"Redundant input, expecting EOF but found: \" + firstRedundant.image;\n    },\n    buildNoViableAltMessage({ expectedPathsPerAlt, actual, previous, customUserDescription, ruleName, }) {\n        const errPrefix = \"Expecting: \";\n        // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n        const actualText = first(actual).image;\n        const errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n        if (customUserDescription) {\n            return errPrefix + customUserDescription + errSuffix;\n        }\n        else {\n            const allLookAheadPaths = reduce(expectedPathsPerAlt, (result, currAltPaths) => result.concat(currAltPaths), []);\n            const nextValidTokenSequences = map(allLookAheadPaths, (currPath) => `[${map(currPath, (currTokenType) => tokenLabel(currTokenType)).join(\", \")}]`);\n            const nextValidSequenceItems = map(nextValidTokenSequences, (itemMsg, idx) => `  ${idx + 1}. ${itemMsg}`);\n            const calculatedDescription = `one of these possible Token sequences:\\n${nextValidSequenceItems.join(\"\\n\")}`;\n            return errPrefix + calculatedDescription + errSuffix;\n        }\n    },\n    buildEarlyExitMessage({ expectedIterationPaths, actual, customUserDescription, ruleName, }) {\n        const errPrefix = \"Expecting: \";\n        // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n        const actualText = first(actual).image;\n        const errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n        if (customUserDescription) {\n            return errPrefix + customUserDescription + errSuffix;\n        }\n        else {\n            const nextValidTokenSequences = map(expectedIterationPaths, (currPath) => `[${map(currPath, (currTokenType) => tokenLabel(currTokenType)).join(\",\")}]`);\n            const calculatedDescription = `expecting at least one iteration which starts with one of these possible Token sequences::\\n  ` +\n                `<${nextValidTokenSequences.join(\" ,\")}>`;\n            return errPrefix + calculatedDescription + errSuffix;\n        }\n    },\n};\nObject.freeze(defaultParserErrorProvider);\nexport const defaultGrammarResolverErrorProvider = {\n    buildRuleNotFoundError(topLevelRule, undefinedRule) {\n        const msg = \"Invalid grammar, reference to a rule which is not defined: ->\" +\n            undefinedRule.nonTerminalName +\n            \"<-\\n\" +\n            \"inside top level rule: ->\" +\n            topLevelRule.name +\n            \"<-\";\n        return msg;\n    },\n};\nexport const defaultGrammarValidatorErrorProvider = {\n    buildDuplicateFoundError(topLevelRule, duplicateProds) {\n        function getExtraProductionArgument(prod) {\n            if (prod instanceof Terminal) {\n                return prod.terminalType.name;\n            }\n            else if (prod instanceof NonTerminal) {\n                return prod.nonTerminalName;\n            }\n            else {\n                return \"\";\n            }\n        }\n        const topLevelName = topLevelRule.name;\n        const duplicateProd = first(duplicateProds);\n        const index = duplicateProd.idx;\n        const dslName = getProductionDslName(duplicateProd);\n        const extraArgument = getExtraProductionArgument(duplicateProd);\n        const hasExplicitIndex = index > 0;\n        let msg = `->${dslName}${hasExplicitIndex ? index : \"\"}<- ${extraArgument ? `with argument: ->${extraArgument}<-` : \"\"}\n                  appears more than once (${duplicateProds.length} times) in the top level rule: ->${topLevelName}<-.                  \n                  For further details see: https://chevrotain.io/docs/FAQ.html#NUMERICAL_SUFFIXES \n                  `;\n        // white space trimming time! better to trim afterwards as it allows to use WELL formatted multi line template strings...\n        msg = msg.replace(/[ \\t]+/g, \" \");\n        msg = msg.replace(/\\s\\s+/g, \"\\n\");\n        return msg;\n    },\n    buildNamespaceConflictError(rule) {\n        const errMsg = `Namespace conflict found in grammar.\\n` +\n            `The grammar has both a Terminal(Token) and a Non-Terminal(Rule) named: <${rule.name}>.\\n` +\n            `To resolve this make sure each Terminal and Non-Terminal names are unique\\n` +\n            `This is easy to accomplish by using the convention that Terminal names start with an uppercase letter\\n` +\n            `and Non-Terminal names start with a lower case letter.`;\n        return errMsg;\n    },\n    buildAlternationPrefixAmbiguityError(options) {\n        const pathMsg = map(options.prefixPath, (currTok) => tokenLabel(currTok)).join(\", \");\n        const occurrence = options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n        const errMsg = `Ambiguous alternatives: <${options.ambiguityIndices.join(\" ,\")}> due to common lookahead prefix\\n` +\n            `in <OR${occurrence}> inside <${options.topLevelRule.name}> Rule,\\n` +\n            `<${pathMsg}> may appears as a prefix path in all these alternatives.\\n` +\n            `See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#COMMON_PREFIX\\n` +\n            `For Further details.`;\n        return errMsg;\n    },\n    buildAlternationAmbiguityError(options) {\n        const pathMsg = map(options.prefixPath, (currtok) => tokenLabel(currtok)).join(\", \");\n        const occurrence = options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n        let currMessage = `Ambiguous Alternatives Detected: <${options.ambiguityIndices.join(\" ,\")}> in <OR${occurrence}>` +\n            ` inside <${options.topLevelRule.name}> Rule,\\n` +\n            `<${pathMsg}> may appears as a prefix path in all these alternatives.\\n`;\n        currMessage =\n            currMessage +\n                `See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#AMBIGUOUS_ALTERNATIVES\\n` +\n                `For Further details.`;\n        return currMessage;\n    },\n    buildEmptyRepetitionError(options) {\n        let dslName = getProductionDslName(options.repetition);\n        if (options.repetition.idx !== 0) {\n            dslName += options.repetition.idx;\n        }\n        const errMsg = `The repetition <${dslName}> within Rule <${options.topLevelRule.name}> can never consume any tokens.\\n` +\n            `This could lead to an infinite loop.`;\n        return errMsg;\n    },\n    // TODO: remove - `errors_public` from nyc.config.js exclude\n    //       once this method is fully removed from this file\n    buildTokenNameError(options) {\n        /* istanbul ignore next */\n        return \"deprecated\";\n    },\n    buildEmptyAlternationError(options) {\n        const errMsg = `Ambiguous empty alternative: <${options.emptyChoiceIdx + 1}>` +\n            ` in <OR${options.alternation.idx}> inside <${options.topLevelRule.name}> Rule.\\n` +\n            `Only the last alternative may be an empty alternative.`;\n        return errMsg;\n    },\n    buildTooManyAlternativesError(options) {\n        const errMsg = `An Alternation cannot have more than 256 alternatives:\\n` +\n            `<OR${options.alternation.idx}> inside <${options.topLevelRule.name}> Rule.\\n has ${options.alternation.definition.length + 1} alternatives.`;\n        return errMsg;\n    },\n    buildLeftRecursionError(options) {\n        const ruleName = options.topLevelRule.name;\n        const pathNames = map(options.leftRecursionPath, (currRule) => currRule.name);\n        const leftRecursivePath = `${ruleName} --> ${pathNames\n            .concat([ruleName])\n            .join(\" --> \")}`;\n        const errMsg = `Left Recursion found in grammar.\\n` +\n            `rule: <${ruleName}> can be invoked from itself (directly or indirectly)\\n` +\n            `without consuming any Tokens. The grammar path that causes this is: \\n ${leftRecursivePath}\\n` +\n            ` To fix this refactor your grammar to remove the left recursion.\\n` +\n            `see: https://en.wikipedia.org/wiki/LL_parser#Left_factoring.`;\n        return errMsg;\n    },\n    // TODO: remove - `errors_public` from nyc.config.js exclude\n    //       once this method is fully removed from this file\n    buildInvalidRuleNameError(options) {\n        /* istanbul ignore next */\n        return \"deprecated\";\n    },\n    buildDuplicateRuleNameError(options) {\n        let ruleName;\n        if (options.topLevelRule instanceof Rule) {\n            ruleName = options.topLevelRule.name;\n        }\n        else {\n            ruleName = options.topLevelRule;\n        }\n        const errMsg = `Duplicate definition, rule: ->${ruleName}<- is already defined in the grammar: ->${options.grammarName}<-`;\n        return errMsg;\n    },\n};\n//# sourceMappingURL=errors_public.js.map","import { ParserDefinitionErrorType, } from \"../parser/parser.js\";\nimport { forEach, values } from \"lodash-es\";\nimport { GAstVisitor } from \"@chevrotain/gast\";\nexport function resolveGrammar(topLevels, errMsgProvider) {\n    const refResolver = new GastRefResolverVisitor(topLevels, errMsgProvider);\n    refResolver.resolveRefs();\n    return refResolver.errors;\n}\nexport class GastRefResolverVisitor extends GAstVisitor {\n    constructor(nameToTopRule, errMsgProvider) {\n        super();\n        this.nameToTopRule = nameToTopRule;\n        this.errMsgProvider = errMsgProvider;\n        this.errors = [];\n    }\n    resolveRefs() {\n        forEach(values(this.nameToTopRule), (prod) => {\n            this.currTopLevel = prod;\n            prod.accept(this);\n        });\n    }\n    visitNonTerminal(node) {\n        const ref = this.nameToTopRule[node.nonTerminalName];\n        if (!ref) {\n            const msg = this.errMsgProvider.buildRuleNotFoundError(this.currTopLevel, node);\n            this.errors.push({\n                message: msg,\n                type: ParserDefinitionErrorType.UNRESOLVED_SUBRULE_REF,\n                ruleName: this.currTopLevel.name,\n                unresolvedRefName: node.nonTerminalName,\n            });\n        }\n        else {\n            node.referencedRule = ref;\n        }\n    }\n}\n//# sourceMappingURL=resolver.js.map","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nexport default arrayAggregator;\n","import baseEach from './_baseEach.js';\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nexport default baseAggregator;\n","import arrayAggregator from './_arrayAggregator.js';\nimport baseAggregator from './_baseAggregator.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nexport default createAggregator;\n","import baseAssignValue from './_baseAssignValue.js';\nimport createAggregator from './_createAggregator.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nexport default groupBy;\n","import baseSlice from './_baseSlice.js';\nimport toInteger from './toInteger.js';\n\n/**\n * Creates a slice of `array` with `n` elements dropped from the end.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to drop.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.dropRight([1, 2, 3]);\n * // => [1, 2]\n *\n * _.dropRight([1, 2, 3], 2);\n * // => [1]\n *\n * _.dropRight([1, 2, 3], 5);\n * // => []\n *\n * _.dropRight([1, 2, 3], 0);\n * // => [1, 2, 3]\n */\nfunction dropRight(array, n, guard) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  n = length - n;\n  return baseSlice(array, 0, n < 0 ? 0 : n);\n}\n\nexport default dropRight;\n","import { every, flatten, forEach, has, isEmpty, map, reduce } from \"lodash-es\";\nimport { possiblePathsFrom } from \"./interpreter.js\";\nimport { RestWalker } from \"./rest.js\";\nimport { tokenStructuredMatcher, tokenStructuredMatcherNoCategories, } from \"../../scan/tokens.js\";\nimport { Alternation, Alternative as AlternativeGAST, GAstVisitor, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, } from \"@chevrotain/gast\";\nexport var PROD_TYPE;\n(function (PROD_TYPE) {\n    PROD_TYPE[PROD_TYPE[\"OPTION\"] = 0] = \"OPTION\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION\"] = 1] = \"REPETITION\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_MANDATORY\"] = 2] = \"REPETITION_MANDATORY\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_MANDATORY_WITH_SEPARATOR\"] = 3] = \"REPETITION_MANDATORY_WITH_SEPARATOR\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_WITH_SEPARATOR\"] = 4] = \"REPETITION_WITH_SEPARATOR\";\n    PROD_TYPE[PROD_TYPE[\"ALTERNATION\"] = 5] = \"ALTERNATION\";\n})(PROD_TYPE || (PROD_TYPE = {}));\nexport function getProdType(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof Option || prod === \"Option\") {\n        return PROD_TYPE.OPTION;\n    }\n    else if (prod instanceof Repetition || prod === \"Repetition\") {\n        return PROD_TYPE.REPETITION;\n    }\n    else if (prod instanceof RepetitionMandatory ||\n        prod === \"RepetitionMandatory\") {\n        return PROD_TYPE.REPETITION_MANDATORY;\n    }\n    else if (prod instanceof RepetitionMandatoryWithSeparator ||\n        prod === \"RepetitionMandatoryWithSeparator\") {\n        return PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR;\n    }\n    else if (prod instanceof RepetitionWithSeparator ||\n        prod === \"RepetitionWithSeparator\") {\n        return PROD_TYPE.REPETITION_WITH_SEPARATOR;\n    }\n    else if (prod instanceof Alternation || prod === \"Alternation\") {\n        return PROD_TYPE.ALTERNATION;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexport function getLookaheadPaths(options) {\n    const { occurrence, rule, prodType, maxLookahead } = options;\n    const type = getProdType(prodType);\n    if (type === PROD_TYPE.ALTERNATION) {\n        return getLookaheadPathsForOr(occurrence, rule, maxLookahead);\n    }\n    else {\n        return getLookaheadPathsForOptionalProd(occurrence, rule, type, maxLookahead);\n    }\n}\nexport function buildLookaheadFuncForOr(occurrence, ruleGrammar, maxLookahead, hasPredicates, dynamicTokensEnabled, laFuncBuilder) {\n    const lookAheadPaths = getLookaheadPathsForOr(occurrence, ruleGrammar, maxLookahead);\n    const tokenMatcher = areTokenCategoriesNotUsed(lookAheadPaths)\n        ? tokenStructuredMatcherNoCategories\n        : tokenStructuredMatcher;\n    return laFuncBuilder(lookAheadPaths, hasPredicates, tokenMatcher, dynamicTokensEnabled);\n}\n/**\n *  When dealing with an Optional production (OPTION/MANY/2nd iteration of AT_LEAST_ONE/...) we need to compare\n *  the lookahead \"inside\" the production and the lookahead immediately \"after\" it in the same top level rule (context free).\n *\n *  Example: given a production:\n *  ABC(DE)?DF\n *\n *  The optional '(DE)?' should only be entered if we see 'DE'. a single Token 'D' is not sufficient to distinguish between the two\n *  alternatives.\n *\n *  @returns A Lookahead function which will return true IFF the parser should parse the Optional production.\n */\nexport function buildLookaheadFuncForOptionalProd(occurrence, ruleGrammar, k, dynamicTokensEnabled, prodType, lookaheadBuilder) {\n    const lookAheadPaths = getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, k);\n    const tokenMatcher = areTokenCategoriesNotUsed(lookAheadPaths)\n        ? tokenStructuredMatcherNoCategories\n        : tokenStructuredMatcher;\n    return lookaheadBuilder(lookAheadPaths[0], tokenMatcher, dynamicTokensEnabled);\n}\nexport function buildAlternativesLookAheadFunc(alts, hasPredicates, tokenMatcher, dynamicTokensEnabled) {\n    const numOfAlts = alts.length;\n    const areAllOneTokenLookahead = every(alts, (currAlt) => {\n        return every(currAlt, (currPath) => {\n            return currPath.length === 1;\n        });\n    });\n    // This version takes into account the predicates as well.\n    if (hasPredicates) {\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function (orAlts) {\n            // unfortunately the predicates must be extracted every single time\n            // as they cannot be cached due to references to parameters(vars) which are no longer valid.\n            // note that in the common case of no predicates, no cpu time will be wasted on this (see else block)\n            const predicates = map(orAlts, (currAlt) => currAlt.GATE);\n            for (let t = 0; t < numOfAlts; t++) {\n                const currAlt = alts[t];\n                const currNumOfPaths = currAlt.length;\n                const currPredicate = predicates[t];\n                if (currPredicate !== undefined && currPredicate.call(this) === false) {\n                    // if the predicate does not match there is no point in checking the paths\n                    continue;\n                }\n                nextPath: for (let j = 0; j < currNumOfPaths; j++) {\n                    const currPath = currAlt[j];\n                    const currPathLength = currPath.length;\n                    for (let i = 0; i < currPathLength; i++) {\n                        const nextToken = this.LA(i + 1);\n                        if (tokenMatcher(nextToken, currPath[i]) === false) {\n                            // mismatch in current path\n                            // try the next pth\n                            continue nextPath;\n                        }\n                    }\n                    // found a full path that matches.\n                    // this will also work for an empty ALT as the loop will be skipped\n                    return t;\n                }\n                // none of the paths for the current alternative matched\n                // try the next alternative\n            }\n            // none of the alternatives could be matched\n            return undefined;\n        };\n    }\n    else if (areAllOneTokenLookahead && !dynamicTokensEnabled) {\n        // optimized (common) case of all the lookaheads paths requiring only\n        // a single token lookahead. These Optimizations cannot work if dynamically defined Tokens are used.\n        const singleTokenAlts = map(alts, (currAlt) => {\n            return flatten(currAlt);\n        });\n        const choiceToAlt = reduce(singleTokenAlts, (result, currAlt, idx) => {\n            forEach(currAlt, (currTokType) => {\n                if (!has(result, currTokType.tokenTypeIdx)) {\n                    result[currTokType.tokenTypeIdx] = idx;\n                }\n                forEach(currTokType.categoryMatches, (currExtendingType) => {\n                    if (!has(result, currExtendingType)) {\n                        result[currExtendingType] = idx;\n                    }\n                });\n            });\n            return result;\n        }, {});\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function () {\n            const nextToken = this.LA(1);\n            return choiceToAlt[nextToken.tokenTypeIdx];\n        };\n    }\n    else {\n        // optimized lookahead without needing to check the predicates at all.\n        // this causes code duplication which is intentional to improve performance.\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function () {\n            for (let t = 0; t < numOfAlts; t++) {\n                const currAlt = alts[t];\n                const currNumOfPaths = currAlt.length;\n                nextPath: for (let j = 0; j < currNumOfPaths; j++) {\n                    const currPath = currAlt[j];\n                    const currPathLength = currPath.length;\n                    for (let i = 0; i < currPathLength; i++) {\n                        const nextToken = this.LA(i + 1);\n                        if (tokenMatcher(nextToken, currPath[i]) === false) {\n                            // mismatch in current path\n                            // try the next pth\n                            continue nextPath;\n                        }\n                    }\n                    // found a full path that matches.\n                    // this will also work for an empty ALT as the loop will be skipped\n                    return t;\n                }\n                // none of the paths for the current alternative matched\n                // try the next alternative\n            }\n            // none of the alternatives could be matched\n            return undefined;\n        };\n    }\n}\nexport function buildSingleAlternativeLookaheadFunction(alt, tokenMatcher, dynamicTokensEnabled) {\n    const areAllOneTokenLookahead = every(alt, (currPath) => {\n        return currPath.length === 1;\n    });\n    const numOfPaths = alt.length;\n    // optimized (common) case of all the lookaheads paths requiring only\n    // a single token lookahead.\n    if (areAllOneTokenLookahead && !dynamicTokensEnabled) {\n        const singleTokensTypes = flatten(alt);\n        if (singleTokensTypes.length === 1 &&\n            isEmpty(singleTokensTypes[0].categoryMatches)) {\n            const expectedTokenType = singleTokensTypes[0];\n            const expectedTokenUniqueKey = expectedTokenType.tokenTypeIdx;\n            return function () {\n                return this.LA(1).tokenTypeIdx === expectedTokenUniqueKey;\n            };\n        }\n        else {\n            const choiceToAlt = reduce(singleTokensTypes, (result, currTokType, idx) => {\n                result[currTokType.tokenTypeIdx] = true;\n                forEach(currTokType.categoryMatches, (currExtendingType) => {\n                    result[currExtendingType] = true;\n                });\n                return result;\n            }, []);\n            return function () {\n                const nextToken = this.LA(1);\n                return choiceToAlt[nextToken.tokenTypeIdx] === true;\n            };\n        }\n    }\n    else {\n        return function () {\n            nextPath: for (let j = 0; j < numOfPaths; j++) {\n                const currPath = alt[j];\n                const currPathLength = currPath.length;\n                for (let i = 0; i < currPathLength; i++) {\n                    const nextToken = this.LA(i + 1);\n                    if (tokenMatcher(nextToken, currPath[i]) === false) {\n                        // mismatch in current path\n                        // try the next pth\n                        continue nextPath;\n                    }\n                }\n                // found a full path that matches.\n                return true;\n            }\n            // none of the paths matched\n            return false;\n        };\n    }\n}\nclass RestDefinitionFinderWalker extends RestWalker {\n    constructor(topProd, targetOccurrence, targetProdType) {\n        super();\n        this.topProd = topProd;\n        this.targetOccurrence = targetOccurrence;\n        this.targetProdType = targetProdType;\n    }\n    startWalking() {\n        this.walk(this.topProd);\n        return this.restDef;\n    }\n    checkIsTarget(node, expectedProdType, currRest, prevRest) {\n        if (node.idx === this.targetOccurrence &&\n            this.targetProdType === expectedProdType) {\n            this.restDef = currRest.concat(prevRest);\n            return true;\n        }\n        // performance optimization, do not iterate over the entire Grammar ast after we have found the target\n        return false;\n    }\n    walkOption(optionProd, currRest, prevRest) {\n        if (!this.checkIsTarget(optionProd, PROD_TYPE.OPTION, currRest, prevRest)) {\n            super.walkOption(optionProd, currRest, prevRest);\n        }\n    }\n    walkAtLeastOne(atLeastOneProd, currRest, prevRest) {\n        if (!this.checkIsTarget(atLeastOneProd, PROD_TYPE.REPETITION_MANDATORY, currRest, prevRest)) {\n            super.walkOption(atLeastOneProd, currRest, prevRest);\n        }\n    }\n    walkAtLeastOneSep(atLeastOneSepProd, currRest, prevRest) {\n        if (!this.checkIsTarget(atLeastOneSepProd, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, currRest, prevRest)) {\n            super.walkOption(atLeastOneSepProd, currRest, prevRest);\n        }\n    }\n    walkMany(manyProd, currRest, prevRest) {\n        if (!this.checkIsTarget(manyProd, PROD_TYPE.REPETITION, currRest, prevRest)) {\n            super.walkOption(manyProd, currRest, prevRest);\n        }\n    }\n    walkManySep(manySepProd, currRest, prevRest) {\n        if (!this.checkIsTarget(manySepProd, PROD_TYPE.REPETITION_WITH_SEPARATOR, currRest, prevRest)) {\n            super.walkOption(manySepProd, currRest, prevRest);\n        }\n    }\n}\n/**\n * Returns the definition of a target production in a top level level rule.\n */\nclass InsideDefinitionFinderVisitor extends GAstVisitor {\n    constructor(targetOccurrence, targetProdType, targetRef) {\n        super();\n        this.targetOccurrence = targetOccurrence;\n        this.targetProdType = targetProdType;\n        this.targetRef = targetRef;\n        this.result = [];\n    }\n    checkIsTarget(node, expectedProdName) {\n        if (node.idx === this.targetOccurrence &&\n            this.targetProdType === expectedProdName &&\n            (this.targetRef === undefined || node === this.targetRef)) {\n            this.result = node.definition;\n        }\n    }\n    visitOption(node) {\n        this.checkIsTarget(node, PROD_TYPE.OPTION);\n    }\n    visitRepetition(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION);\n    }\n    visitRepetitionMandatory(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_MANDATORY);\n    }\n    visitRepetitionMandatoryWithSeparator(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR);\n    }\n    visitRepetitionWithSeparator(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_WITH_SEPARATOR);\n    }\n    visitAlternation(node) {\n        this.checkIsTarget(node, PROD_TYPE.ALTERNATION);\n    }\n}\nfunction initializeArrayOfArrays(size) {\n    const result = new Array(size);\n    for (let i = 0; i < size; i++) {\n        result[i] = [];\n    }\n    return result;\n}\n/**\n * A sort of hash function between a Path in the grammar and a string.\n * Note that this returns multiple \"hashes\" to support the scenario of token categories.\n * -  A single path with categories may match multiple **actual** paths.\n */\nfunction pathToHashKeys(path) {\n    let keys = [\"\"];\n    for (let i = 0; i < path.length; i++) {\n        const tokType = path[i];\n        const longerKeys = [];\n        for (let j = 0; j < keys.length; j++) {\n            const currShorterKey = keys[j];\n            longerKeys.push(currShorterKey + \"_\" + tokType.tokenTypeIdx);\n            for (let t = 0; t < tokType.categoryMatches.length; t++) {\n                const categoriesKeySuffix = \"_\" + tokType.categoryMatches[t];\n                longerKeys.push(currShorterKey + categoriesKeySuffix);\n            }\n        }\n        keys = longerKeys;\n    }\n    return keys;\n}\n/**\n * Imperative style due to being called from a hot spot\n */\nfunction isUniquePrefixHash(altKnownPathsKeys, searchPathKeys, idx) {\n    for (let currAltIdx = 0; currAltIdx < altKnownPathsKeys.length; currAltIdx++) {\n        // We only want to test vs the other alternatives\n        if (currAltIdx === idx) {\n            continue;\n        }\n        const otherAltKnownPathsKeys = altKnownPathsKeys[currAltIdx];\n        for (let searchIdx = 0; searchIdx < searchPathKeys.length; searchIdx++) {\n            const searchKey = searchPathKeys[searchIdx];\n            if (otherAltKnownPathsKeys[searchKey] === true) {\n                return false;\n            }\n        }\n    }\n    // None of the SearchPathKeys were found in any of the other alternatives\n    return true;\n}\nexport function lookAheadSequenceFromAlternatives(altsDefs, k) {\n    const partialAlts = map(altsDefs, (currAlt) => possiblePathsFrom([currAlt], 1));\n    const finalResult = initializeArrayOfArrays(partialAlts.length);\n    const altsHashes = map(partialAlts, (currAltPaths) => {\n        const dict = {};\n        forEach(currAltPaths, (item) => {\n            const keys = pathToHashKeys(item.partialPath);\n            forEach(keys, (currKey) => {\n                dict[currKey] = true;\n            });\n        });\n        return dict;\n    });\n    let newData = partialAlts;\n    // maxLookahead loop\n    for (let pathLength = 1; pathLength <= k; pathLength++) {\n        const currDataset = newData;\n        newData = initializeArrayOfArrays(currDataset.length);\n        // alternatives loop\n        for (let altIdx = 0; altIdx < currDataset.length; altIdx++) {\n            const currAltPathsAndSuffixes = currDataset[altIdx];\n            // paths in current alternative loop\n            for (let currPathIdx = 0; currPathIdx < currAltPathsAndSuffixes.length; currPathIdx++) {\n                const currPathPrefix = currAltPathsAndSuffixes[currPathIdx].partialPath;\n                const suffixDef = currAltPathsAndSuffixes[currPathIdx].suffixDef;\n                const prefixKeys = pathToHashKeys(currPathPrefix);\n                const isUnique = isUniquePrefixHash(altsHashes, prefixKeys, altIdx);\n                // End of the line for this path.\n                if (isUnique || isEmpty(suffixDef) || currPathPrefix.length === k) {\n                    const currAltResult = finalResult[altIdx];\n                    // TODO: Can we implement a containsPath using Maps/Dictionaries?\n                    if (containsPath(currAltResult, currPathPrefix) === false) {\n                        currAltResult.push(currPathPrefix);\n                        // Update all new  keys for the current path.\n                        for (let j = 0; j < prefixKeys.length; j++) {\n                            const currKey = prefixKeys[j];\n                            altsHashes[altIdx][currKey] = true;\n                        }\n                    }\n                }\n                // Expand longer paths\n                else {\n                    const newPartialPathsAndSuffixes = possiblePathsFrom(suffixDef, pathLength + 1, currPathPrefix);\n                    newData[altIdx] = newData[altIdx].concat(newPartialPathsAndSuffixes);\n                    // Update keys for new known paths\n                    forEach(newPartialPathsAndSuffixes, (item) => {\n                        const prefixKeys = pathToHashKeys(item.partialPath);\n                        forEach(prefixKeys, (key) => {\n                            altsHashes[altIdx][key] = true;\n                        });\n                    });\n                }\n            }\n        }\n    }\n    return finalResult;\n}\nexport function getLookaheadPathsForOr(occurrence, ruleGrammar, k, orProd) {\n    const visitor = new InsideDefinitionFinderVisitor(occurrence, PROD_TYPE.ALTERNATION, orProd);\n    ruleGrammar.accept(visitor);\n    return lookAheadSequenceFromAlternatives(visitor.result, k);\n}\nexport function getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, k) {\n    const insideDefVisitor = new InsideDefinitionFinderVisitor(occurrence, prodType);\n    ruleGrammar.accept(insideDefVisitor);\n    const insideDef = insideDefVisitor.result;\n    const afterDefWalker = new RestDefinitionFinderWalker(ruleGrammar, occurrence, prodType);\n    const afterDef = afterDefWalker.startWalking();\n    const insideFlat = new AlternativeGAST({ definition: insideDef });\n    const afterFlat = new AlternativeGAST({ definition: afterDef });\n    return lookAheadSequenceFromAlternatives([insideFlat, afterFlat], k);\n}\nexport function containsPath(alternative, searchPath) {\n    compareOtherPath: for (let i = 0; i < alternative.length; i++) {\n        const otherPath = alternative[i];\n        if (otherPath.length !== searchPath.length) {\n            continue;\n        }\n        for (let j = 0; j < otherPath.length; j++) {\n            const searchTok = searchPath[j];\n            const otherTok = otherPath[j];\n            const matchingTokens = searchTok === otherTok ||\n                otherTok.categoryMatchesMap[searchTok.tokenTypeIdx] !== undefined;\n            if (matchingTokens === false) {\n                continue compareOtherPath;\n            }\n        }\n        return true;\n    }\n    return false;\n}\nexport function isStrictPrefixOfPath(prefix, other) {\n    return (prefix.length < other.length &&\n        every(prefix, (tokType, idx) => {\n            const otherTokType = other[idx];\n            return (tokType === otherTokType ||\n                otherTokType.categoryMatchesMap[tokType.tokenTypeIdx]);\n        }));\n}\nexport function areTokenCategoriesNotUsed(lookAheadPaths) {\n    return every(lookAheadPaths, (singleAltPaths) => every(singleAltPaths, (singlePath) => every(singlePath, (token) => isEmpty(token.categoryMatches))));\n}\n//# sourceMappingURL=lookahead.js.map","import { clone, drop, dropRight, first as _first, forEach, isEmpty, last, } from \"lodash-es\";\nimport { first } from \"./first.js\";\nimport { RestWalker } from \"./rest.js\";\nimport { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"@chevrotain/gast\";\nexport class AbstractNextPossibleTokensWalker extends RestWalker {\n    constructor(topProd, path) {\n        super();\n        this.topProd = topProd;\n        this.path = path;\n        this.possibleTokTypes = [];\n        this.nextProductionName = \"\";\n        this.nextProductionOccurrence = 0;\n        this.found = false;\n        this.isAtEndOfPath = false;\n    }\n    startWalking() {\n        this.found = false;\n        if (this.path.ruleStack[0] !== this.topProd.name) {\n            throw Error(\"The path does not start with the walker's top Rule!\");\n        }\n        // immutable for the win\n        this.ruleStack = clone(this.path.ruleStack).reverse(); // intelij bug requires assertion\n        this.occurrenceStack = clone(this.path.occurrenceStack).reverse(); // intelij bug requires assertion\n        // already verified that the first production is valid, we now seek the 2nd production\n        this.ruleStack.pop();\n        this.occurrenceStack.pop();\n        this.updateExpectedNext();\n        this.walk(this.topProd);\n        return this.possibleTokTypes;\n    }\n    walk(prod, prevRest = []) {\n        // stop scanning once we found the path\n        if (!this.found) {\n            super.walk(prod, prevRest);\n        }\n    }\n    walkProdRef(refProd, currRest, prevRest) {\n        // found the next production, need to keep walking in it\n        if (refProd.referencedRule.name === this.nextProductionName &&\n            refProd.idx === this.nextProductionOccurrence) {\n            const fullRest = currRest.concat(prevRest);\n            this.updateExpectedNext();\n            this.walk(refProd.referencedRule, fullRest);\n        }\n    }\n    updateExpectedNext() {\n        // need to consume the Terminal\n        if (isEmpty(this.ruleStack)) {\n            // must reset nextProductionXXX to avoid walking down another Top Level production while what we are\n            // really seeking is the last Terminal...\n            this.nextProductionName = \"\";\n            this.nextProductionOccurrence = 0;\n            this.isAtEndOfPath = true;\n        }\n        else {\n            this.nextProductionName = this.ruleStack.pop();\n            this.nextProductionOccurrence = this.occurrenceStack.pop();\n        }\n    }\n}\nexport class NextAfterTokenWalker extends AbstractNextPossibleTokensWalker {\n    constructor(topProd, path) {\n        super(topProd, path);\n        this.path = path;\n        this.nextTerminalName = \"\";\n        this.nextTerminalOccurrence = 0;\n        this.nextTerminalName = this.path.lastTok.name;\n        this.nextTerminalOccurrence = this.path.lastTokOccurrence;\n    }\n    walkTerminal(terminal, currRest, prevRest) {\n        if (this.isAtEndOfPath &&\n            terminal.terminalType.name === this.nextTerminalName &&\n            terminal.idx === this.nextTerminalOccurrence &&\n            !this.found) {\n            const fullRest = currRest.concat(prevRest);\n            const restProd = new Alternative({ definition: fullRest });\n            this.possibleTokTypes = first(restProd);\n            this.found = true;\n        }\n    }\n}\n/**\n * This walker only \"walks\" a single \"TOP\" level in the Grammar Ast, this means\n * it never \"follows\" production refs\n */\nexport class AbstractNextTerminalAfterProductionWalker extends RestWalker {\n    constructor(topRule, occurrence) {\n        super();\n        this.topRule = topRule;\n        this.occurrence = occurrence;\n        this.result = {\n            token: undefined,\n            occurrence: undefined,\n            isEndOfRule: undefined,\n        };\n    }\n    startWalking() {\n        this.walk(this.topRule);\n        return this.result;\n    }\n}\nexport class NextTerminalAfterManyWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkMany(manyProd, currRest, prevRest) {\n        if (manyProd.idx === this.occurrence) {\n            const firstAfterMany = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterMany === undefined;\n            if (firstAfterMany instanceof Terminal) {\n                this.result.token = firstAfterMany.terminalType;\n                this.result.occurrence = firstAfterMany.idx;\n            }\n        }\n        else {\n            super.walkMany(manyProd, currRest, prevRest);\n        }\n    }\n}\nexport class NextTerminalAfterManySepWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkManySep(manySepProd, currRest, prevRest) {\n        if (manySepProd.idx === this.occurrence) {\n            const firstAfterManySep = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterManySep === undefined;\n            if (firstAfterManySep instanceof Terminal) {\n                this.result.token = firstAfterManySep.terminalType;\n                this.result.occurrence = firstAfterManySep.idx;\n            }\n        }\n        else {\n            super.walkManySep(manySepProd, currRest, prevRest);\n        }\n    }\n}\nexport class NextTerminalAfterAtLeastOneWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkAtLeastOne(atLeastOneProd, currRest, prevRest) {\n        if (atLeastOneProd.idx === this.occurrence) {\n            const firstAfterAtLeastOne = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterAtLeastOne === undefined;\n            if (firstAfterAtLeastOne instanceof Terminal) {\n                this.result.token = firstAfterAtLeastOne.terminalType;\n                this.result.occurrence = firstAfterAtLeastOne.idx;\n            }\n        }\n        else {\n            super.walkAtLeastOne(atLeastOneProd, currRest, prevRest);\n        }\n    }\n}\n// TODO: reduce code duplication in the AfterWalkers\nexport class NextTerminalAfterAtLeastOneSepWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkAtLeastOneSep(atleastOneSepProd, currRest, prevRest) {\n        if (atleastOneSepProd.idx === this.occurrence) {\n            const firstAfterfirstAfterAtLeastOneSep = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterfirstAfterAtLeastOneSep === undefined;\n            if (firstAfterfirstAfterAtLeastOneSep instanceof Terminal) {\n                this.result.token = firstAfterfirstAfterAtLeastOneSep.terminalType;\n                this.result.occurrence = firstAfterfirstAfterAtLeastOneSep.idx;\n            }\n        }\n        else {\n            super.walkAtLeastOneSep(atleastOneSepProd, currRest, prevRest);\n        }\n    }\n}\nexport function possiblePathsFrom(targetDef, maxLength, currPath = []) {\n    // avoid side effects\n    currPath = clone(currPath);\n    let result = [];\n    let i = 0;\n    // TODO: avoid inner funcs\n    function remainingPathWith(nextDef) {\n        return nextDef.concat(drop(targetDef, i + 1));\n    }\n    // TODO: avoid inner funcs\n    function getAlternativesForProd(definition) {\n        const alternatives = possiblePathsFrom(remainingPathWith(definition), maxLength, currPath);\n        return result.concat(alternatives);\n    }\n    /**\n     * Mandatory productions will halt the loop as the paths computed from their recursive calls will already contain the\n     * following (rest) of the targetDef.\n     *\n     * For optional productions (Option/Repetition/...) the loop will continue to represent the paths that do not include the\n     * the optional production.\n     */\n    while (currPath.length < maxLength && i < targetDef.length) {\n        const prod = targetDef[i];\n        /* istanbul ignore else */\n        if (prod instanceof Alternative) {\n            return getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof NonTerminal) {\n            return getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof Option) {\n            result = getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof RepetitionMandatory) {\n            const newDef = prod.definition.concat([\n                new Repetition({\n                    definition: prod.definition,\n                }),\n            ]);\n            return getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof RepetitionMandatoryWithSeparator) {\n            const newDef = [\n                new Alternative({ definition: prod.definition }),\n                new Repetition({\n                    definition: [new Terminal({ terminalType: prod.separator })].concat(prod.definition),\n                }),\n            ];\n            return getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof RepetitionWithSeparator) {\n            const newDef = prod.definition.concat([\n                new Repetition({\n                    definition: [new Terminal({ terminalType: prod.separator })].concat(prod.definition),\n                }),\n            ]);\n            result = getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof Repetition) {\n            const newDef = prod.definition.concat([\n                new Repetition({\n                    definition: prod.definition,\n                }),\n            ]);\n            result = getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof Alternation) {\n            forEach(prod.definition, (currAlt) => {\n                // TODO: this is a limited check for empty alternatives\n                //   It would prevent a common case of infinite loops during parser initialization.\n                //   However **in-directly** empty alternatives may still cause issues.\n                if (isEmpty(currAlt.definition) === false) {\n                    result = getAlternativesForProd(currAlt.definition);\n                }\n            });\n            return result;\n        }\n        else if (prod instanceof Terminal) {\n            currPath.push(prod.terminalType);\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n        i++;\n    }\n    result.push({\n        partialPath: currPath,\n        suffixDef: drop(targetDef, i),\n    });\n    return result;\n}\nexport function nextPossibleTokensAfter(initialDef, tokenVector, tokMatcher, maxLookAhead) {\n    const EXIT_NON_TERMINAL = \"EXIT_NONE_TERMINAL\";\n    // to avoid creating a new Array each time.\n    const EXIT_NON_TERMINAL_ARR = [EXIT_NON_TERMINAL];\n    const EXIT_ALTERNATIVE = \"EXIT_ALTERNATIVE\";\n    let foundCompletePath = false;\n    const tokenVectorLength = tokenVector.length;\n    const minimalAlternativesIndex = tokenVectorLength - maxLookAhead - 1;\n    const result = [];\n    const possiblePaths = [];\n    possiblePaths.push({\n        idx: -1,\n        def: initialDef,\n        ruleStack: [],\n        occurrenceStack: [],\n    });\n    while (!isEmpty(possiblePaths)) {\n        const currPath = possiblePaths.pop();\n        // skip alternatives if no more results can be found (assuming deterministic grammar with fixed lookahead)\n        if (currPath === EXIT_ALTERNATIVE) {\n            if (foundCompletePath &&\n                last(possiblePaths).idx <= minimalAlternativesIndex) {\n                // remove irrelevant alternative\n                possiblePaths.pop();\n            }\n            continue;\n        }\n        const currDef = currPath.def;\n        const currIdx = currPath.idx;\n        const currRuleStack = currPath.ruleStack;\n        const currOccurrenceStack = currPath.occurrenceStack;\n        // For Example: an empty path could exist in a valid grammar in the case of an EMPTY_ALT\n        if (isEmpty(currDef)) {\n            continue;\n        }\n        const prod = currDef[0];\n        /* istanbul ignore else */\n        if (prod === EXIT_NON_TERMINAL) {\n            const nextPath = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: dropRight(currRuleStack),\n                occurrenceStack: dropRight(currOccurrenceStack),\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof Terminal) {\n            /* istanbul ignore else */\n            if (currIdx < tokenVectorLength - 1) {\n                const nextIdx = currIdx + 1;\n                const actualToken = tokenVector[nextIdx];\n                if (tokMatcher(actualToken, prod.terminalType)) {\n                    const nextPath = {\n                        idx: nextIdx,\n                        def: drop(currDef),\n                        ruleStack: currRuleStack,\n                        occurrenceStack: currOccurrenceStack,\n                    };\n                    possiblePaths.push(nextPath);\n                }\n                // end of the line\n            }\n            else if (currIdx === tokenVectorLength - 1) {\n                // IGNORE ABOVE ELSE\n                result.push({\n                    nextTokenType: prod.terminalType,\n                    nextTokenOccurrence: prod.idx,\n                    ruleStack: currRuleStack,\n                    occurrenceStack: currOccurrenceStack,\n                });\n                foundCompletePath = true;\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        }\n        else if (prod instanceof NonTerminal) {\n            const newRuleStack = clone(currRuleStack);\n            newRuleStack.push(prod.nonTerminalName);\n            const newOccurrenceStack = clone(currOccurrenceStack);\n            newOccurrenceStack.push(prod.idx);\n            const nextPath = {\n                idx: currIdx,\n                def: prod.definition.concat(EXIT_NON_TERMINAL_ARR, drop(currDef)),\n                ruleStack: newRuleStack,\n                occurrenceStack: newOccurrenceStack,\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof Option) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            const nextPathWithout = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            const nextPathWith = {\n                idx: currIdx,\n                def: prod.definition.concat(drop(currDef)),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof RepetitionMandatory) {\n            // TODO:(THE NEW operators here take a while...) (convert once?)\n            const secondIteration = new Repetition({\n                definition: prod.definition,\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([secondIteration], drop(currDef));\n            const nextPath = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof RepetitionMandatoryWithSeparator) {\n            // TODO:(THE NEW operators here take a while...) (convert once?)\n            const separatorGast = new Terminal({\n                terminalType: prod.separator,\n            });\n            const secondIteration = new Repetition({\n                definition: [separatorGast].concat(prod.definition),\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([secondIteration], drop(currDef));\n            const nextPath = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof RepetitionWithSeparator) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            const nextPathWithout = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            const separatorGast = new Terminal({\n                terminalType: prod.separator,\n            });\n            const nthRepetition = new Repetition({\n                definition: [separatorGast].concat(prod.definition),\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([nthRepetition], drop(currDef));\n            const nextPathWith = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof Repetition) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            const nextPathWithout = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            // TODO: an empty repetition will cause infinite loops here, will the parser detect this in selfAnalysis?\n            const nthRepetition = new Repetition({\n                definition: prod.definition,\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([nthRepetition], drop(currDef));\n            const nextPathWith = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof Alternation) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            for (let i = prod.definition.length - 1; i >= 0; i--) {\n                const currAlt = prod.definition[i];\n                const currAltPath = {\n                    idx: currIdx,\n                    def: currAlt.definition.concat(drop(currDef)),\n                    ruleStack: currRuleStack,\n                    occurrenceStack: currOccurrenceStack,\n                };\n                possiblePaths.push(currAltPath);\n                possiblePaths.push(EXIT_ALTERNATIVE);\n            }\n        }\n        else if (prod instanceof Alternative) {\n            possiblePaths.push({\n                idx: currIdx,\n                def: prod.definition.concat(drop(currDef)),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            });\n        }\n        else if (prod instanceof Rule) {\n            // last because we should only encounter at most a single one of these per invocation.\n            possiblePaths.push(expandTopLevelRule(prod, currIdx, currRuleStack, currOccurrenceStack));\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    }\n    return result;\n}\nfunction expandTopLevelRule(topRule, currIdx, currRuleStack, currOccurrenceStack) {\n    const newRuleStack = clone(currRuleStack);\n    newRuleStack.push(topRule.name);\n    const newCurrOccurrenceStack = clone(currOccurrenceStack);\n    // top rule is always assumed to have been called with occurrence index 1\n    newCurrOccurrenceStack.push(1);\n    return {\n        idx: currIdx,\n        def: topRule.definition,\n        ruleStack: newRuleStack,\n        occurrenceStack: newCurrOccurrenceStack,\n    };\n}\n//# sourceMappingURL=interpreter.js.map","import { clone, compact, difference, drop, dropRight, filter, first, flatMap, flatten, forEach, groupBy, includes, isEmpty, map, pickBy, reduce, reject, values, } from \"lodash-es\";\nimport { ParserDefinitionErrorType, } from \"../parser/parser.js\";\nimport { Alternation, Alternative as AlternativeGAST, GAstVisitor, getProductionDslName, isOptionalProd, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Terminal, } from \"@chevrotain/gast\";\nimport { containsPath, getLookaheadPathsForOptionalProd, getLookaheadPathsForOr, getProdType, isStrictPrefixOfPath, } from \"./lookahead.js\";\nimport { nextPossibleTokensAfter } from \"./interpreter.js\";\nimport { tokenStructuredMatcher } from \"../../scan/tokens.js\";\nexport function validateLookahead(options) {\n    const lookaheadValidationErrorMessages = options.lookaheadStrategy.validate({\n        rules: options.rules,\n        tokenTypes: options.tokenTypes,\n        grammarName: options.grammarName,\n    });\n    return map(lookaheadValidationErrorMessages, (errorMessage) => (Object.assign({ type: ParserDefinitionErrorType.CUSTOM_LOOKAHEAD_VALIDATION }, errorMessage)));\n}\nexport function validateGrammar(topLevels, tokenTypes, errMsgProvider, grammarName) {\n    const duplicateErrors = flatMap(topLevels, (currTopLevel) => validateDuplicateProductions(currTopLevel, errMsgProvider));\n    const termsNamespaceConflictErrors = checkTerminalAndNoneTerminalsNameSpace(topLevels, tokenTypes, errMsgProvider);\n    const tooManyAltsErrors = flatMap(topLevels, (curRule) => validateTooManyAlts(curRule, errMsgProvider));\n    const duplicateRulesError = flatMap(topLevels, (curRule) => validateRuleDoesNotAlreadyExist(curRule, topLevels, grammarName, errMsgProvider));\n    return duplicateErrors.concat(termsNamespaceConflictErrors, tooManyAltsErrors, duplicateRulesError);\n}\nfunction validateDuplicateProductions(topLevelRule, errMsgProvider) {\n    const collectorVisitor = new OccurrenceValidationCollector();\n    topLevelRule.accept(collectorVisitor);\n    const allRuleProductions = collectorVisitor.allProductions;\n    const productionGroups = groupBy(allRuleProductions, identifyProductionForDuplicates);\n    const duplicates = pickBy(productionGroups, (currGroup) => {\n        return currGroup.length > 1;\n    });\n    const errors = map(values(duplicates), (currDuplicates) => {\n        const firstProd = first(currDuplicates);\n        const msg = errMsgProvider.buildDuplicateFoundError(topLevelRule, currDuplicates);\n        const dslName = getProductionDslName(firstProd);\n        const defError = {\n            message: msg,\n            type: ParserDefinitionErrorType.DUPLICATE_PRODUCTIONS,\n            ruleName: topLevelRule.name,\n            dslName: dslName,\n            occurrence: firstProd.idx,\n        };\n        const param = getExtraProductionArgument(firstProd);\n        if (param) {\n            defError.parameter = param;\n        }\n        return defError;\n    });\n    return errors;\n}\nexport function identifyProductionForDuplicates(prod) {\n    return `${getProductionDslName(prod)}_#_${prod.idx}_#_${getExtraProductionArgument(prod)}`;\n}\nfunction getExtraProductionArgument(prod) {\n    if (prod instanceof Terminal) {\n        return prod.terminalType.name;\n    }\n    else if (prod instanceof NonTerminal) {\n        return prod.nonTerminalName;\n    }\n    else {\n        return \"\";\n    }\n}\nexport class OccurrenceValidationCollector extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.allProductions = [];\n    }\n    visitNonTerminal(subrule) {\n        this.allProductions.push(subrule);\n    }\n    visitOption(option) {\n        this.allProductions.push(option);\n    }\n    visitRepetitionWithSeparator(manySep) {\n        this.allProductions.push(manySep);\n    }\n    visitRepetitionMandatory(atLeastOne) {\n        this.allProductions.push(atLeastOne);\n    }\n    visitRepetitionMandatoryWithSeparator(atLeastOneSep) {\n        this.allProductions.push(atLeastOneSep);\n    }\n    visitRepetition(many) {\n        this.allProductions.push(many);\n    }\n    visitAlternation(or) {\n        this.allProductions.push(or);\n    }\n    visitTerminal(terminal) {\n        this.allProductions.push(terminal);\n    }\n}\nexport function validateRuleDoesNotAlreadyExist(rule, allRules, className, errMsgProvider) {\n    const errors = [];\n    const occurrences = reduce(allRules, (result, curRule) => {\n        if (curRule.name === rule.name) {\n            return result + 1;\n        }\n        return result;\n    }, 0);\n    if (occurrences > 1) {\n        const errMsg = errMsgProvider.buildDuplicateRuleNameError({\n            topLevelRule: rule,\n            grammarName: className,\n        });\n        errors.push({\n            message: errMsg,\n            type: ParserDefinitionErrorType.DUPLICATE_RULE_NAME,\n            ruleName: rule.name,\n        });\n    }\n    return errors;\n}\n// TODO: is there anyway to get only the rule names of rules inherited from the super grammars?\n// This is not part of the IGrammarErrorProvider because the validation cannot be performed on\n// The grammar structure, only at runtime.\nexport function validateRuleIsOverridden(ruleName, definedRulesNames, className) {\n    const errors = [];\n    let errMsg;\n    if (!includes(definedRulesNames, ruleName)) {\n        errMsg =\n            `Invalid rule override, rule: ->${ruleName}<- cannot be overridden in the grammar: ->${className}<-` +\n                `as it is not defined in any of the super grammars `;\n        errors.push({\n            message: errMsg,\n            type: ParserDefinitionErrorType.INVALID_RULE_OVERRIDE,\n            ruleName: ruleName,\n        });\n    }\n    return errors;\n}\nexport function validateNoLeftRecursion(topRule, currRule, errMsgProvider, path = []) {\n    const errors = [];\n    const nextNonTerminals = getFirstNoneTerminal(currRule.definition);\n    if (isEmpty(nextNonTerminals)) {\n        return [];\n    }\n    else {\n        const ruleName = topRule.name;\n        const foundLeftRecursion = includes(nextNonTerminals, topRule);\n        if (foundLeftRecursion) {\n            errors.push({\n                message: errMsgProvider.buildLeftRecursionError({\n                    topLevelRule: topRule,\n                    leftRecursionPath: path,\n                }),\n                type: ParserDefinitionErrorType.LEFT_RECURSION,\n                ruleName: ruleName,\n            });\n        }\n        // we are only looking for cyclic paths leading back to the specific topRule\n        // other cyclic paths are ignored, we still need this difference to avoid infinite loops...\n        const validNextSteps = difference(nextNonTerminals, path.concat([topRule]));\n        const errorsFromNextSteps = flatMap(validNextSteps, (currRefRule) => {\n            const newPath = clone(path);\n            newPath.push(currRefRule);\n            return validateNoLeftRecursion(topRule, currRefRule, errMsgProvider, newPath);\n        });\n        return errors.concat(errorsFromNextSteps);\n    }\n}\nexport function getFirstNoneTerminal(definition) {\n    let result = [];\n    if (isEmpty(definition)) {\n        return result;\n    }\n    const firstProd = first(definition);\n    /* istanbul ignore else */\n    if (firstProd instanceof NonTerminal) {\n        result.push(firstProd.referencedRule);\n    }\n    else if (firstProd instanceof AlternativeGAST ||\n        firstProd instanceof Option ||\n        firstProd instanceof RepetitionMandatory ||\n        firstProd instanceof RepetitionMandatoryWithSeparator ||\n        firstProd instanceof RepetitionWithSeparator ||\n        firstProd instanceof Repetition) {\n        result = result.concat(getFirstNoneTerminal(firstProd.definition));\n    }\n    else if (firstProd instanceof Alternation) {\n        // each sub definition in alternation is a FLAT\n        result = flatten(map(firstProd.definition, (currSubDef) => getFirstNoneTerminal(currSubDef.definition)));\n    }\n    else if (firstProd instanceof Terminal) {\n        // nothing to see, move along\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n    const isFirstOptional = isOptionalProd(firstProd);\n    const hasMore = definition.length > 1;\n    if (isFirstOptional && hasMore) {\n        const rest = drop(definition);\n        return result.concat(getFirstNoneTerminal(rest));\n    }\n    else {\n        return result;\n    }\n}\nclass OrCollector extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.alternations = [];\n    }\n    visitAlternation(node) {\n        this.alternations.push(node);\n    }\n}\nexport function validateEmptyOrAlternative(topLevelRule, errMsgProvider) {\n    const orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    const ors = orCollector.alternations;\n    const errors = flatMap(ors, (currOr) => {\n        const exceptLast = dropRight(currOr.definition);\n        return flatMap(exceptLast, (currAlternative, currAltIdx) => {\n            const possibleFirstInAlt = nextPossibleTokensAfter([currAlternative], [], tokenStructuredMatcher, 1);\n            if (isEmpty(possibleFirstInAlt)) {\n                return [\n                    {\n                        message: errMsgProvider.buildEmptyAlternationError({\n                            topLevelRule: topLevelRule,\n                            alternation: currOr,\n                            emptyChoiceIdx: currAltIdx,\n                        }),\n                        type: ParserDefinitionErrorType.NONE_LAST_EMPTY_ALT,\n                        ruleName: topLevelRule.name,\n                        occurrence: currOr.idx,\n                        alternative: currAltIdx + 1,\n                    },\n                ];\n            }\n            else {\n                return [];\n            }\n        });\n    });\n    return errors;\n}\nexport function validateAmbiguousAlternationAlternatives(topLevelRule, globalMaxLookahead, errMsgProvider) {\n    const orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    let ors = orCollector.alternations;\n    // New Handling of ignoring ambiguities\n    // - https://github.com/chevrotain/chevrotain/issues/869\n    ors = reject(ors, (currOr) => currOr.ignoreAmbiguities === true);\n    const errors = flatMap(ors, (currOr) => {\n        const currOccurrence = currOr.idx;\n        const actualMaxLookahead = currOr.maxLookahead || globalMaxLookahead;\n        const alternatives = getLookaheadPathsForOr(currOccurrence, topLevelRule, actualMaxLookahead, currOr);\n        const altsAmbiguityErrors = checkAlternativesAmbiguities(alternatives, currOr, topLevelRule, errMsgProvider);\n        const altsPrefixAmbiguityErrors = checkPrefixAlternativesAmbiguities(alternatives, currOr, topLevelRule, errMsgProvider);\n        return altsAmbiguityErrors.concat(altsPrefixAmbiguityErrors);\n    });\n    return errors;\n}\nexport class RepetitionCollector extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.allProductions = [];\n    }\n    visitRepetitionWithSeparator(manySep) {\n        this.allProductions.push(manySep);\n    }\n    visitRepetitionMandatory(atLeastOne) {\n        this.allProductions.push(atLeastOne);\n    }\n    visitRepetitionMandatoryWithSeparator(atLeastOneSep) {\n        this.allProductions.push(atLeastOneSep);\n    }\n    visitRepetition(many) {\n        this.allProductions.push(many);\n    }\n}\nexport function validateTooManyAlts(topLevelRule, errMsgProvider) {\n    const orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    const ors = orCollector.alternations;\n    const errors = flatMap(ors, (currOr) => {\n        if (currOr.definition.length > 255) {\n            return [\n                {\n                    message: errMsgProvider.buildTooManyAlternativesError({\n                        topLevelRule: topLevelRule,\n                        alternation: currOr,\n                    }),\n                    type: ParserDefinitionErrorType.TOO_MANY_ALTS,\n                    ruleName: topLevelRule.name,\n                    occurrence: currOr.idx,\n                },\n            ];\n        }\n        else {\n            return [];\n        }\n    });\n    return errors;\n}\nexport function validateSomeNonEmptyLookaheadPath(topLevelRules, maxLookahead, errMsgProvider) {\n    const errors = [];\n    forEach(topLevelRules, (currTopRule) => {\n        const collectorVisitor = new RepetitionCollector();\n        currTopRule.accept(collectorVisitor);\n        const allRuleProductions = collectorVisitor.allProductions;\n        forEach(allRuleProductions, (currProd) => {\n            const prodType = getProdType(currProd);\n            const actualMaxLookahead = currProd.maxLookahead || maxLookahead;\n            const currOccurrence = currProd.idx;\n            const paths = getLookaheadPathsForOptionalProd(currOccurrence, currTopRule, prodType, actualMaxLookahead);\n            const pathsInsideProduction = paths[0];\n            if (isEmpty(flatten(pathsInsideProduction))) {\n                const errMsg = errMsgProvider.buildEmptyRepetitionError({\n                    topLevelRule: currTopRule,\n                    repetition: currProd,\n                });\n                errors.push({\n                    message: errMsg,\n                    type: ParserDefinitionErrorType.NO_NON_EMPTY_LOOKAHEAD,\n                    ruleName: currTopRule.name,\n                });\n            }\n        });\n    });\n    return errors;\n}\nfunction checkAlternativesAmbiguities(alternatives, alternation, rule, errMsgProvider) {\n    const foundAmbiguousPaths = [];\n    const identicalAmbiguities = reduce(alternatives, (result, currAlt, currAltIdx) => {\n        // ignore (skip) ambiguities with this alternative\n        if (alternation.definition[currAltIdx].ignoreAmbiguities === true) {\n            return result;\n        }\n        forEach(currAlt, (currPath) => {\n            const altsCurrPathAppearsIn = [currAltIdx];\n            forEach(alternatives, (currOtherAlt, currOtherAltIdx) => {\n                if (currAltIdx !== currOtherAltIdx &&\n                    containsPath(currOtherAlt, currPath) &&\n                    // ignore (skip) ambiguities with this \"other\" alternative\n                    alternation.definition[currOtherAltIdx].ignoreAmbiguities !== true) {\n                    altsCurrPathAppearsIn.push(currOtherAltIdx);\n                }\n            });\n            if (altsCurrPathAppearsIn.length > 1 &&\n                !containsPath(foundAmbiguousPaths, currPath)) {\n                foundAmbiguousPaths.push(currPath);\n                result.push({\n                    alts: altsCurrPathAppearsIn,\n                    path: currPath,\n                });\n            }\n        });\n        return result;\n    }, []);\n    const currErrors = map(identicalAmbiguities, (currAmbDescriptor) => {\n        const ambgIndices = map(currAmbDescriptor.alts, (currAltIdx) => currAltIdx + 1);\n        const currMessage = errMsgProvider.buildAlternationAmbiguityError({\n            topLevelRule: rule,\n            alternation: alternation,\n            ambiguityIndices: ambgIndices,\n            prefixPath: currAmbDescriptor.path,\n        });\n        return {\n            message: currMessage,\n            type: ParserDefinitionErrorType.AMBIGUOUS_ALTS,\n            ruleName: rule.name,\n            occurrence: alternation.idx,\n            alternatives: currAmbDescriptor.alts,\n        };\n    });\n    return currErrors;\n}\nexport function checkPrefixAlternativesAmbiguities(alternatives, alternation, rule, errMsgProvider) {\n    // flatten\n    const pathsAndIndices = reduce(alternatives, (result, currAlt, idx) => {\n        const currPathsAndIdx = map(currAlt, (currPath) => {\n            return { idx: idx, path: currPath };\n        });\n        return result.concat(currPathsAndIdx);\n    }, []);\n    const errors = compact(flatMap(pathsAndIndices, (currPathAndIdx) => {\n        const alternativeGast = alternation.definition[currPathAndIdx.idx];\n        // ignore (skip) ambiguities with this alternative\n        if (alternativeGast.ignoreAmbiguities === true) {\n            return [];\n        }\n        const targetIdx = currPathAndIdx.idx;\n        const targetPath = currPathAndIdx.path;\n        const prefixAmbiguitiesPathsAndIndices = filter(pathsAndIndices, (searchPathAndIdx) => {\n            // prefix ambiguity can only be created from lower idx (higher priority) path\n            return (\n            // ignore (skip) ambiguities with this \"other\" alternative\n            alternation.definition[searchPathAndIdx.idx].ignoreAmbiguities !==\n                true &&\n                searchPathAndIdx.idx < targetIdx &&\n                // checking for strict prefix because identical lookaheads\n                // will be be detected using a different validation.\n                isStrictPrefixOfPath(searchPathAndIdx.path, targetPath));\n        });\n        const currPathPrefixErrors = map(prefixAmbiguitiesPathsAndIndices, (currAmbPathAndIdx) => {\n            const ambgIndices = [currAmbPathAndIdx.idx + 1, targetIdx + 1];\n            const occurrence = alternation.idx === 0 ? \"\" : alternation.idx;\n            const message = errMsgProvider.buildAlternationPrefixAmbiguityError({\n                topLevelRule: rule,\n                alternation: alternation,\n                ambiguityIndices: ambgIndices,\n                prefixPath: currAmbPathAndIdx.path,\n            });\n            return {\n                message: message,\n                type: ParserDefinitionErrorType.AMBIGUOUS_PREFIX_ALTS,\n                ruleName: rule.name,\n                occurrence: occurrence,\n                alternatives: ambgIndices,\n            };\n        });\n        return currPathPrefixErrors;\n    }));\n    return errors;\n}\nfunction checkTerminalAndNoneTerminalsNameSpace(topLevels, tokenTypes, errMsgProvider) {\n    const errors = [];\n    const tokenNames = map(tokenTypes, (currToken) => currToken.name);\n    forEach(topLevels, (currRule) => {\n        const currRuleName = currRule.name;\n        if (includes(tokenNames, currRuleName)) {\n            const errMsg = errMsgProvider.buildNamespaceConflictError(currRule);\n            errors.push({\n                message: errMsg,\n                type: ParserDefinitionErrorType.CONFLICT_TOKENS_RULES_NAMESPACE,\n                ruleName: currRuleName,\n            });\n        }\n    });\n    return errors;\n}\n//# sourceMappingURL=checks.js.map","import { defaults, forEach } from \"lodash-es\";\nimport { resolveGrammar as orgResolveGrammar } from \"../resolver.js\";\nimport { validateGrammar as orgValidateGrammar } from \"../checks.js\";\nimport { defaultGrammarResolverErrorProvider, defaultGrammarValidatorErrorProvider, } from \"../../errors_public.js\";\nexport function resolveGrammar(options) {\n    const actualOptions = defaults(options, {\n        errMsgProvider: defaultGrammarResolverErrorProvider,\n    });\n    const topRulesTable = {};\n    forEach(options.rules, (rule) => {\n        topRulesTable[rule.name] = rule;\n    });\n    return orgResolveGrammar(topRulesTable, actualOptions.errMsgProvider);\n}\nexport function validateGrammar(options) {\n    options = defaults(options, {\n        errMsgProvider: defaultGrammarValidatorErrorProvider,\n    });\n    return orgValidateGrammar(options.rules, options.tokenTypes, options.errMsgProvider, options.grammarName);\n}\n//# sourceMappingURL=gast_resolver_public.js.map","import { includes } from \"lodash-es\";\nconst MISMATCHED_TOKEN_EXCEPTION = \"MismatchedTokenException\";\nconst NO_VIABLE_ALT_EXCEPTION = \"NoViableAltException\";\nconst EARLY_EXIT_EXCEPTION = \"EarlyExitException\";\nconst NOT_ALL_INPUT_PARSED_EXCEPTION = \"NotAllInputParsedException\";\nconst RECOGNITION_EXCEPTION_NAMES = [\n    MISMATCHED_TOKEN_EXCEPTION,\n    NO_VIABLE_ALT_EXCEPTION,\n    EARLY_EXIT_EXCEPTION,\n    NOT_ALL_INPUT_PARSED_EXCEPTION,\n];\nObject.freeze(RECOGNITION_EXCEPTION_NAMES);\n// hacks to bypass no support for custom Errors in javascript/typescript\nexport function isRecognitionException(error) {\n    // can't do instanceof on hacked custom js exceptions\n    return includes(RECOGNITION_EXCEPTION_NAMES, error.name);\n}\nclass RecognitionException extends Error {\n    constructor(message, token) {\n        super(message);\n        this.token = token;\n        this.resyncedTokens = [];\n        // fix prototype chain when typescript target is ES5\n        Object.setPrototypeOf(this, new.target.prototype);\n        /* istanbul ignore next - V8 workaround to remove constructor from stacktrace when typescript target is ES5 */\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, this.constructor);\n        }\n    }\n}\nexport class MismatchedTokenException extends RecognitionException {\n    constructor(message, token, previousToken) {\n        super(message, token);\n        this.previousToken = previousToken;\n        this.name = MISMATCHED_TOKEN_EXCEPTION;\n    }\n}\nexport class NoViableAltException extends RecognitionException {\n    constructor(message, token, previousToken) {\n        super(message, token);\n        this.previousToken = previousToken;\n        this.name = NO_VIABLE_ALT_EXCEPTION;\n    }\n}\nexport class NotAllInputParsedException extends RecognitionException {\n    constructor(message, token) {\n        super(message, token);\n        this.name = NOT_ALL_INPUT_PARSED_EXCEPTION;\n    }\n}\nexport class EarlyExitException extends RecognitionException {\n    constructor(message, token, previousToken) {\n        super(message, token);\n        this.previousToken = previousToken;\n        this.name = EARLY_EXIT_EXCEPTION;\n    }\n}\n//# sourceMappingURL=exceptions_public.js.map","import { createTokenInstance, EOF, tokenMatcher, } from \"../../../scan/tokens_public.js\";\nimport { clone, dropRight, find, flatten, has, includes, isEmpty, map, } from \"lodash-es\";\nimport { MismatchedTokenException } from \"../../exceptions_public.js\";\nimport { IN } from \"../../constants.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\nexport const EOF_FOLLOW_KEY = {};\nexport const IN_RULE_RECOVERY_EXCEPTION = \"InRuleRecoveryException\";\nexport class InRuleRecoveryException extends Error {\n    constructor(message) {\n        super(message);\n        this.name = IN_RULE_RECOVERY_EXCEPTION;\n    }\n}\n/**\n * This trait is responsible for the error recovery and fault tolerant logic\n */\nexport class Recoverable {\n    initRecoverable(config) {\n        this.firstAfterRepMap = {};\n        this.resyncFollows = {};\n        this.recoveryEnabled = has(config, \"recoveryEnabled\")\n            ? config.recoveryEnabled // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.recoveryEnabled;\n        // performance optimization, NOOP will be inlined which\n        // effectively means that this optional feature does not exist\n        // when not used.\n        if (this.recoveryEnabled) {\n            this.attemptInRepetitionRecovery = attemptInRepetitionRecovery;\n        }\n    }\n    getTokenToInsert(tokType) {\n        const tokToInsert = createTokenInstance(tokType, \"\", NaN, NaN, NaN, NaN, NaN, NaN);\n        tokToInsert.isInsertedInRecovery = true;\n        return tokToInsert;\n    }\n    canTokenTypeBeInsertedInRecovery(tokType) {\n        return true;\n    }\n    canTokenTypeBeDeletedInRecovery(tokType) {\n        return true;\n    }\n    tryInRepetitionRecovery(grammarRule, grammarRuleArgs, lookAheadFunc, expectedTokType) {\n        // TODO: can the resyncTokenType be cached?\n        const reSyncTokType = this.findReSyncTokenType();\n        const savedLexerState = this.exportLexerState();\n        const resyncedTokens = [];\n        let passedResyncPoint = false;\n        const nextTokenWithoutResync = this.LA(1);\n        let currToken = this.LA(1);\n        const generateErrorMessage = () => {\n            const previousToken = this.LA(0);\n            // we are preemptively re-syncing before an error has been detected, therefor we must reproduce\n            // the error that would have been thrown\n            const msg = this.errorMessageProvider.buildMismatchTokenMessage({\n                expected: expectedTokType,\n                actual: nextTokenWithoutResync,\n                previous: previousToken,\n                ruleName: this.getCurrRuleFullName(),\n            });\n            const error = new MismatchedTokenException(msg, nextTokenWithoutResync, this.LA(0));\n            // the first token here will be the original cause of the error, this is not part of the resyncedTokens property.\n            error.resyncedTokens = dropRight(resyncedTokens);\n            this.SAVE_ERROR(error);\n        };\n        while (!passedResyncPoint) {\n            // re-synced to a point where we can safely exit the repetition/\n            if (this.tokenMatcher(currToken, expectedTokType)) {\n                generateErrorMessage();\n                return; // must return here to avoid reverting the inputIdx\n            }\n            else if (lookAheadFunc.call(this)) {\n                // we skipped enough tokens so we can resync right back into another iteration of the repetition grammar rule\n                generateErrorMessage();\n                // recursive invocation in other to support multiple re-syncs in the same top level repetition grammar rule\n                grammarRule.apply(this, grammarRuleArgs);\n                return; // must return here to avoid reverting the inputIdx\n            }\n            else if (this.tokenMatcher(currToken, reSyncTokType)) {\n                passedResyncPoint = true;\n            }\n            else {\n                currToken = this.SKIP_TOKEN();\n                this.addToResyncTokens(currToken, resyncedTokens);\n            }\n        }\n        // we were unable to find a CLOSER point to resync inside the Repetition, reset the state.\n        // The parsing exception we were trying to prevent will happen in the NEXT parsing step. it may be handled by\n        // \"between rules\" resync recovery later in the flow.\n        this.importLexerState(savedLexerState);\n    }\n    shouldInRepetitionRecoveryBeTried(expectTokAfterLastMatch, nextTokIdx, notStuck) {\n        // Edge case of arriving from a MANY repetition which is stuck\n        // Attempting recovery in this case could cause an infinite loop\n        if (notStuck === false) {\n            return false;\n        }\n        // no need to recover, next token is what we expect...\n        if (this.tokenMatcher(this.LA(1), expectTokAfterLastMatch)) {\n            return false;\n        }\n        // error recovery is disabled during backtracking as it can make the parser ignore a valid grammar path\n        // and prefer some backtracking path that includes recovered errors.\n        if (this.isBackTracking()) {\n            return false;\n        }\n        // if we can perform inRule recovery (single token insertion or deletion) we always prefer that recovery algorithm\n        // because if it works, it makes the least amount of changes to the input stream (greedy algorithm)\n        //noinspection RedundantIfStatementJS\n        if (this.canPerformInRuleRecovery(expectTokAfterLastMatch, this.getFollowsForInRuleRecovery(expectTokAfterLastMatch, nextTokIdx))) {\n            return false;\n        }\n        return true;\n    }\n    // Error Recovery functionality\n    getFollowsForInRuleRecovery(tokType, tokIdxInRule) {\n        const grammarPath = this.getCurrentGrammarPath(tokType, tokIdxInRule);\n        const follows = this.getNextPossibleTokenTypes(grammarPath);\n        return follows;\n    }\n    tryInRuleRecovery(expectedTokType, follows) {\n        if (this.canRecoverWithSingleTokenInsertion(expectedTokType, follows)) {\n            const tokToInsert = this.getTokenToInsert(expectedTokType);\n            return tokToInsert;\n        }\n        if (this.canRecoverWithSingleTokenDeletion(expectedTokType)) {\n            const nextTok = this.SKIP_TOKEN();\n            this.consumeToken();\n            return nextTok;\n        }\n        throw new InRuleRecoveryException(\"sad sad panda\");\n    }\n    canPerformInRuleRecovery(expectedToken, follows) {\n        return (this.canRecoverWithSingleTokenInsertion(expectedToken, follows) ||\n            this.canRecoverWithSingleTokenDeletion(expectedToken));\n    }\n    canRecoverWithSingleTokenInsertion(expectedTokType, follows) {\n        if (!this.canTokenTypeBeInsertedInRecovery(expectedTokType)) {\n            return false;\n        }\n        // must know the possible following tokens to perform single token insertion\n        if (isEmpty(follows)) {\n            return false;\n        }\n        const mismatchedTok = this.LA(1);\n        const isMisMatchedTokInFollows = find(follows, (possibleFollowsTokType) => {\n            return this.tokenMatcher(mismatchedTok, possibleFollowsTokType);\n        }) !== undefined;\n        return isMisMatchedTokInFollows;\n    }\n    canRecoverWithSingleTokenDeletion(expectedTokType) {\n        if (!this.canTokenTypeBeDeletedInRecovery(expectedTokType)) {\n            return false;\n        }\n        const isNextTokenWhatIsExpected = this.tokenMatcher(this.LA(2), expectedTokType);\n        return isNextTokenWhatIsExpected;\n    }\n    isInCurrentRuleReSyncSet(tokenTypeIdx) {\n        const followKey = this.getCurrFollowKey();\n        const currentRuleReSyncSet = this.getFollowSetFromFollowKey(followKey);\n        return includes(currentRuleReSyncSet, tokenTypeIdx);\n    }\n    findReSyncTokenType() {\n        const allPossibleReSyncTokTypes = this.flattenFollowSet();\n        // this loop will always terminate as EOF is always in the follow stack and also always (virtually) in the input\n        let nextToken = this.LA(1);\n        let k = 2;\n        while (true) {\n            const foundMatch = find(allPossibleReSyncTokTypes, (resyncTokType) => {\n                const canMatch = tokenMatcher(nextToken, resyncTokType);\n                return canMatch;\n            });\n            if (foundMatch !== undefined) {\n                return foundMatch;\n            }\n            nextToken = this.LA(k);\n            k++;\n        }\n    }\n    getCurrFollowKey() {\n        // the length is at least one as we always add the ruleName to the stack before invoking the rule.\n        if (this.RULE_STACK.length === 1) {\n            return EOF_FOLLOW_KEY;\n        }\n        const currRuleShortName = this.getLastExplicitRuleShortName();\n        const currRuleIdx = this.getLastExplicitRuleOccurrenceIndex();\n        const prevRuleShortName = this.getPreviousExplicitRuleShortName();\n        return {\n            ruleName: this.shortRuleNameToFullName(currRuleShortName),\n            idxInCallingRule: currRuleIdx,\n            inRule: this.shortRuleNameToFullName(prevRuleShortName),\n        };\n    }\n    buildFullFollowKeyStack() {\n        const explicitRuleStack = this.RULE_STACK;\n        const explicitOccurrenceStack = this.RULE_OCCURRENCE_STACK;\n        return map(explicitRuleStack, (ruleName, idx) => {\n            if (idx === 0) {\n                return EOF_FOLLOW_KEY;\n            }\n            return {\n                ruleName: this.shortRuleNameToFullName(ruleName),\n                idxInCallingRule: explicitOccurrenceStack[idx],\n                inRule: this.shortRuleNameToFullName(explicitRuleStack[idx - 1]),\n            };\n        });\n    }\n    flattenFollowSet() {\n        const followStack = map(this.buildFullFollowKeyStack(), (currKey) => {\n            return this.getFollowSetFromFollowKey(currKey);\n        });\n        return flatten(followStack);\n    }\n    getFollowSetFromFollowKey(followKey) {\n        if (followKey === EOF_FOLLOW_KEY) {\n            return [EOF];\n        }\n        const followName = followKey.ruleName + followKey.idxInCallingRule + IN + followKey.inRule;\n        return this.resyncFollows[followName];\n    }\n    // It does not make any sense to include a virtual EOF token in the list of resynced tokens\n    // as EOF does not really exist and thus does not contain any useful information (line/column numbers)\n    addToResyncTokens(token, resyncTokens) {\n        if (!this.tokenMatcher(token, EOF)) {\n            resyncTokens.push(token);\n        }\n        return resyncTokens;\n    }\n    reSyncTo(tokType) {\n        const resyncedTokens = [];\n        let nextTok = this.LA(1);\n        while (this.tokenMatcher(nextTok, tokType) === false) {\n            nextTok = this.SKIP_TOKEN();\n            this.addToResyncTokens(nextTok, resyncedTokens);\n        }\n        // the last token is not part of the error.\n        return dropRight(resyncedTokens);\n    }\n    attemptInRepetitionRecovery(prodFunc, args, lookaheadFunc, dslMethodIdx, prodOccurrence, nextToksWalker, notStuck) {\n        // by default this is a NO-OP\n        // The actual implementation is with the function(not method) below\n    }\n    getCurrentGrammarPath(tokType, tokIdxInRule) {\n        const pathRuleStack = this.getHumanReadableRuleStack();\n        const pathOccurrenceStack = clone(this.RULE_OCCURRENCE_STACK);\n        const grammarPath = {\n            ruleStack: pathRuleStack,\n            occurrenceStack: pathOccurrenceStack,\n            lastTok: tokType,\n            lastTokOccurrence: tokIdxInRule,\n        };\n        return grammarPath;\n    }\n    getHumanReadableRuleStack() {\n        return map(this.RULE_STACK, (currShortName) => this.shortRuleNameToFullName(currShortName));\n    }\n}\nexport function attemptInRepetitionRecovery(prodFunc, args, lookaheadFunc, dslMethodIdx, prodOccurrence, nextToksWalker, notStuck) {\n    const key = this.getKeyForAutomaticLookahead(dslMethodIdx, prodOccurrence);\n    let firstAfterRepInfo = this.firstAfterRepMap[key];\n    if (firstAfterRepInfo === undefined) {\n        const currRuleName = this.getCurrRuleFullName();\n        const ruleGrammar = this.getGAstProductions()[currRuleName];\n        const walker = new nextToksWalker(ruleGrammar, prodOccurrence);\n        firstAfterRepInfo = walker.startWalking();\n        this.firstAfterRepMap[key] = firstAfterRepInfo;\n    }\n    let expectTokAfterLastMatch = firstAfterRepInfo.token;\n    let nextTokIdx = firstAfterRepInfo.occurrence;\n    const isEndOfRule = firstAfterRepInfo.isEndOfRule;\n    // special edge case of a TOP most repetition after which the input should END.\n    // this will force an attempt for inRule recovery in that scenario.\n    if (this.RULE_STACK.length === 1 &&\n        isEndOfRule &&\n        expectTokAfterLastMatch === undefined) {\n        expectTokAfterLastMatch = EOF;\n        nextTokIdx = 1;\n    }\n    // We don't have anything to re-sync to...\n    // this condition was extracted from `shouldInRepetitionRecoveryBeTried` to act as a type-guard\n    if (expectTokAfterLastMatch === undefined || nextTokIdx === undefined) {\n        return;\n    }\n    if (this.shouldInRepetitionRecoveryBeTried(expectTokAfterLastMatch, nextTokIdx, notStuck)) {\n        // TODO: performance optimization: instead of passing the original args here, we modify\n        // the args param (or create a new one) and make sure the lookahead func is explicitly provided\n        // to avoid searching the cache for it once more.\n        this.tryInRepetitionRecovery(prodFunc, args, lookaheadFunc, expectTokAfterLastMatch);\n    }\n}\n//# sourceMappingURL=recoverable.js.map","// Lookahead keys are 32Bit integers in the form\n// TTTTTTTT-ZZZZZZZZZZZZ-YYYY-XXXXXXXX\n// XXXX -> Occurrence Index bitmap.\n// YYYY -> DSL Method Type bitmap.\n// ZZZZZZZZZZZZZZZ -> Rule short Index bitmap.\n// TTTTTTTTT -> alternation alternative index bitmap\nexport const BITS_FOR_METHOD_TYPE = 4;\nexport const BITS_FOR_OCCURRENCE_IDX = 8;\nexport const BITS_FOR_RULE_IDX = 12;\n// TODO: validation, this means that there may at most 2^8 --> 256 alternatives for an alternation.\nexport const BITS_FOR_ALT_IDX = 8;\n// short string used as part of mapping keys.\n// being short improves the performance when composing KEYS for maps out of these\n// The 5 - 8 bits (16 possible values, are reserved for the DSL method indices)\nexport const OR_IDX = 1 << BITS_FOR_OCCURRENCE_IDX;\nexport const OPTION_IDX = 2 << BITS_FOR_OCCURRENCE_IDX;\nexport const MANY_IDX = 3 << BITS_FOR_OCCURRENCE_IDX;\nexport const AT_LEAST_ONE_IDX = 4 << BITS_FOR_OCCURRENCE_IDX;\nexport const MANY_SEP_IDX = 5 << BITS_FOR_OCCURRENCE_IDX;\nexport const AT_LEAST_ONE_SEP_IDX = 6 << BITS_FOR_OCCURRENCE_IDX;\n// this actually returns a number, but it is always used as a string (object prop key)\nexport function getKeyForAutomaticLookahead(ruleIdx, dslMethodIdx, occurrence) {\n    return occurrence | dslMethodIdx | ruleIdx;\n}\nconst BITS_START_FOR_ALT_IDX = 32 - BITS_FOR_ALT_IDX;\n//# sourceMappingURL=keys.js.map","import { flatMap, isEmpty } from \"lodash-es\";\nimport { defaultGrammarValidatorErrorProvider } from \"../errors_public.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser/parser.js\";\nimport { validateAmbiguousAlternationAlternatives, validateEmptyOrAlternative, validateNoLeftRecursion, validateSomeNonEmptyLookaheadPath, } from \"./checks.js\";\nimport { buildAlternativesLookAheadFunc, buildLookaheadFuncForOptionalProd, buildLookaheadFuncForOr, buildSingleAlternativeLookaheadFunction, getProdType, } from \"./lookahead.js\";\nexport class LLkLookaheadStrategy {\n    constructor(options) {\n        var _a;\n        this.maxLookahead =\n            (_a = options === null || options === void 0 ? void 0 : options.maxLookahead) !== null && _a !== void 0 ? _a : DEFAULT_PARSER_CONFIG.maxLookahead;\n    }\n    validate(options) {\n        const leftRecursionErrors = this.validateNoLeftRecursion(options.rules);\n        if (isEmpty(leftRecursionErrors)) {\n            const emptyAltErrors = this.validateEmptyOrAlternatives(options.rules);\n            const ambiguousAltsErrors = this.validateAmbiguousAlternationAlternatives(options.rules, this.maxLookahead);\n            const emptyRepetitionErrors = this.validateSomeNonEmptyLookaheadPath(options.rules, this.maxLookahead);\n            const allErrors = [\n                ...leftRecursionErrors,\n                ...emptyAltErrors,\n                ...ambiguousAltsErrors,\n                ...emptyRepetitionErrors,\n            ];\n            return allErrors;\n        }\n        return leftRecursionErrors;\n    }\n    validateNoLeftRecursion(rules) {\n        return flatMap(rules, (currTopRule) => validateNoLeftRecursion(currTopRule, currTopRule, defaultGrammarValidatorErrorProvider));\n    }\n    validateEmptyOrAlternatives(rules) {\n        return flatMap(rules, (currTopRule) => validateEmptyOrAlternative(currTopRule, defaultGrammarValidatorErrorProvider));\n    }\n    validateAmbiguousAlternationAlternatives(rules, maxLookahead) {\n        return flatMap(rules, (currTopRule) => validateAmbiguousAlternationAlternatives(currTopRule, maxLookahead, defaultGrammarValidatorErrorProvider));\n    }\n    validateSomeNonEmptyLookaheadPath(rules, maxLookahead) {\n        return validateSomeNonEmptyLookaheadPath(rules, maxLookahead, defaultGrammarValidatorErrorProvider);\n    }\n    buildLookaheadForAlternation(options) {\n        return buildLookaheadFuncForOr(options.prodOccurrence, options.rule, options.maxLookahead, options.hasPredicates, options.dynamicTokensEnabled, buildAlternativesLookAheadFunc);\n    }\n    buildLookaheadForOptional(options) {\n        return buildLookaheadFuncForOptionalProd(options.prodOccurrence, options.rule, options.maxLookahead, options.dynamicTokensEnabled, getProdType(options.prodType), buildSingleAlternativeLookaheadFunction);\n    }\n}\n//# sourceMappingURL=llk_lookahead.js.map","import { forEach, has } from \"lodash-es\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\nimport { AT_LEAST_ONE_IDX, AT_LEAST_ONE_SEP_IDX, getKeyForAutomaticLookahead, MANY_IDX, MANY_SEP_IDX, OPTION_IDX, OR_IDX, } from \"../../grammar/keys.js\";\nimport { GAstVisitor, getProductionDslName, } from \"@chevrotain/gast\";\nimport { LLkLookaheadStrategy } from \"../../grammar/llk_lookahead.js\";\n/**\n * Trait responsible for the lookahead related utilities and optimizations.\n */\nexport class LooksAhead {\n    initLooksAhead(config) {\n        this.dynamicTokensEnabled = has(config, \"dynamicTokensEnabled\")\n            ? config.dynamicTokensEnabled // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.dynamicTokensEnabled;\n        this.maxLookahead = has(config, \"maxLookahead\")\n            ? config.maxLookahead // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.maxLookahead;\n        this.lookaheadStrategy = has(config, \"lookaheadStrategy\")\n            ? config.lookaheadStrategy // assumes end user provides the correct config value/type\n            : new LLkLookaheadStrategy({ maxLookahead: this.maxLookahead });\n        this.lookAheadFuncsCache = new Map();\n    }\n    preComputeLookaheadFunctions(rules) {\n        forEach(rules, (currRule) => {\n            this.TRACE_INIT(`${currRule.name} Rule Lookahead`, () => {\n                const { alternation, repetition, option, repetitionMandatory, repetitionMandatoryWithSeparator, repetitionWithSeparator, } = collectMethods(currRule);\n                forEach(alternation, (currProd) => {\n                    const prodIdx = currProd.idx === 0 ? \"\" : currProd.idx;\n                    this.TRACE_INIT(`${getProductionDslName(currProd)}${prodIdx}`, () => {\n                        const laFunc = this.lookaheadStrategy.buildLookaheadForAlternation({\n                            prodOccurrence: currProd.idx,\n                            rule: currRule,\n                            maxLookahead: currProd.maxLookahead || this.maxLookahead,\n                            hasPredicates: currProd.hasPredicates,\n                            dynamicTokensEnabled: this.dynamicTokensEnabled,\n                        });\n                        const key = getKeyForAutomaticLookahead(this.fullRuleNameToShort[currRule.name], OR_IDX, currProd.idx);\n                        this.setLaFuncCache(key, laFunc);\n                    });\n                });\n                forEach(repetition, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, MANY_IDX, \"Repetition\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(option, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, OPTION_IDX, \"Option\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionMandatory, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, AT_LEAST_ONE_IDX, \"RepetitionMandatory\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionMandatoryWithSeparator, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, AT_LEAST_ONE_SEP_IDX, \"RepetitionMandatoryWithSeparator\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionWithSeparator, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, MANY_SEP_IDX, \"RepetitionWithSeparator\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n            });\n        });\n    }\n    computeLookaheadFunc(rule, prodOccurrence, prodKey, prodType, prodMaxLookahead, dslMethodName) {\n        this.TRACE_INIT(`${dslMethodName}${prodOccurrence === 0 ? \"\" : prodOccurrence}`, () => {\n            const laFunc = this.lookaheadStrategy.buildLookaheadForOptional({\n                prodOccurrence,\n                rule,\n                maxLookahead: prodMaxLookahead || this.maxLookahead,\n                dynamicTokensEnabled: this.dynamicTokensEnabled,\n                prodType,\n            });\n            const key = getKeyForAutomaticLookahead(this.fullRuleNameToShort[rule.name], prodKey, prodOccurrence);\n            this.setLaFuncCache(key, laFunc);\n        });\n    }\n    // this actually returns a number, but it is always used as a string (object prop key)\n    getKeyForAutomaticLookahead(dslMethodIdx, occurrence) {\n        const currRuleShortName = this.getLastExplicitRuleShortName();\n        return getKeyForAutomaticLookahead(currRuleShortName, dslMethodIdx, occurrence);\n    }\n    getLaFuncFromCache(key) {\n        return this.lookAheadFuncsCache.get(key);\n    }\n    /* istanbul ignore next */\n    setLaFuncCache(key, value) {\n        this.lookAheadFuncsCache.set(key, value);\n    }\n}\nclass DslMethodsCollectorVisitor extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.dslMethods = {\n            option: [],\n            alternation: [],\n            repetition: [],\n            repetitionWithSeparator: [],\n            repetitionMandatory: [],\n            repetitionMandatoryWithSeparator: [],\n        };\n    }\n    reset() {\n        this.dslMethods = {\n            option: [],\n            alternation: [],\n            repetition: [],\n            repetitionWithSeparator: [],\n            repetitionMandatory: [],\n            repetitionMandatoryWithSeparator: [],\n        };\n    }\n    visitOption(option) {\n        this.dslMethods.option.push(option);\n    }\n    visitRepetitionWithSeparator(manySep) {\n        this.dslMethods.repetitionWithSeparator.push(manySep);\n    }\n    visitRepetitionMandatory(atLeastOne) {\n        this.dslMethods.repetitionMandatory.push(atLeastOne);\n    }\n    visitRepetitionMandatoryWithSeparator(atLeastOneSep) {\n        this.dslMethods.repetitionMandatoryWithSeparator.push(atLeastOneSep);\n    }\n    visitRepetition(many) {\n        this.dslMethods.repetition.push(many);\n    }\n    visitAlternation(or) {\n        this.dslMethods.alternation.push(or);\n    }\n}\nconst collectorVisitor = new DslMethodsCollectorVisitor();\nexport function collectMethods(rule) {\n    collectorVisitor.reset();\n    rule.accept(collectorVisitor);\n    const dslMethods = collectorVisitor.dslMethods;\n    // avoid uncleaned references\n    collectorVisitor.reset();\n    return dslMethods;\n}\n//# sourceMappingURL=looksahead.js.map","/**\n * This nodeLocation tracking is not efficient and should only be used\n * when error recovery is enabled or the Token Vector contains virtual Tokens\n * (e.g, Python Indent/Outdent)\n * As it executes the calculation for every single terminal/nonTerminal\n * and does not rely on the fact the token vector is **sorted**\n */\nexport function setNodeLocationOnlyOffset(currNodeLocation, newLocationInfo) {\n    // First (valid) update for this cst node\n    if (isNaN(currNodeLocation.startOffset) === true) {\n        // assumption1: Token location information is either NaN or a valid number\n        // assumption2: Token location information is fully valid if it exist\n        // (both start/end offsets exist and are numbers).\n        currNodeLocation.startOffset = newLocationInfo.startOffset;\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n    }\n    // Once the startOffset has been updated with a valid number it should never receive\n    // any farther updates as the Token vector is sorted.\n    // We still have to check this this condition for every new possible location info\n    // because with error recovery enabled we may encounter invalid tokens (NaN location props)\n    else if (currNodeLocation.endOffset < newLocationInfo.endOffset === true) {\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n    }\n}\n/**\n * This nodeLocation tracking is not efficient and should only be used\n * when error recovery is enabled or the Token Vector contains virtual Tokens\n * (e.g, Python Indent/Outdent)\n * As it executes the calculation for every single terminal/nonTerminal\n * and does not rely on the fact the token vector is **sorted**\n */\nexport function setNodeLocationFull(currNodeLocation, newLocationInfo) {\n    // First (valid) update for this cst node\n    if (isNaN(currNodeLocation.startOffset) === true) {\n        // assumption1: Token location information is either NaN or a valid number\n        // assumption2: Token location information is fully valid if it exist\n        // (all start/end props exist and are numbers).\n        currNodeLocation.startOffset = newLocationInfo.startOffset;\n        currNodeLocation.startColumn = newLocationInfo.startColumn;\n        currNodeLocation.startLine = newLocationInfo.startLine;\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n        currNodeLocation.endColumn = newLocationInfo.endColumn;\n        currNodeLocation.endLine = newLocationInfo.endLine;\n    }\n    // Once the start props has been updated with a valid number it should never receive\n    // any farther updates as the Token vector is sorted.\n    // We still have to check this this condition for every new possible location info\n    // because with error recovery enabled we may encounter invalid tokens (NaN location props)\n    else if (currNodeLocation.endOffset < newLocationInfo.endOffset === true) {\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n        currNodeLocation.endColumn = newLocationInfo.endColumn;\n        currNodeLocation.endLine = newLocationInfo.endLine;\n    }\n}\nexport function addTerminalToCst(node, token, tokenTypeName) {\n    if (node.children[tokenTypeName] === undefined) {\n        node.children[tokenTypeName] = [token];\n    }\n    else {\n        node.children[tokenTypeName].push(token);\n    }\n}\nexport function addNoneTerminalToCst(node, ruleName, ruleResult) {\n    if (node.children[ruleName] === undefined) {\n        node.children[ruleName] = [ruleResult];\n    }\n    else {\n        node.children[ruleName].push(ruleResult);\n    }\n}\n//# sourceMappingURL=cst.js.map","const NAME = \"name\";\nexport function defineNameProp(obj, nameValue) {\n    Object.defineProperty(obj, NAME, {\n        enumerable: false,\n        configurable: true,\n        writable: false,\n        value: nameValue,\n    });\n}\n//# sourceMappingURL=lang_extensions.js.map","import { compact, filter, forEach, isArray, isEmpty, isFunction, isUndefined, keys, map, } from \"lodash-es\";\nimport { defineNameProp } from \"../../lang/lang_extensions.js\";\nexport function defaultVisit(ctx, param) {\n    const childrenNames = keys(ctx);\n    const childrenNamesLength = childrenNames.length;\n    for (let i = 0; i < childrenNamesLength; i++) {\n        const currChildName = childrenNames[i];\n        const currChildArray = ctx[currChildName];\n        const currChildArrayLength = currChildArray.length;\n        for (let j = 0; j < currChildArrayLength; j++) {\n            const currChild = currChildArray[j];\n            // distinction between Tokens Children and CstNode children\n            if (currChild.tokenTypeIdx === undefined) {\n                this[currChild.name](currChild.children, param);\n            }\n        }\n    }\n    // defaultVisit does not support generic out param\n}\nexport function createBaseSemanticVisitorConstructor(grammarName, ruleNames) {\n    const derivedConstructor = function () { };\n    // can be overwritten according to:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/\n    // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname\n    defineNameProp(derivedConstructor, grammarName + \"BaseSemantics\");\n    const semanticProto = {\n        visit: function (cstNode, param) {\n            // enables writing more concise visitor methods when CstNode has only a single child\n            if (isArray(cstNode)) {\n                // A CST Node's children dictionary can never have empty arrays as values\n                // If a key is defined there will be at least one element in the corresponding value array.\n                cstNode = cstNode[0];\n            }\n            // enables passing optional CstNodes concisely.\n            if (isUndefined(cstNode)) {\n                return undefined;\n            }\n            return this[cstNode.name](cstNode.children, param);\n        },\n        validateVisitor: function () {\n            const semanticDefinitionErrors = validateVisitor(this, ruleNames);\n            if (!isEmpty(semanticDefinitionErrors)) {\n                const errorMessages = map(semanticDefinitionErrors, (currDefError) => currDefError.msg);\n                throw Error(`Errors Detected in CST Visitor <${this.constructor.name}>:\\n\\t` +\n                    `${errorMessages.join(\"\\n\\n\").replace(/\\n/g, \"\\n\\t\")}`);\n            }\n        },\n    };\n    derivedConstructor.prototype = semanticProto;\n    derivedConstructor.prototype.constructor = derivedConstructor;\n    derivedConstructor._RULE_NAMES = ruleNames;\n    return derivedConstructor;\n}\nexport function createBaseVisitorConstructorWithDefaults(grammarName, ruleNames, baseConstructor) {\n    const derivedConstructor = function () { };\n    // can be overwritten according to:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/\n    // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname\n    defineNameProp(derivedConstructor, grammarName + \"BaseSemanticsWithDefaults\");\n    const withDefaultsProto = Object.create(baseConstructor.prototype);\n    forEach(ruleNames, (ruleName) => {\n        withDefaultsProto[ruleName] = defaultVisit;\n    });\n    derivedConstructor.prototype = withDefaultsProto;\n    derivedConstructor.prototype.constructor = derivedConstructor;\n    return derivedConstructor;\n}\nexport var CstVisitorDefinitionError;\n(function (CstVisitorDefinitionError) {\n    CstVisitorDefinitionError[CstVisitorDefinitionError[\"REDUNDANT_METHOD\"] = 0] = \"REDUNDANT_METHOD\";\n    CstVisitorDefinitionError[CstVisitorDefinitionError[\"MISSING_METHOD\"] = 1] = \"MISSING_METHOD\";\n})(CstVisitorDefinitionError || (CstVisitorDefinitionError = {}));\nexport function validateVisitor(visitorInstance, ruleNames) {\n    const missingErrors = validateMissingCstMethods(visitorInstance, ruleNames);\n    return missingErrors;\n}\nexport function validateMissingCstMethods(visitorInstance, ruleNames) {\n    const missingRuleNames = filter(ruleNames, (currRuleName) => {\n        return isFunction(visitorInstance[currRuleName]) === false;\n    });\n    const errors = map(missingRuleNames, (currRuleName) => {\n        return {\n            msg: `Missing visitor method: <${currRuleName}> on ${(visitorInstance.constructor.name)} CST Visitor.`,\n            type: CstVisitorDefinitionError.MISSING_METHOD,\n            methodName: currRuleName,\n        };\n    });\n    return compact(errors);\n}\n//# sourceMappingURL=cst_visitor.js.map","import { forEach, has, isArray, isFunction, last as peek, some, } from \"lodash-es\";\nimport { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"@chevrotain/gast\";\nimport { Lexer } from \"../../../scan/lexer_public.js\";\nimport { augmentTokenTypes, hasShortKeyProperty, } from \"../../../scan/tokens.js\";\nimport { createToken, createTokenInstance, } from \"../../../scan/tokens_public.js\";\nimport { END_OF_FILE } from \"../parser.js\";\nimport { BITS_FOR_OCCURRENCE_IDX } from \"../../grammar/keys.js\";\nconst RECORDING_NULL_OBJECT = {\n    description: \"This Object indicates the Parser is during Recording Phase\",\n};\nObject.freeze(RECORDING_NULL_OBJECT);\nconst HANDLE_SEPARATOR = true;\nconst MAX_METHOD_IDX = Math.pow(2, BITS_FOR_OCCURRENCE_IDX) - 1;\nconst RFT = createToken({ name: \"RECORDING_PHASE_TOKEN\", pattern: Lexer.NA });\naugmentTokenTypes([RFT]);\nconst RECORDING_PHASE_TOKEN = createTokenInstance(RFT, \"This IToken indicates the Parser is in Recording Phase\\n\\t\" +\n    \"\" +\n    \"See: https://chevrotain.io/docs/guide/internals.html#grammar-recording for details\", \n// Using \"-1\" instead of NaN (as in EOF) because an actual number is less likely to\n// cause errors if the output of LA or CONSUME would be (incorrectly) used during the recording phase.\n-1, -1, -1, -1, -1, -1);\nObject.freeze(RECORDING_PHASE_TOKEN);\nconst RECORDING_PHASE_CSTNODE = {\n    name: \"This CSTNode indicates the Parser is in Recording Phase\\n\\t\" +\n        \"See: https://chevrotain.io/docs/guide/internals.html#grammar-recording for details\",\n    children: {},\n};\n/**\n * This trait handles the creation of the GAST structure for Chevrotain Grammars\n */\nexport class GastRecorder {\n    initGastRecorder(config) {\n        this.recordingProdStack = [];\n        this.RECORDING_PHASE = false;\n    }\n    enableRecording() {\n        this.RECORDING_PHASE = true;\n        this.TRACE_INIT(\"Enable Recording\", () => {\n            /**\n             * Warning Dark Voodoo Magic upcoming!\n             * We are \"replacing\" the public parsing DSL methods API\n             * With **new** alternative implementations on the Parser **instance**\n             *\n             * So far this is the only way I've found to avoid performance regressions during parsing time.\n             * - Approx 30% performance regression was measured on Chrome 75 Canary when attempting to replace the \"internal\"\n             *   implementations directly instead.\n             */\n            for (let i = 0; i < 10; i++) {\n                const idx = i > 0 ? i : \"\";\n                this[`CONSUME${idx}`] = function (arg1, arg2) {\n                    return this.consumeInternalRecord(arg1, i, arg2);\n                };\n                this[`SUBRULE${idx}`] = function (arg1, arg2) {\n                    return this.subruleInternalRecord(arg1, i, arg2);\n                };\n                this[`OPTION${idx}`] = function (arg1) {\n                    return this.optionInternalRecord(arg1, i);\n                };\n                this[`OR${idx}`] = function (arg1) {\n                    return this.orInternalRecord(arg1, i);\n                };\n                this[`MANY${idx}`] = function (arg1) {\n                    this.manyInternalRecord(i, arg1);\n                };\n                this[`MANY_SEP${idx}`] = function (arg1) {\n                    this.manySepFirstInternalRecord(i, arg1);\n                };\n                this[`AT_LEAST_ONE${idx}`] = function (arg1) {\n                    this.atLeastOneInternalRecord(i, arg1);\n                };\n                this[`AT_LEAST_ONE_SEP${idx}`] = function (arg1) {\n                    this.atLeastOneSepFirstInternalRecord(i, arg1);\n                };\n            }\n            // DSL methods with the idx(suffix) as an argument\n            this[`consume`] = function (idx, arg1, arg2) {\n                return this.consumeInternalRecord(arg1, idx, arg2);\n            };\n            this[`subrule`] = function (idx, arg1, arg2) {\n                return this.subruleInternalRecord(arg1, idx, arg2);\n            };\n            this[`option`] = function (idx, arg1) {\n                return this.optionInternalRecord(arg1, idx);\n            };\n            this[`or`] = function (idx, arg1) {\n                return this.orInternalRecord(arg1, idx);\n            };\n            this[`many`] = function (idx, arg1) {\n                this.manyInternalRecord(idx, arg1);\n            };\n            this[`atLeastOne`] = function (idx, arg1) {\n                this.atLeastOneInternalRecord(idx, arg1);\n            };\n            this.ACTION = this.ACTION_RECORD;\n            this.BACKTRACK = this.BACKTRACK_RECORD;\n            this.LA = this.LA_RECORD;\n        });\n    }\n    disableRecording() {\n        this.RECORDING_PHASE = false;\n        // By deleting these **instance** properties, any future invocation\n        // will be deferred to the original methods on the **prototype** object\n        // This seems to get rid of any incorrect optimizations that V8 may\n        // do during the recording phase.\n        this.TRACE_INIT(\"Deleting Recording methods\", () => {\n            const that = this;\n            for (let i = 0; i < 10; i++) {\n                const idx = i > 0 ? i : \"\";\n                delete that[`CONSUME${idx}`];\n                delete that[`SUBRULE${idx}`];\n                delete that[`OPTION${idx}`];\n                delete that[`OR${idx}`];\n                delete that[`MANY${idx}`];\n                delete that[`MANY_SEP${idx}`];\n                delete that[`AT_LEAST_ONE${idx}`];\n                delete that[`AT_LEAST_ONE_SEP${idx}`];\n            }\n            delete that[`consume`];\n            delete that[`subrule`];\n            delete that[`option`];\n            delete that[`or`];\n            delete that[`many`];\n            delete that[`atLeastOne`];\n            delete that.ACTION;\n            delete that.BACKTRACK;\n            delete that.LA;\n        });\n    }\n    //   Parser methods are called inside an ACTION?\n    //   Maybe try/catch/finally on ACTIONS while disabling the recorders state changes?\n    // @ts-expect-error -- noop place holder\n    ACTION_RECORD(impl) {\n        // NO-OP during recording\n    }\n    // Executing backtracking logic will break our recording logic assumptions\n    BACKTRACK_RECORD(grammarRule, args) {\n        return () => true;\n    }\n    // LA is part of the official API and may be used for custom lookahead logic\n    // by end users who may forget to wrap it in ACTION or inside a GATE\n    LA_RECORD(howMuch) {\n        // We cannot use the RECORD_PHASE_TOKEN here because someone may depend\n        // On LA return EOF at the end of the input so an infinite loop may occur.\n        return END_OF_FILE;\n    }\n    topLevelRuleRecord(name, def) {\n        try {\n            const newTopLevelRule = new Rule({ definition: [], name: name });\n            newTopLevelRule.name = name;\n            this.recordingProdStack.push(newTopLevelRule);\n            def.call(this);\n            this.recordingProdStack.pop();\n            return newTopLevelRule;\n        }\n        catch (originalError) {\n            if (originalError.KNOWN_RECORDER_ERROR !== true) {\n                try {\n                    originalError.message =\n                        originalError.message +\n                            '\\n\\t This error was thrown during the \"grammar recording phase\" For more info see:\\n\\t' +\n                            \"https://chevrotain.io/docs/guide/internals.html#grammar-recording\";\n                }\n                catch (mutabilityError) {\n                    // We may not be able to modify the original error object\n                    throw originalError;\n                }\n            }\n            throw originalError;\n        }\n    }\n    // Implementation of parsing DSL\n    optionInternalRecord(actionORMethodDef, occurrence) {\n        return recordProd.call(this, Option, actionORMethodDef, occurrence);\n    }\n    atLeastOneInternalRecord(occurrence, actionORMethodDef) {\n        recordProd.call(this, RepetitionMandatory, actionORMethodDef, occurrence);\n    }\n    atLeastOneSepFirstInternalRecord(occurrence, options) {\n        recordProd.call(this, RepetitionMandatoryWithSeparator, options, occurrence, HANDLE_SEPARATOR);\n    }\n    manyInternalRecord(occurrence, actionORMethodDef) {\n        recordProd.call(this, Repetition, actionORMethodDef, occurrence);\n    }\n    manySepFirstInternalRecord(occurrence, options) {\n        recordProd.call(this, RepetitionWithSeparator, options, occurrence, HANDLE_SEPARATOR);\n    }\n    orInternalRecord(altsOrOpts, occurrence) {\n        return recordOrProd.call(this, altsOrOpts, occurrence);\n    }\n    subruleInternalRecord(ruleToCall, occurrence, options) {\n        assertMethodIdxIsValid(occurrence);\n        if (!ruleToCall || has(ruleToCall, \"ruleName\") === false) {\n            const error = new Error(`<SUBRULE${getIdxSuffix(occurrence)}> argument is invalid` +\n                ` expecting a Parser method reference but got: <${JSON.stringify(ruleToCall)}>` +\n                `\\n inside top level rule: <${this.recordingProdStack[0].name}>`);\n            error.KNOWN_RECORDER_ERROR = true;\n            throw error;\n        }\n        const prevProd = peek(this.recordingProdStack);\n        const ruleName = ruleToCall.ruleName;\n        const newNoneTerminal = new NonTerminal({\n            idx: occurrence,\n            nonTerminalName: ruleName,\n            label: options === null || options === void 0 ? void 0 : options.LABEL,\n            // The resolving of the `referencedRule` property will be done once all the Rule's GASTs have been created\n            referencedRule: undefined,\n        });\n        prevProd.definition.push(newNoneTerminal);\n        return this.outputCst\n            ? RECORDING_PHASE_CSTNODE\n            : RECORDING_NULL_OBJECT;\n    }\n    consumeInternalRecord(tokType, occurrence, options) {\n        assertMethodIdxIsValid(occurrence);\n        if (!hasShortKeyProperty(tokType)) {\n            const error = new Error(`<CONSUME${getIdxSuffix(occurrence)}> argument is invalid` +\n                ` expecting a TokenType reference but got: <${JSON.stringify(tokType)}>` +\n                `\\n inside top level rule: <${this.recordingProdStack[0].name}>`);\n            error.KNOWN_RECORDER_ERROR = true;\n            throw error;\n        }\n        const prevProd = peek(this.recordingProdStack);\n        const newNoneTerminal = new Terminal({\n            idx: occurrence,\n            terminalType: tokType,\n            label: options === null || options === void 0 ? void 0 : options.LABEL,\n        });\n        prevProd.definition.push(newNoneTerminal);\n        return RECORDING_PHASE_TOKEN;\n    }\n}\nfunction recordProd(prodConstructor, mainProdArg, occurrence, handleSep = false) {\n    assertMethodIdxIsValid(occurrence);\n    const prevProd = peek(this.recordingProdStack);\n    const grammarAction = isFunction(mainProdArg) ? mainProdArg : mainProdArg.DEF;\n    const newProd = new prodConstructor({ definition: [], idx: occurrence });\n    if (handleSep) {\n        newProd.separator = mainProdArg.SEP;\n    }\n    if (has(mainProdArg, \"MAX_LOOKAHEAD\")) {\n        newProd.maxLookahead = mainProdArg.MAX_LOOKAHEAD;\n    }\n    this.recordingProdStack.push(newProd);\n    grammarAction.call(this);\n    prevProd.definition.push(newProd);\n    this.recordingProdStack.pop();\n    return RECORDING_NULL_OBJECT;\n}\nfunction recordOrProd(mainProdArg, occurrence) {\n    assertMethodIdxIsValid(occurrence);\n    const prevProd = peek(this.recordingProdStack);\n    // Only an array of alternatives\n    const hasOptions = isArray(mainProdArg) === false;\n    const alts = hasOptions === false ? mainProdArg : mainProdArg.DEF;\n    const newOrProd = new Alternation({\n        definition: [],\n        idx: occurrence,\n        ignoreAmbiguities: hasOptions && mainProdArg.IGNORE_AMBIGUITIES === true,\n    });\n    if (has(mainProdArg, \"MAX_LOOKAHEAD\")) {\n        newOrProd.maxLookahead = mainProdArg.MAX_LOOKAHEAD;\n    }\n    const hasPredicates = some(alts, (currAlt) => isFunction(currAlt.GATE));\n    newOrProd.hasPredicates = hasPredicates;\n    prevProd.definition.push(newOrProd);\n    forEach(alts, (currAlt) => {\n        const currAltFlat = new Alternative({ definition: [] });\n        newOrProd.definition.push(currAltFlat);\n        if (has(currAlt, \"IGNORE_AMBIGUITIES\")) {\n            currAltFlat.ignoreAmbiguities = currAlt.IGNORE_AMBIGUITIES; // assumes end user provides the correct config value/type\n        }\n        // **implicit** ignoreAmbiguities due to usage of gate\n        else if (has(currAlt, \"GATE\")) {\n            currAltFlat.ignoreAmbiguities = true;\n        }\n        this.recordingProdStack.push(currAltFlat);\n        currAlt.ALT.call(this);\n        this.recordingProdStack.pop();\n    });\n    return RECORDING_NULL_OBJECT;\n}\nfunction getIdxSuffix(idx) {\n    return idx === 0 ? \"\" : `${idx}`;\n}\nfunction assertMethodIdxIsValid(idx) {\n    if (idx < 0 || idx > MAX_METHOD_IDX) {\n        const error = new Error(\n        // The stack trace will contain all the needed details\n        `Invalid DSL Method idx value: <${idx}>\\n\\t` +\n            `Idx value must be a none negative value smaller than ${MAX_METHOD_IDX + 1}`);\n        error.KNOWN_RECORDER_ERROR = true;\n        throw error;\n    }\n}\n//# sourceMappingURL=gast_recorder.js.map","import { clone, forEach, has, isEmpty, map, values } from \"lodash-es\";\nimport { toFastProperties } from \"@chevrotain/utils\";\nimport { computeAllProdsFollows } from \"../grammar/follow.js\";\nimport { createTokenInstance, EOF } from \"../../scan/tokens_public.js\";\nimport { defaultGrammarValidatorErrorProvider, defaultParserErrorProvider, } from \"../errors_public.js\";\nimport { resolveGrammar, validateGrammar, } from \"../grammar/gast/gast_resolver_public.js\";\nimport { Recoverable } from \"./traits/recoverable.js\";\nimport { LooksAhead } from \"./traits/looksahead.js\";\nimport { TreeBuilder } from \"./traits/tree_builder.js\";\nimport { LexerAdapter } from \"./traits/lexer_adapter.js\";\nimport { RecognizerApi } from \"./traits/recognizer_api.js\";\nimport { RecognizerEngine } from \"./traits/recognizer_engine.js\";\nimport { ErrorHandler } from \"./traits/error_handler.js\";\nimport { ContentAssist } from \"./traits/context_assist.js\";\nimport { GastRecorder } from \"./traits/gast_recorder.js\";\nimport { PerformanceTracer } from \"./traits/perf_tracer.js\";\nimport { applyMixins } from \"./utils/apply_mixins.js\";\nimport { validateLookahead } from \"../grammar/checks.js\";\nexport const END_OF_FILE = createTokenInstance(EOF, \"\", NaN, NaN, NaN, NaN, NaN, NaN);\nObject.freeze(END_OF_FILE);\nexport const DEFAULT_PARSER_CONFIG = Object.freeze({\n    recoveryEnabled: false,\n    maxLookahead: 3,\n    dynamicTokensEnabled: false,\n    outputCst: true,\n    errorMessageProvider: defaultParserErrorProvider,\n    nodeLocationTracking: \"none\",\n    traceInitPerf: false,\n    skipValidations: false,\n});\nexport const DEFAULT_RULE_CONFIG = Object.freeze({\n    recoveryValueFunc: () => undefined,\n    resyncEnabled: true,\n});\nexport var ParserDefinitionErrorType;\n(function (ParserDefinitionErrorType) {\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_NAME\"] = 0] = \"INVALID_RULE_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_RULE_NAME\"] = 1] = \"DUPLICATE_RULE_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_OVERRIDE\"] = 2] = \"INVALID_RULE_OVERRIDE\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_PRODUCTIONS\"] = 3] = \"DUPLICATE_PRODUCTIONS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"UNRESOLVED_SUBRULE_REF\"] = 4] = \"UNRESOLVED_SUBRULE_REF\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"LEFT_RECURSION\"] = 5] = \"LEFT_RECURSION\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"NONE_LAST_EMPTY_ALT\"] = 6] = \"NONE_LAST_EMPTY_ALT\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_ALTS\"] = 7] = \"AMBIGUOUS_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"CONFLICT_TOKENS_RULES_NAMESPACE\"] = 8] = \"CONFLICT_TOKENS_RULES_NAMESPACE\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_TOKEN_NAME\"] = 9] = \"INVALID_TOKEN_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"NO_NON_EMPTY_LOOKAHEAD\"] = 10] = \"NO_NON_EMPTY_LOOKAHEAD\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_PREFIX_ALTS\"] = 11] = \"AMBIGUOUS_PREFIX_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"TOO_MANY_ALTS\"] = 12] = \"TOO_MANY_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"CUSTOM_LOOKAHEAD_VALIDATION\"] = 13] = \"CUSTOM_LOOKAHEAD_VALIDATION\";\n})(ParserDefinitionErrorType || (ParserDefinitionErrorType = {}));\nexport function EMPTY_ALT(value = undefined) {\n    return function () {\n        return value;\n    };\n}\nexport class Parser {\n    /**\n     *  @deprecated use the **instance** method with the same name instead\n     */\n    static performSelfAnalysis(parserInstance) {\n        throw Error(\"The **static** `performSelfAnalysis` method has been deprecated.\" +\n            \"\\t\\nUse the **instance** method with the same name instead.\");\n    }\n    performSelfAnalysis() {\n        this.TRACE_INIT(\"performSelfAnalysis\", () => {\n            let defErrorsMsgs;\n            this.selfAnalysisDone = true;\n            const className = this.className;\n            this.TRACE_INIT(\"toFastProps\", () => {\n                // Without this voodoo magic the parser would be x3-x4 slower\n                // It seems it is better to invoke `toFastProperties` **before**\n                // Any manipulations of the `this` object done during the recording phase.\n                toFastProperties(this);\n            });\n            this.TRACE_INIT(\"Grammar Recording\", () => {\n                try {\n                    this.enableRecording();\n                    // Building the GAST\n                    forEach(this.definedRulesNames, (currRuleName) => {\n                        const wrappedRule = this[currRuleName];\n                        const originalGrammarAction = wrappedRule[\"originalGrammarAction\"];\n                        let recordedRuleGast;\n                        this.TRACE_INIT(`${currRuleName} Rule`, () => {\n                            recordedRuleGast = this.topLevelRuleRecord(currRuleName, originalGrammarAction);\n                        });\n                        this.gastProductionsCache[currRuleName] = recordedRuleGast;\n                    });\n                }\n                finally {\n                    this.disableRecording();\n                }\n            });\n            let resolverErrors = [];\n            this.TRACE_INIT(\"Grammar Resolving\", () => {\n                resolverErrors = resolveGrammar({\n                    rules: values(this.gastProductionsCache),\n                });\n                this.definitionErrors = this.definitionErrors.concat(resolverErrors);\n            });\n            this.TRACE_INIT(\"Grammar Validations\", () => {\n                // only perform additional grammar validations IFF no resolving errors have occurred.\n                // as unresolved grammar may lead to unhandled runtime exceptions in the follow up validations.\n                if (isEmpty(resolverErrors) && this.skipValidations === false) {\n                    const validationErrors = validateGrammar({\n                        rules: values(this.gastProductionsCache),\n                        tokenTypes: values(this.tokensMap),\n                        errMsgProvider: defaultGrammarValidatorErrorProvider,\n                        grammarName: className,\n                    });\n                    const lookaheadValidationErrors = validateLookahead({\n                        lookaheadStrategy: this.lookaheadStrategy,\n                        rules: values(this.gastProductionsCache),\n                        tokenTypes: values(this.tokensMap),\n                        grammarName: className,\n                    });\n                    this.definitionErrors = this.definitionErrors.concat(validationErrors, lookaheadValidationErrors);\n                }\n            });\n            // this analysis may fail if the grammar is not perfectly valid\n            if (isEmpty(this.definitionErrors)) {\n                // The results of these computations are not needed unless error recovery is enabled.\n                if (this.recoveryEnabled) {\n                    this.TRACE_INIT(\"computeAllProdsFollows\", () => {\n                        const allFollows = computeAllProdsFollows(values(this.gastProductionsCache));\n                        this.resyncFollows = allFollows;\n                    });\n                }\n                this.TRACE_INIT(\"ComputeLookaheadFunctions\", () => {\n                    var _a, _b;\n                    (_b = (_a = this.lookaheadStrategy).initialize) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                        rules: values(this.gastProductionsCache),\n                    });\n                    this.preComputeLookaheadFunctions(values(this.gastProductionsCache));\n                });\n            }\n            if (!Parser.DEFER_DEFINITION_ERRORS_HANDLING &&\n                !isEmpty(this.definitionErrors)) {\n                defErrorsMsgs = map(this.definitionErrors, (defError) => defError.message);\n                throw new Error(`Parser Definition Errors detected:\\n ${defErrorsMsgs.join(\"\\n-------------------------------\\n\")}`);\n            }\n        });\n    }\n    constructor(tokenVocabulary, config) {\n        this.definitionErrors = [];\n        this.selfAnalysisDone = false;\n        const that = this;\n        that.initErrorHandler(config);\n        that.initLexerAdapter();\n        that.initLooksAhead(config);\n        that.initRecognizerEngine(tokenVocabulary, config);\n        that.initRecoverable(config);\n        that.initTreeBuilder(config);\n        that.initContentAssist();\n        that.initGastRecorder(config);\n        that.initPerformanceTracer(config);\n        if (has(config, \"ignoredIssues\")) {\n            throw new Error(\"The <ignoredIssues> IParserConfig property has been deprecated.\\n\\t\" +\n                \"Please use the <IGNORE_AMBIGUITIES> flag on the relevant DSL method instead.\\n\\t\" +\n                \"See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#IGNORING_AMBIGUITIES\\n\\t\" +\n                \"For further details.\");\n        }\n        this.skipValidations = has(config, \"skipValidations\")\n            ? config.skipValidations // casting assumes the end user passing the correct type\n            : DEFAULT_PARSER_CONFIG.skipValidations;\n    }\n}\n// Set this flag to true if you don't want the Parser to throw error when problems in it's definition are detected.\n// (normally during the parser's constructor).\n// This is a design time flag, it will not affect the runtime error handling of the parser, just design time errors,\n// for example: duplicate rule names, referencing an unresolved subrule, ect...\n// This flag should not be enabled during normal usage, it is used in special situations, for example when\n// needing to display the parser definition errors in some GUI(online playground).\nParser.DEFER_DEFINITION_ERRORS_HANDLING = false;\napplyMixins(Parser, [\n    Recoverable,\n    LooksAhead,\n    TreeBuilder,\n    LexerAdapter,\n    RecognizerEngine,\n    RecognizerApi,\n    ErrorHandler,\n    ContentAssist,\n    GastRecorder,\n    PerformanceTracer,\n]);\nexport class CstParser extends Parser {\n    constructor(tokenVocabulary, config = DEFAULT_PARSER_CONFIG) {\n        const configClone = clone(config);\n        configClone.outputCst = true;\n        super(tokenVocabulary, configClone);\n    }\n}\nexport class EmbeddedActionsParser extends Parser {\n    constructor(tokenVocabulary, config = DEFAULT_PARSER_CONFIG) {\n        const configClone = clone(config);\n        configClone.outputCst = false;\n        super(tokenVocabulary, configClone);\n    }\n}\n//# sourceMappingURL=parser.js.map","export function applyMixins(derivedCtor, baseCtors) {\n    baseCtors.forEach((baseCtor) => {\n        const baseProto = baseCtor.prototype;\n        Object.getOwnPropertyNames(baseProto).forEach((propName) => {\n            if (propName === \"constructor\") {\n                return;\n            }\n            const basePropDescriptor = Object.getOwnPropertyDescriptor(baseProto, propName);\n            // Handle Accessors\n            if (basePropDescriptor &&\n                (basePropDescriptor.get || basePropDescriptor.set)) {\n                Object.defineProperty(derivedCtor.prototype, propName, basePropDescriptor);\n            }\n            else {\n                derivedCtor.prototype[propName] = baseCtor.prototype[propName];\n            }\n        });\n    });\n}\n//# sourceMappingURL=apply_mixins.js.map","import { addNoneTerminalToCst, addTerminalToCst, setNodeLocationFull, setNodeLocationOnlyOffset, } from \"../../cst/cst.js\";\nimport { has, isUndefined, keys, noop } from \"lodash-es\";\nimport { createBaseSemanticVisitorConstructor, createBaseVisitorConstructorWithDefaults, } from \"../../cst/cst_visitor.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\n/**\n * This trait is responsible for the CST building logic.\n */\nexport class TreeBuilder {\n    initTreeBuilder(config) {\n        this.CST_STACK = [];\n        // outputCst is no longer exposed/defined in the pubic API\n        this.outputCst = config.outputCst;\n        this.nodeLocationTracking = has(config, \"nodeLocationTracking\")\n            ? config.nodeLocationTracking // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.nodeLocationTracking;\n        if (!this.outputCst) {\n            this.cstInvocationStateUpdate = noop;\n            this.cstFinallyStateUpdate = noop;\n            this.cstPostTerminal = noop;\n            this.cstPostNonTerminal = noop;\n            this.cstPostRule = noop;\n        }\n        else {\n            if (/full/i.test(this.nodeLocationTracking)) {\n                if (this.recoveryEnabled) {\n                    this.setNodeLocationFromToken = setNodeLocationFull;\n                    this.setNodeLocationFromNode = setNodeLocationFull;\n                    this.cstPostRule = noop;\n                    this.setInitialNodeLocation = this.setInitialNodeLocationFullRecovery;\n                }\n                else {\n                    this.setNodeLocationFromToken = noop;\n                    this.setNodeLocationFromNode = noop;\n                    this.cstPostRule = this.cstPostRuleFull;\n                    this.setInitialNodeLocation = this.setInitialNodeLocationFullRegular;\n                }\n            }\n            else if (/onlyOffset/i.test(this.nodeLocationTracking)) {\n                if (this.recoveryEnabled) {\n                    this.setNodeLocationFromToken = setNodeLocationOnlyOffset;\n                    this.setNodeLocationFromNode = setNodeLocationOnlyOffset;\n                    this.cstPostRule = noop;\n                    this.setInitialNodeLocation =\n                        this.setInitialNodeLocationOnlyOffsetRecovery;\n                }\n                else {\n                    this.setNodeLocationFromToken = noop;\n                    this.setNodeLocationFromNode = noop;\n                    this.cstPostRule = this.cstPostRuleOnlyOffset;\n                    this.setInitialNodeLocation =\n                        this.setInitialNodeLocationOnlyOffsetRegular;\n                }\n            }\n            else if (/none/i.test(this.nodeLocationTracking)) {\n                this.setNodeLocationFromToken = noop;\n                this.setNodeLocationFromNode = noop;\n                this.cstPostRule = noop;\n                this.setInitialNodeLocation = noop;\n            }\n            else {\n                throw Error(`Invalid <nodeLocationTracking> config option: \"${config.nodeLocationTracking}\"`);\n            }\n        }\n    }\n    setInitialNodeLocationOnlyOffsetRecovery(cstNode) {\n        cstNode.location = {\n            startOffset: NaN,\n            endOffset: NaN,\n        };\n    }\n    setInitialNodeLocationOnlyOffsetRegular(cstNode) {\n        cstNode.location = {\n            // without error recovery the starting Location of a new CstNode is guaranteed\n            // To be the next Token's startOffset (for valid inputs).\n            // For invalid inputs there won't be any CSTOutput so this potential\n            // inaccuracy does not matter\n            startOffset: this.LA(1).startOffset,\n            endOffset: NaN,\n        };\n    }\n    setInitialNodeLocationFullRecovery(cstNode) {\n        cstNode.location = {\n            startOffset: NaN,\n            startLine: NaN,\n            startColumn: NaN,\n            endOffset: NaN,\n            endLine: NaN,\n            endColumn: NaN,\n        };\n    }\n    /**\n       *  @see setInitialNodeLocationOnlyOffsetRegular for explanation why this work\n  \n       * @param cstNode\n       */\n    setInitialNodeLocationFullRegular(cstNode) {\n        const nextToken = this.LA(1);\n        cstNode.location = {\n            startOffset: nextToken.startOffset,\n            startLine: nextToken.startLine,\n            startColumn: nextToken.startColumn,\n            endOffset: NaN,\n            endLine: NaN,\n            endColumn: NaN,\n        };\n    }\n    cstInvocationStateUpdate(fullRuleName) {\n        const cstNode = {\n            name: fullRuleName,\n            children: Object.create(null),\n        };\n        this.setInitialNodeLocation(cstNode);\n        this.CST_STACK.push(cstNode);\n    }\n    cstFinallyStateUpdate() {\n        this.CST_STACK.pop();\n    }\n    cstPostRuleFull(ruleCstNode) {\n        // casts to `required<CstNodeLocation>` are safe because `cstPostRuleFull` should only be invoked when full location is enabled\n        const prevToken = this.LA(0);\n        const loc = ruleCstNode.location;\n        // If this condition is true it means we consumed at least one Token\n        // In this CstNode.\n        if (loc.startOffset <= prevToken.startOffset === true) {\n            loc.endOffset = prevToken.endOffset;\n            loc.endLine = prevToken.endLine;\n            loc.endColumn = prevToken.endColumn;\n        }\n        // \"empty\" CstNode edge case\n        else {\n            loc.startOffset = NaN;\n            loc.startLine = NaN;\n            loc.startColumn = NaN;\n        }\n    }\n    cstPostRuleOnlyOffset(ruleCstNode) {\n        const prevToken = this.LA(0);\n        // `location' is not null because `cstPostRuleOnlyOffset` will only be invoked when location tracking is enabled.\n        const loc = ruleCstNode.location;\n        // If this condition is true it means we consumed at least one Token\n        // In this CstNode.\n        if (loc.startOffset <= prevToken.startOffset === true) {\n            loc.endOffset = prevToken.endOffset;\n        }\n        // \"empty\" CstNode edge case\n        else {\n            loc.startOffset = NaN;\n        }\n    }\n    cstPostTerminal(key, consumedToken) {\n        const rootCst = this.CST_STACK[this.CST_STACK.length - 1];\n        addTerminalToCst(rootCst, consumedToken, key);\n        // This is only used when **both** error recovery and CST Output are enabled.\n        this.setNodeLocationFromToken(rootCst.location, consumedToken);\n    }\n    cstPostNonTerminal(ruleCstResult, ruleName) {\n        const preCstNode = this.CST_STACK[this.CST_STACK.length - 1];\n        addNoneTerminalToCst(preCstNode, ruleName, ruleCstResult);\n        // This is only used when **both** error recovery and CST Output are enabled.\n        this.setNodeLocationFromNode(preCstNode.location, ruleCstResult.location);\n    }\n    getBaseCstVisitorConstructor() {\n        if (isUndefined(this.baseCstVisitorConstructor)) {\n            const newBaseCstVisitorConstructor = createBaseSemanticVisitorConstructor(this.className, keys(this.gastProductionsCache));\n            this.baseCstVisitorConstructor = newBaseCstVisitorConstructor;\n            return newBaseCstVisitorConstructor;\n        }\n        return this.baseCstVisitorConstructor;\n    }\n    getBaseCstVisitorConstructorWithDefaults() {\n        if (isUndefined(this.baseCstVisitorWithDefaultsConstructor)) {\n            const newConstructor = createBaseVisitorConstructorWithDefaults(this.className, keys(this.gastProductionsCache), this.getBaseCstVisitorConstructor());\n            this.baseCstVisitorWithDefaultsConstructor = newConstructor;\n            return newConstructor;\n        }\n        return this.baseCstVisitorWithDefaultsConstructor;\n    }\n    getLastExplicitRuleShortName() {\n        const ruleStack = this.RULE_STACK;\n        return ruleStack[ruleStack.length - 1];\n    }\n    getPreviousExplicitRuleShortName() {\n        const ruleStack = this.RULE_STACK;\n        return ruleStack[ruleStack.length - 2];\n    }\n    getLastExplicitRuleOccurrenceIndex() {\n        const occurrenceStack = this.RULE_OCCURRENCE_STACK;\n        return occurrenceStack[occurrenceStack.length - 1];\n    }\n}\n//# sourceMappingURL=tree_builder.js.map","import { END_OF_FILE } from \"../parser.js\";\n/**\n * Trait responsible abstracting over the interaction with Lexer output (Token vector).\n *\n * This could be generalized to support other kinds of lexers, e.g.\n * - Just in Time Lexing / Lexer-Less parsing.\n * - Streaming Lexer.\n */\nexport class LexerAdapter {\n    initLexerAdapter() {\n        this.tokVector = [];\n        this.tokVectorLength = 0;\n        this.currIdx = -1;\n    }\n    set input(newInput) {\n        // @ts-ignore - `this parameter` not supported in setters/getters\n        //   - https://www.typescriptlang.org/docs/handbook/functions.html#this-parameters\n        if (this.selfAnalysisDone !== true) {\n            throw Error(`Missing <performSelfAnalysis> invocation at the end of the Parser's constructor.`);\n        }\n        // @ts-ignore - `this parameter` not supported in setters/getters\n        //   - https://www.typescriptlang.org/docs/handbook/functions.html#this-parameters\n        this.reset();\n        this.tokVector = newInput;\n        this.tokVectorLength = newInput.length;\n    }\n    get input() {\n        return this.tokVector;\n    }\n    // skips a token and returns the next token\n    SKIP_TOKEN() {\n        if (this.currIdx <= this.tokVector.length - 2) {\n            this.consumeToken();\n            return this.LA(1);\n        }\n        else {\n            return END_OF_FILE;\n        }\n    }\n    // Lexer (accessing Token vector) related methods which can be overridden to implement lazy lexers\n    // or lexers dependent on parser context.\n    LA(howMuch) {\n        const soughtIdx = this.currIdx + howMuch;\n        if (soughtIdx < 0 || this.tokVectorLength <= soughtIdx) {\n            return END_OF_FILE;\n        }\n        else {\n            return this.tokVector[soughtIdx];\n        }\n    }\n    consumeToken() {\n        this.currIdx++;\n    }\n    exportLexerState() {\n        return this.currIdx;\n    }\n    importLexerState(newState) {\n        this.currIdx = newState;\n    }\n    resetLexerState() {\n        this.currIdx = -1;\n    }\n    moveToTerminatedState() {\n        this.currIdx = this.tokVector.length - 1;\n    }\n    getLexerPosition() {\n        return this.exportLexerState();\n    }\n}\n//# sourceMappingURL=lexer_adapter.js.map","import { clone, every, flatten, has, isArray, isEmpty, isObject, reduce, uniq, values, } from \"lodash-es\";\nimport { AT_LEAST_ONE_IDX, AT_LEAST_ONE_SEP_IDX, BITS_FOR_METHOD_TYPE, BITS_FOR_OCCURRENCE_IDX, MANY_IDX, MANY_SEP_IDX, OPTION_IDX, OR_IDX, } from \"../../grammar/keys.js\";\nimport { isRecognitionException, MismatchedTokenException, NotAllInputParsedException, } from \"../../exceptions_public.js\";\nimport { PROD_TYPE } from \"../../grammar/lookahead.js\";\nimport { NextTerminalAfterAtLeastOneSepWalker, NextTerminalAfterAtLeastOneWalker, NextTerminalAfterManySepWalker, NextTerminalAfterManyWalker, } from \"../../grammar/interpreter.js\";\nimport { DEFAULT_RULE_CONFIG } from \"../parser.js\";\nimport { IN_RULE_RECOVERY_EXCEPTION } from \"./recoverable.js\";\nimport { EOF } from \"../../../scan/tokens_public.js\";\nimport { augmentTokenTypes, isTokenType, tokenStructuredMatcher, tokenStructuredMatcherNoCategories, } from \"../../../scan/tokens.js\";\n/**\n * This trait is responsible for the runtime parsing engine\n * Used by the official API (recognizer_api.ts)\n */\nexport class RecognizerEngine {\n    initRecognizerEngine(tokenVocabulary, config) {\n        this.className = this.constructor.name;\n        // TODO: would using an ES6 Map or plain object be faster (CST building scenario)\n        this.shortRuleNameToFull = {};\n        this.fullRuleNameToShort = {};\n        this.ruleShortNameIdx = 256;\n        this.tokenMatcher = tokenStructuredMatcherNoCategories;\n        this.subruleIdx = 0;\n        this.definedRulesNames = [];\n        this.tokensMap = {};\n        this.isBackTrackingStack = [];\n        this.RULE_STACK = [];\n        this.RULE_OCCURRENCE_STACK = [];\n        this.gastProductionsCache = {};\n        if (has(config, \"serializedGrammar\")) {\n            throw Error(\"The Parser's configuration can no longer contain a <serializedGrammar> property.\\n\" +\n                \"\\tSee: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_6-0-0\\n\" +\n                \"\\tFor Further details.\");\n        }\n        if (isArray(tokenVocabulary)) {\n            // This only checks for Token vocabularies provided as arrays.\n            // That is good enough because the main objective is to detect users of pre-V4.0 APIs\n            // rather than all edge cases of empty Token vocabularies.\n            if (isEmpty(tokenVocabulary)) {\n                throw Error(\"A Token Vocabulary cannot be empty.\\n\" +\n                    \"\\tNote that the first argument for the parser constructor\\n\" +\n                    \"\\tis no longer a Token vector (since v4.0).\");\n            }\n            if (typeof tokenVocabulary[0].startOffset === \"number\") {\n                throw Error(\"The Parser constructor no longer accepts a token vector as the first argument.\\n\" +\n                    \"\\tSee: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_4-0-0\\n\" +\n                    \"\\tFor Further details.\");\n            }\n        }\n        if (isArray(tokenVocabulary)) {\n            this.tokensMap = reduce(tokenVocabulary, (acc, tokType) => {\n                acc[tokType.name] = tokType;\n                return acc;\n            }, {});\n        }\n        else if (has(tokenVocabulary, \"modes\") &&\n            every(flatten(values(tokenVocabulary.modes)), isTokenType)) {\n            const allTokenTypes = flatten(values(tokenVocabulary.modes));\n            const uniqueTokens = uniq(allTokenTypes);\n            this.tokensMap = reduce(uniqueTokens, (acc, tokType) => {\n                acc[tokType.name] = tokType;\n                return acc;\n            }, {});\n        }\n        else if (isObject(tokenVocabulary)) {\n            this.tokensMap = clone(tokenVocabulary);\n        }\n        else {\n            throw new Error(\"<tokensDictionary> argument must be An Array of Token constructors,\" +\n                \" A dictionary of Token constructors or an IMultiModeLexerDefinition\");\n        }\n        // always add EOF to the tokenNames -> constructors map. it is useful to assure all the input has been\n        // parsed with a clear error message (\"expecting EOF but found ...\")\n        this.tokensMap[\"EOF\"] = EOF;\n        const allTokenTypes = has(tokenVocabulary, \"modes\")\n            ? flatten(values(tokenVocabulary.modes))\n            : values(tokenVocabulary);\n        const noTokenCategoriesUsed = every(allTokenTypes, (tokenConstructor) => isEmpty(tokenConstructor.categoryMatches));\n        this.tokenMatcher = noTokenCategoriesUsed\n            ? tokenStructuredMatcherNoCategories\n            : tokenStructuredMatcher;\n        // Because ES2015+ syntax should be supported for creating Token classes\n        // We cannot assume that the Token classes were created using the \"extendToken\" utilities\n        // Therefore we must augment the Token classes both on Lexer initialization and on Parser initialization\n        augmentTokenTypes(values(this.tokensMap));\n    }\n    defineRule(ruleName, impl, config) {\n        if (this.selfAnalysisDone) {\n            throw Error(`Grammar rule <${ruleName}> may not be defined after the 'performSelfAnalysis' method has been called'\\n` +\n                `Make sure that all grammar rule definitions are done before 'performSelfAnalysis' is called.`);\n        }\n        const resyncEnabled = has(config, \"resyncEnabled\")\n            ? config.resyncEnabled // assumes end user provides the correct config value/type\n            : DEFAULT_RULE_CONFIG.resyncEnabled;\n        const recoveryValueFunc = has(config, \"recoveryValueFunc\")\n            ? config.recoveryValueFunc // assumes end user provides the correct config value/type\n            : DEFAULT_RULE_CONFIG.recoveryValueFunc;\n        // performance optimization: Use small integers as keys for the longer human readable \"full\" rule names.\n        // this greatly improves Map access time (as much as 8% for some performance benchmarks).\n        const shortName = this.ruleShortNameIdx << (BITS_FOR_METHOD_TYPE + BITS_FOR_OCCURRENCE_IDX);\n        this.ruleShortNameIdx++;\n        this.shortRuleNameToFull[shortName] = ruleName;\n        this.fullRuleNameToShort[ruleName] = shortName;\n        let invokeRuleWithTry;\n        // Micro optimization, only check the condition **once** on rule definition\n        // instead of **every single** rule invocation.\n        if (this.outputCst === true) {\n            invokeRuleWithTry = function invokeRuleWithTry(...args) {\n                try {\n                    this.ruleInvocationStateUpdate(shortName, ruleName, this.subruleIdx);\n                    impl.apply(this, args);\n                    const cst = this.CST_STACK[this.CST_STACK.length - 1];\n                    this.cstPostRule(cst);\n                    return cst;\n                }\n                catch (e) {\n                    return this.invokeRuleCatch(e, resyncEnabled, recoveryValueFunc);\n                }\n                finally {\n                    this.ruleFinallyStateUpdate();\n                }\n            };\n        }\n        else {\n            invokeRuleWithTry = function invokeRuleWithTryCst(...args) {\n                try {\n                    this.ruleInvocationStateUpdate(shortName, ruleName, this.subruleIdx);\n                    return impl.apply(this, args);\n                }\n                catch (e) {\n                    return this.invokeRuleCatch(e, resyncEnabled, recoveryValueFunc);\n                }\n                finally {\n                    this.ruleFinallyStateUpdate();\n                }\n            };\n        }\n        const wrappedGrammarRule = Object.assign(invokeRuleWithTry, { ruleName, originalGrammarAction: impl });\n        return wrappedGrammarRule;\n    }\n    invokeRuleCatch(e, resyncEnabledConfig, recoveryValueFunc) {\n        const isFirstInvokedRule = this.RULE_STACK.length === 1;\n        // note the reSync is always enabled for the first rule invocation, because we must always be able to\n        // reSync with EOF and just output some INVALID ParseTree\n        // during backtracking reSync recovery is disabled, otherwise we can't be certain the backtracking\n        // path is really the most valid one\n        const reSyncEnabled = resyncEnabledConfig && !this.isBackTracking() && this.recoveryEnabled;\n        if (isRecognitionException(e)) {\n            const recogError = e;\n            if (reSyncEnabled) {\n                const reSyncTokType = this.findReSyncTokenType();\n                if (this.isInCurrentRuleReSyncSet(reSyncTokType)) {\n                    recogError.resyncedTokens = this.reSyncTo(reSyncTokType);\n                    if (this.outputCst) {\n                        const partialCstResult = this.CST_STACK[this.CST_STACK.length - 1];\n                        partialCstResult.recoveredNode = true;\n                        return partialCstResult;\n                    }\n                    else {\n                        return recoveryValueFunc(e);\n                    }\n                }\n                else {\n                    if (this.outputCst) {\n                        const partialCstResult = this.CST_STACK[this.CST_STACK.length - 1];\n                        partialCstResult.recoveredNode = true;\n                        recogError.partialCstResult = partialCstResult;\n                    }\n                    // to be handled Further up the call stack\n                    throw recogError;\n                }\n            }\n            else if (isFirstInvokedRule) {\n                // otherwise a Redundant input error will be created as well and we cannot guarantee that this is indeed the case\n                this.moveToTerminatedState();\n                // the parser should never throw one of its own errors outside its flow.\n                // even if error recovery is disabled\n                return recoveryValueFunc(e);\n            }\n            else {\n                // to be recovered Further up the call stack\n                throw recogError;\n            }\n        }\n        else {\n            // some other Error type which we don't know how to handle (for example a built in JavaScript Error)\n            throw e;\n        }\n    }\n    // Implementation of parsing DSL\n    optionInternal(actionORMethodDef, occurrence) {\n        const key = this.getKeyForAutomaticLookahead(OPTION_IDX, occurrence);\n        return this.optionInternalLogic(actionORMethodDef, occurrence, key);\n    }\n    optionInternalLogic(actionORMethodDef, occurrence, key) {\n        let lookAheadFunc = this.getLaFuncFromCache(key);\n        let action;\n        if (typeof actionORMethodDef !== \"function\") {\n            action = actionORMethodDef.DEF;\n            const predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                const orgLookaheadFunction = lookAheadFunc;\n                lookAheadFunc = () => {\n                    return predicate.call(this) && orgLookaheadFunction.call(this);\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        if (lookAheadFunc.call(this) === true) {\n            return action.call(this);\n        }\n        return undefined;\n    }\n    atLeastOneInternal(prodOccurrence, actionORMethodDef) {\n        const laKey = this.getKeyForAutomaticLookahead(AT_LEAST_ONE_IDX, prodOccurrence);\n        return this.atLeastOneInternalLogic(prodOccurrence, actionORMethodDef, laKey);\n    }\n    atLeastOneInternalLogic(prodOccurrence, actionORMethodDef, key) {\n        let lookAheadFunc = this.getLaFuncFromCache(key);\n        let action;\n        if (typeof actionORMethodDef !== \"function\") {\n            action = actionORMethodDef.DEF;\n            const predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                const orgLookaheadFunction = lookAheadFunc;\n                lookAheadFunc = () => {\n                    return predicate.call(this) && orgLookaheadFunction.call(this);\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        if (lookAheadFunc.call(this) === true) {\n            let notStuck = this.doSingleRepetition(action);\n            while (lookAheadFunc.call(this) === true &&\n                notStuck === true) {\n                notStuck = this.doSingleRepetition(action);\n            }\n        }\n        else {\n            throw this.raiseEarlyExitException(prodOccurrence, PROD_TYPE.REPETITION_MANDATORY, actionORMethodDef.ERR_MSG);\n        }\n        // note that while it may seem that this can cause an error because by using a recursive call to\n        // AT_LEAST_ONE we change the grammar to AT_LEAST_TWO, AT_LEAST_THREE ... , the possible recursive call\n        // from the tryInRepetitionRecovery(...) will only happen IFF there really are TWO/THREE/.... items.\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        this.attemptInRepetitionRecovery(this.atLeastOneInternal, [prodOccurrence, actionORMethodDef], lookAheadFunc, AT_LEAST_ONE_IDX, prodOccurrence, NextTerminalAfterAtLeastOneWalker);\n    }\n    atLeastOneSepFirstInternal(prodOccurrence, options) {\n        const laKey = this.getKeyForAutomaticLookahead(AT_LEAST_ONE_SEP_IDX, prodOccurrence);\n        this.atLeastOneSepFirstInternalLogic(prodOccurrence, options, laKey);\n    }\n    atLeastOneSepFirstInternalLogic(prodOccurrence, options, key) {\n        const action = options.DEF;\n        const separator = options.SEP;\n        const firstIterationLookaheadFunc = this.getLaFuncFromCache(key);\n        // 1st iteration\n        if (firstIterationLookaheadFunc.call(this) === true) {\n            action.call(this);\n            //  TODO: Optimization can move this function construction into \"attemptInRepetitionRecovery\"\n            //  because it is only needed in error recovery scenarios.\n            const separatorLookAheadFunc = () => {\n                return this.tokenMatcher(this.LA(1), separator);\n            };\n            // 2nd..nth iterations\n            while (this.tokenMatcher(this.LA(1), separator) === true) {\n                // note that this CONSUME will never enter recovery because\n                // the separatorLookAheadFunc checks that the separator really does exist.\n                this.CONSUME(separator);\n                // No need for checking infinite loop here due to consuming the separator.\n                action.call(this);\n            }\n            // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n            this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n                prodOccurrence,\n                separator,\n                separatorLookAheadFunc,\n                action,\n                NextTerminalAfterAtLeastOneSepWalker,\n            ], separatorLookAheadFunc, AT_LEAST_ONE_SEP_IDX, prodOccurrence, NextTerminalAfterAtLeastOneSepWalker);\n        }\n        else {\n            throw this.raiseEarlyExitException(prodOccurrence, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, options.ERR_MSG);\n        }\n    }\n    manyInternal(prodOccurrence, actionORMethodDef) {\n        const laKey = this.getKeyForAutomaticLookahead(MANY_IDX, prodOccurrence);\n        return this.manyInternalLogic(prodOccurrence, actionORMethodDef, laKey);\n    }\n    manyInternalLogic(prodOccurrence, actionORMethodDef, key) {\n        let lookaheadFunction = this.getLaFuncFromCache(key);\n        let action;\n        if (typeof actionORMethodDef !== \"function\") {\n            action = actionORMethodDef.DEF;\n            const predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                const orgLookaheadFunction = lookaheadFunction;\n                lookaheadFunction = () => {\n                    return predicate.call(this) && orgLookaheadFunction.call(this);\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        let notStuck = true;\n        while (lookaheadFunction.call(this) === true && notStuck === true) {\n            notStuck = this.doSingleRepetition(action);\n        }\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        this.attemptInRepetitionRecovery(this.manyInternal, [prodOccurrence, actionORMethodDef], lookaheadFunction, MANY_IDX, prodOccurrence, NextTerminalAfterManyWalker, \n        // The notStuck parameter is only relevant when \"attemptInRepetitionRecovery\"\n        // is invoked from manyInternal, in the MANY_SEP case and AT_LEAST_ONE[_SEP]\n        // An infinite loop cannot occur as:\n        // - Either the lookahead is guaranteed to consume something (Single Token Separator)\n        // - AT_LEAST_ONE by definition is guaranteed to consume something (or error out).\n        notStuck);\n    }\n    manySepFirstInternal(prodOccurrence, options) {\n        const laKey = this.getKeyForAutomaticLookahead(MANY_SEP_IDX, prodOccurrence);\n        this.manySepFirstInternalLogic(prodOccurrence, options, laKey);\n    }\n    manySepFirstInternalLogic(prodOccurrence, options, key) {\n        const action = options.DEF;\n        const separator = options.SEP;\n        const firstIterationLaFunc = this.getLaFuncFromCache(key);\n        // 1st iteration\n        if (firstIterationLaFunc.call(this) === true) {\n            action.call(this);\n            const separatorLookAheadFunc = () => {\n                return this.tokenMatcher(this.LA(1), separator);\n            };\n            // 2nd..nth iterations\n            while (this.tokenMatcher(this.LA(1), separator) === true) {\n                // note that this CONSUME will never enter recovery because\n                // the separatorLookAheadFunc checks that the separator really does exist.\n                this.CONSUME(separator);\n                // No need for checking infinite loop here due to consuming the separator.\n                action.call(this);\n            }\n            // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n            this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n                prodOccurrence,\n                separator,\n                separatorLookAheadFunc,\n                action,\n                NextTerminalAfterManySepWalker,\n            ], separatorLookAheadFunc, MANY_SEP_IDX, prodOccurrence, NextTerminalAfterManySepWalker);\n        }\n    }\n    repetitionSepSecondInternal(prodOccurrence, separator, separatorLookAheadFunc, action, nextTerminalAfterWalker) {\n        while (separatorLookAheadFunc()) {\n            // note that this CONSUME will never enter recovery because\n            // the separatorLookAheadFunc checks that the separator really does exist.\n            this.CONSUME(separator);\n            action.call(this);\n        }\n        // we can only arrive to this function after an error\n        // has occurred (hence the name 'second') so the following\n        // IF will always be entered, its possible to remove it...\n        // however it is kept to avoid confusion and be consistent.\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        /* istanbul ignore else */\n        this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n            prodOccurrence,\n            separator,\n            separatorLookAheadFunc,\n            action,\n            nextTerminalAfterWalker,\n        ], separatorLookAheadFunc, AT_LEAST_ONE_SEP_IDX, prodOccurrence, nextTerminalAfterWalker);\n    }\n    doSingleRepetition(action) {\n        const beforeIteration = this.getLexerPosition();\n        action.call(this);\n        const afterIteration = this.getLexerPosition();\n        // This boolean will indicate if this repetition progressed\n        // or if we are \"stuck\" (potential infinite loop in the repetition).\n        return afterIteration > beforeIteration;\n    }\n    orInternal(altsOrOpts, occurrence) {\n        const laKey = this.getKeyForAutomaticLookahead(OR_IDX, occurrence);\n        const alts = isArray(altsOrOpts) ? altsOrOpts : altsOrOpts.DEF;\n        const laFunc = this.getLaFuncFromCache(laKey);\n        const altIdxToTake = laFunc.call(this, alts);\n        if (altIdxToTake !== undefined) {\n            const chosenAlternative = alts[altIdxToTake];\n            return chosenAlternative.ALT.call(this);\n        }\n        this.raiseNoAltException(occurrence, altsOrOpts.ERR_MSG);\n    }\n    ruleFinallyStateUpdate() {\n        this.RULE_STACK.pop();\n        this.RULE_OCCURRENCE_STACK.pop();\n        // NOOP when cst is disabled\n        this.cstFinallyStateUpdate();\n        if (this.RULE_STACK.length === 0 && this.isAtEndOfInput() === false) {\n            const firstRedundantTok = this.LA(1);\n            const errMsg = this.errorMessageProvider.buildNotAllInputParsedMessage({\n                firstRedundant: firstRedundantTok,\n                ruleName: this.getCurrRuleFullName(),\n            });\n            this.SAVE_ERROR(new NotAllInputParsedException(errMsg, firstRedundantTok));\n        }\n    }\n    subruleInternal(ruleToCall, idx, options) {\n        let ruleResult;\n        try {\n            const args = options !== undefined ? options.ARGS : undefined;\n            this.subruleIdx = idx;\n            ruleResult = ruleToCall.apply(this, args);\n            this.cstPostNonTerminal(ruleResult, options !== undefined && options.LABEL !== undefined\n                ? options.LABEL\n                : ruleToCall.ruleName);\n            return ruleResult;\n        }\n        catch (e) {\n            throw this.subruleInternalError(e, options, ruleToCall.ruleName);\n        }\n    }\n    subruleInternalError(e, options, ruleName) {\n        if (isRecognitionException(e) && e.partialCstResult !== undefined) {\n            this.cstPostNonTerminal(e.partialCstResult, options !== undefined && options.LABEL !== undefined\n                ? options.LABEL\n                : ruleName);\n            delete e.partialCstResult;\n        }\n        throw e;\n    }\n    consumeInternal(tokType, idx, options) {\n        let consumedToken;\n        try {\n            const nextToken = this.LA(1);\n            if (this.tokenMatcher(nextToken, tokType) === true) {\n                this.consumeToken();\n                consumedToken = nextToken;\n            }\n            else {\n                this.consumeInternalError(tokType, nextToken, options);\n            }\n        }\n        catch (eFromConsumption) {\n            consumedToken = this.consumeInternalRecovery(tokType, idx, eFromConsumption);\n        }\n        this.cstPostTerminal(options !== undefined && options.LABEL !== undefined\n            ? options.LABEL\n            : tokType.name, consumedToken);\n        return consumedToken;\n    }\n    consumeInternalError(tokType, nextToken, options) {\n        let msg;\n        const previousToken = this.LA(0);\n        if (options !== undefined && options.ERR_MSG) {\n            msg = options.ERR_MSG;\n        }\n        else {\n            msg = this.errorMessageProvider.buildMismatchTokenMessage({\n                expected: tokType,\n                actual: nextToken,\n                previous: previousToken,\n                ruleName: this.getCurrRuleFullName(),\n            });\n        }\n        throw this.SAVE_ERROR(new MismatchedTokenException(msg, nextToken, previousToken));\n    }\n    consumeInternalRecovery(tokType, idx, eFromConsumption) {\n        // no recovery allowed during backtracking, otherwise backtracking may recover invalid syntax and accept it\n        // but the original syntax could have been parsed successfully without any backtracking + recovery\n        if (this.recoveryEnabled &&\n            // TODO: more robust checking of the exception type. Perhaps Typescript extending expressions?\n            eFromConsumption.name === \"MismatchedTokenException\" &&\n            !this.isBackTracking()) {\n            const follows = this.getFollowsForInRuleRecovery(tokType, idx);\n            try {\n                return this.tryInRuleRecovery(tokType, follows);\n            }\n            catch (eFromInRuleRecovery) {\n                if (eFromInRuleRecovery.name === IN_RULE_RECOVERY_EXCEPTION) {\n                    // failed in RuleRecovery.\n                    // throw the original error in order to trigger reSync error recovery\n                    throw eFromConsumption;\n                }\n                else {\n                    throw eFromInRuleRecovery;\n                }\n            }\n        }\n        else {\n            throw eFromConsumption;\n        }\n    }\n    saveRecogState() {\n        // errors is a getter which will clone the errors array\n        const savedErrors = this.errors;\n        const savedRuleStack = clone(this.RULE_STACK);\n        return {\n            errors: savedErrors,\n            lexerState: this.exportLexerState(),\n            RULE_STACK: savedRuleStack,\n            CST_STACK: this.CST_STACK,\n        };\n    }\n    reloadRecogState(newState) {\n        this.errors = newState.errors;\n        this.importLexerState(newState.lexerState);\n        this.RULE_STACK = newState.RULE_STACK;\n    }\n    ruleInvocationStateUpdate(shortName, fullName, idxInCallingRule) {\n        this.RULE_OCCURRENCE_STACK.push(idxInCallingRule);\n        this.RULE_STACK.push(shortName);\n        // NOOP when cst is disabled\n        this.cstInvocationStateUpdate(fullName);\n    }\n    isBackTracking() {\n        return this.isBackTrackingStack.length !== 0;\n    }\n    getCurrRuleFullName() {\n        const shortName = this.getLastExplicitRuleShortName();\n        return this.shortRuleNameToFull[shortName];\n    }\n    shortRuleNameToFullName(shortName) {\n        return this.shortRuleNameToFull[shortName];\n    }\n    isAtEndOfInput() {\n        return this.tokenMatcher(this.LA(1), EOF);\n    }\n    reset() {\n        this.resetLexerState();\n        this.subruleIdx = 0;\n        this.isBackTrackingStack = [];\n        this.errors = [];\n        this.RULE_STACK = [];\n        // TODO: extract a specific reset for TreeBuilder trait\n        this.CST_STACK = [];\n        this.RULE_OCCURRENCE_STACK = [];\n    }\n}\n//# sourceMappingURL=recognizer_engine.js.map","import { includes, values } from \"lodash-es\";\nimport { isRecognitionException } from \"../../exceptions_public.js\";\nimport { DEFAULT_RULE_CONFIG, ParserDefinitionErrorType } from \"../parser.js\";\nimport { defaultGrammarValidatorErrorProvider } from \"../../errors_public.js\";\nimport { validateRuleIsOverridden } from \"../../grammar/checks.js\";\nimport { serializeGrammar } from \"@chevrotain/gast\";\n/**\n * This trait is responsible for implementing the public API\n * for defining Chevrotain parsers, i.e:\n * - CONSUME\n * - RULE\n * - OPTION\n * - ...\n */\nexport class RecognizerApi {\n    ACTION(impl) {\n        return impl.call(this);\n    }\n    consume(idx, tokType, options) {\n        return this.consumeInternal(tokType, idx, options);\n    }\n    subrule(idx, ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, idx, options);\n    }\n    option(idx, actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, idx);\n    }\n    or(idx, altsOrOpts) {\n        return this.orInternal(altsOrOpts, idx);\n    }\n    many(idx, actionORMethodDef) {\n        return this.manyInternal(idx, actionORMethodDef);\n    }\n    atLeastOne(idx, actionORMethodDef) {\n        return this.atLeastOneInternal(idx, actionORMethodDef);\n    }\n    CONSUME(tokType, options) {\n        return this.consumeInternal(tokType, 0, options);\n    }\n    CONSUME1(tokType, options) {\n        return this.consumeInternal(tokType, 1, options);\n    }\n    CONSUME2(tokType, options) {\n        return this.consumeInternal(tokType, 2, options);\n    }\n    CONSUME3(tokType, options) {\n        return this.consumeInternal(tokType, 3, options);\n    }\n    CONSUME4(tokType, options) {\n        return this.consumeInternal(tokType, 4, options);\n    }\n    CONSUME5(tokType, options) {\n        return this.consumeInternal(tokType, 5, options);\n    }\n    CONSUME6(tokType, options) {\n        return this.consumeInternal(tokType, 6, options);\n    }\n    CONSUME7(tokType, options) {\n        return this.consumeInternal(tokType, 7, options);\n    }\n    CONSUME8(tokType, options) {\n        return this.consumeInternal(tokType, 8, options);\n    }\n    CONSUME9(tokType, options) {\n        return this.consumeInternal(tokType, 9, options);\n    }\n    SUBRULE(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 0, options);\n    }\n    SUBRULE1(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 1, options);\n    }\n    SUBRULE2(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 2, options);\n    }\n    SUBRULE3(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 3, options);\n    }\n    SUBRULE4(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 4, options);\n    }\n    SUBRULE5(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 5, options);\n    }\n    SUBRULE6(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 6, options);\n    }\n    SUBRULE7(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 7, options);\n    }\n    SUBRULE8(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 8, options);\n    }\n    SUBRULE9(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 9, options);\n    }\n    OPTION(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 0);\n    }\n    OPTION1(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 1);\n    }\n    OPTION2(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 2);\n    }\n    OPTION3(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 3);\n    }\n    OPTION4(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 4);\n    }\n    OPTION5(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 5);\n    }\n    OPTION6(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 6);\n    }\n    OPTION7(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 7);\n    }\n    OPTION8(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 8);\n    }\n    OPTION9(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 9);\n    }\n    OR(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 0);\n    }\n    OR1(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 1);\n    }\n    OR2(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 2);\n    }\n    OR3(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 3);\n    }\n    OR4(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 4);\n    }\n    OR5(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 5);\n    }\n    OR6(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 6);\n    }\n    OR7(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 7);\n    }\n    OR8(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 8);\n    }\n    OR9(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 9);\n    }\n    MANY(actionORMethodDef) {\n        this.manyInternal(0, actionORMethodDef);\n    }\n    MANY1(actionORMethodDef) {\n        this.manyInternal(1, actionORMethodDef);\n    }\n    MANY2(actionORMethodDef) {\n        this.manyInternal(2, actionORMethodDef);\n    }\n    MANY3(actionORMethodDef) {\n        this.manyInternal(3, actionORMethodDef);\n    }\n    MANY4(actionORMethodDef) {\n        this.manyInternal(4, actionORMethodDef);\n    }\n    MANY5(actionORMethodDef) {\n        this.manyInternal(5, actionORMethodDef);\n    }\n    MANY6(actionORMethodDef) {\n        this.manyInternal(6, actionORMethodDef);\n    }\n    MANY7(actionORMethodDef) {\n        this.manyInternal(7, actionORMethodDef);\n    }\n    MANY8(actionORMethodDef) {\n        this.manyInternal(8, actionORMethodDef);\n    }\n    MANY9(actionORMethodDef) {\n        this.manyInternal(9, actionORMethodDef);\n    }\n    MANY_SEP(options) {\n        this.manySepFirstInternal(0, options);\n    }\n    MANY_SEP1(options) {\n        this.manySepFirstInternal(1, options);\n    }\n    MANY_SEP2(options) {\n        this.manySepFirstInternal(2, options);\n    }\n    MANY_SEP3(options) {\n        this.manySepFirstInternal(3, options);\n    }\n    MANY_SEP4(options) {\n        this.manySepFirstInternal(4, options);\n    }\n    MANY_SEP5(options) {\n        this.manySepFirstInternal(5, options);\n    }\n    MANY_SEP6(options) {\n        this.manySepFirstInternal(6, options);\n    }\n    MANY_SEP7(options) {\n        this.manySepFirstInternal(7, options);\n    }\n    MANY_SEP8(options) {\n        this.manySepFirstInternal(8, options);\n    }\n    MANY_SEP9(options) {\n        this.manySepFirstInternal(9, options);\n    }\n    AT_LEAST_ONE(actionORMethodDef) {\n        this.atLeastOneInternal(0, actionORMethodDef);\n    }\n    AT_LEAST_ONE1(actionORMethodDef) {\n        return this.atLeastOneInternal(1, actionORMethodDef);\n    }\n    AT_LEAST_ONE2(actionORMethodDef) {\n        this.atLeastOneInternal(2, actionORMethodDef);\n    }\n    AT_LEAST_ONE3(actionORMethodDef) {\n        this.atLeastOneInternal(3, actionORMethodDef);\n    }\n    AT_LEAST_ONE4(actionORMethodDef) {\n        this.atLeastOneInternal(4, actionORMethodDef);\n    }\n    AT_LEAST_ONE5(actionORMethodDef) {\n        this.atLeastOneInternal(5, actionORMethodDef);\n    }\n    AT_LEAST_ONE6(actionORMethodDef) {\n        this.atLeastOneInternal(6, actionORMethodDef);\n    }\n    AT_LEAST_ONE7(actionORMethodDef) {\n        this.atLeastOneInternal(7, actionORMethodDef);\n    }\n    AT_LEAST_ONE8(actionORMethodDef) {\n        this.atLeastOneInternal(8, actionORMethodDef);\n    }\n    AT_LEAST_ONE9(actionORMethodDef) {\n        this.atLeastOneInternal(9, actionORMethodDef);\n    }\n    AT_LEAST_ONE_SEP(options) {\n        this.atLeastOneSepFirstInternal(0, options);\n    }\n    AT_LEAST_ONE_SEP1(options) {\n        this.atLeastOneSepFirstInternal(1, options);\n    }\n    AT_LEAST_ONE_SEP2(options) {\n        this.atLeastOneSepFirstInternal(2, options);\n    }\n    AT_LEAST_ONE_SEP3(options) {\n        this.atLeastOneSepFirstInternal(3, options);\n    }\n    AT_LEAST_ONE_SEP4(options) {\n        this.atLeastOneSepFirstInternal(4, options);\n    }\n    AT_LEAST_ONE_SEP5(options) {\n        this.atLeastOneSepFirstInternal(5, options);\n    }\n    AT_LEAST_ONE_SEP6(options) {\n        this.atLeastOneSepFirstInternal(6, options);\n    }\n    AT_LEAST_ONE_SEP7(options) {\n        this.atLeastOneSepFirstInternal(7, options);\n    }\n    AT_LEAST_ONE_SEP8(options) {\n        this.atLeastOneSepFirstInternal(8, options);\n    }\n    AT_LEAST_ONE_SEP9(options) {\n        this.atLeastOneSepFirstInternal(9, options);\n    }\n    RULE(name, implementation, config = DEFAULT_RULE_CONFIG) {\n        if (includes(this.definedRulesNames, name)) {\n            const errMsg = defaultGrammarValidatorErrorProvider.buildDuplicateRuleNameError({\n                topLevelRule: name,\n                grammarName: this.className,\n            });\n            const error = {\n                message: errMsg,\n                type: ParserDefinitionErrorType.DUPLICATE_RULE_NAME,\n                ruleName: name,\n            };\n            this.definitionErrors.push(error);\n        }\n        this.definedRulesNames.push(name);\n        const ruleImplementation = this.defineRule(name, implementation, config);\n        this[name] = ruleImplementation;\n        return ruleImplementation;\n    }\n    OVERRIDE_RULE(name, impl, config = DEFAULT_RULE_CONFIG) {\n        const ruleErrors = validateRuleIsOverridden(name, this.definedRulesNames, this.className);\n        this.definitionErrors = this.definitionErrors.concat(ruleErrors);\n        const ruleImplementation = this.defineRule(name, impl, config);\n        this[name] = ruleImplementation;\n        return ruleImplementation;\n    }\n    BACKTRACK(grammarRule, args) {\n        return function () {\n            // save org state\n            this.isBackTrackingStack.push(1);\n            const orgState = this.saveRecogState();\n            try {\n                grammarRule.apply(this, args);\n                // if no exception was thrown we have succeed parsing the rule.\n                return true;\n            }\n            catch (e) {\n                if (isRecognitionException(e)) {\n                    return false;\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                this.reloadRecogState(orgState);\n                this.isBackTrackingStack.pop();\n            }\n        };\n    }\n    // GAST export APIs\n    getGAstProductions() {\n        return this.gastProductionsCache;\n    }\n    getSerializedGastProductions() {\n        return serializeGrammar(values(this.gastProductionsCache));\n    }\n}\n//# sourceMappingURL=recognizer_api.js.map","import { EarlyExitException, isRecognitionException, NoViableAltException, } from \"../../exceptions_public.js\";\nimport { clone, has } from \"lodash-es\";\nimport { getLookaheadPathsForOptionalProd, getLookaheadPathsForOr, } from \"../../grammar/lookahead.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\n/**\n * Trait responsible for runtime parsing errors.\n */\nexport class ErrorHandler {\n    initErrorHandler(config) {\n        this._errors = [];\n        this.errorMessageProvider = has(config, \"errorMessageProvider\")\n            ? config.errorMessageProvider // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.errorMessageProvider;\n    }\n    SAVE_ERROR(error) {\n        if (isRecognitionException(error)) {\n            error.context = {\n                ruleStack: this.getHumanReadableRuleStack(),\n                ruleOccurrenceStack: clone(this.RULE_OCCURRENCE_STACK),\n            };\n            this._errors.push(error);\n            return error;\n        }\n        else {\n            throw Error(\"Trying to save an Error which is not a RecognitionException\");\n        }\n    }\n    get errors() {\n        return clone(this._errors);\n    }\n    set errors(newErrors) {\n        this._errors = newErrors;\n    }\n    // TODO: consider caching the error message computed information\n    raiseEarlyExitException(occurrence, prodType, userDefinedErrMsg) {\n        const ruleName = this.getCurrRuleFullName();\n        const ruleGrammar = this.getGAstProductions()[ruleName];\n        const lookAheadPathsPerAlternative = getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, this.maxLookahead);\n        const insideProdPaths = lookAheadPathsPerAlternative[0];\n        const actualTokens = [];\n        for (let i = 1; i <= this.maxLookahead; i++) {\n            actualTokens.push(this.LA(i));\n        }\n        const msg = this.errorMessageProvider.buildEarlyExitMessage({\n            expectedIterationPaths: insideProdPaths,\n            actual: actualTokens,\n            previous: this.LA(0),\n            customUserDescription: userDefinedErrMsg,\n            ruleName: ruleName,\n        });\n        throw this.SAVE_ERROR(new EarlyExitException(msg, this.LA(1), this.LA(0)));\n    }\n    // TODO: consider caching the error message computed information\n    raiseNoAltException(occurrence, errMsgTypes) {\n        const ruleName = this.getCurrRuleFullName();\n        const ruleGrammar = this.getGAstProductions()[ruleName];\n        // TODO: getLookaheadPathsForOr can be slow for large enough maxLookahead and certain grammars, consider caching ?\n        const lookAheadPathsPerAlternative = getLookaheadPathsForOr(occurrence, ruleGrammar, this.maxLookahead);\n        const actualTokens = [];\n        for (let i = 1; i <= this.maxLookahead; i++) {\n            actualTokens.push(this.LA(i));\n        }\n        const previousToken = this.LA(0);\n        const errMsg = this.errorMessageProvider.buildNoViableAltMessage({\n            expectedPathsPerAlt: lookAheadPathsPerAlternative,\n            actual: actualTokens,\n            previous: previousToken,\n            customUserDescription: errMsgTypes,\n            ruleName: this.getCurrRuleFullName(),\n        });\n        throw this.SAVE_ERROR(new NoViableAltException(errMsg, this.LA(1), previousToken));\n    }\n}\n//# sourceMappingURL=error_handler.js.map","import { NextAfterTokenWalker, nextPossibleTokensAfter, } from \"../../grammar/interpreter.js\";\nimport { first, isUndefined } from \"lodash-es\";\nexport class ContentAssist {\n    initContentAssist() { }\n    computeContentAssist(startRuleName, precedingInput) {\n        const startRuleGast = this.gastProductionsCache[startRuleName];\n        if (isUndefined(startRuleGast)) {\n            throw Error(`Rule ->${startRuleName}<- does not exist in this grammar.`);\n        }\n        return nextPossibleTokensAfter([startRuleGast], precedingInput, this.tokenMatcher, this.maxLookahead);\n    }\n    // TODO: should this be a member method or a utility? it does not have any state or usage of 'this'...\n    // TODO: should this be more explicitly part of the public API?\n    getNextPossibleTokenTypes(grammarPath) {\n        const topRuleName = first(grammarPath.ruleStack);\n        const gastProductions = this.getGAstProductions();\n        const topProduction = gastProductions[topRuleName];\n        const nextPossibleTokenTypes = new NextAfterTokenWalker(topProduction, grammarPath).startWalking();\n        return nextPossibleTokenTypes;\n    }\n}\n//# sourceMappingURL=context_assist.js.map","import { has } from \"lodash-es\";\nimport { timer } from \"@chevrotain/utils\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\n/**\n * Trait responsible for runtime parsing errors.\n */\nexport class PerformanceTracer {\n    initPerformanceTracer(config) {\n        if (has(config, \"traceInitPerf\")) {\n            const userTraceInitPerf = config.traceInitPerf;\n            const traceIsNumber = typeof userTraceInitPerf === \"number\";\n            this.traceInitMaxIdent = traceIsNumber\n                ? userTraceInitPerf\n                : Infinity;\n            this.traceInitPerf = traceIsNumber\n                ? userTraceInitPerf > 0\n                : userTraceInitPerf; // assumes end user provides the correct config value/type\n        }\n        else {\n            this.traceInitMaxIdent = 0;\n            this.traceInitPerf = DEFAULT_PARSER_CONFIG.traceInitPerf;\n        }\n        this.traceInitIndent = -1;\n    }\n    TRACE_INIT(phaseDesc, phaseImpl) {\n        // No need to optimize this using NOOP pattern because\n        // It is not called in a hot spot...\n        if (this.traceInitPerf === true) {\n            this.traceInitIndent++;\n            const indent = new Array(this.traceInitIndent + 1).join(\"\\t\");\n            if (this.traceInitIndent < this.traceInitMaxIdent) {\n                console.log(`${indent}--> <${phaseDesc}>`);\n            }\n            const { time, value } = timer(phaseImpl);\n            /* istanbul ignore next - Difficult to reproduce specific performance behavior (>10ms) in tests */\n            const traceMethod = time > 10 ? console.warn : console.log;\n            if (this.traceInitIndent < this.traceInitMaxIdent) {\n                traceMethod(`${indent}<-- <${phaseDesc}> time: ${time}ms`);\n            }\n            this.traceInitIndent--;\n            return value;\n        }\n        else {\n            return phaseImpl();\n        }\n    }\n}\n//# sourceMappingURL=perf_tracer.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { createDefaultCoreModule, createDefaultSharedCoreModule } from '../default-module.js';\nimport { inject } from '../dependency-injection.js';\nimport * as ast from '../languages/generated/ast.js';\nimport { EmptyFileSystem } from '../workspace/file-system-provider.js';\nimport { URI } from './uri-utils.js';\nconst minimalGrammarModule = {\n    Grammar: () => undefined,\n    LanguageMetaData: () => ({\n        caseInsensitive: false,\n        fileExtensions: ['.langium'],\n        languageId: 'langium'\n    })\n};\nconst minimalSharedGrammarModule = {\n    AstReflection: () => new ast.LangiumGrammarAstReflection()\n};\nfunction createMinimalGrammarServices() {\n    const shared = inject(createDefaultSharedCoreModule(EmptyFileSystem), minimalSharedGrammarModule);\n    const grammar = inject(createDefaultCoreModule({ shared }), minimalGrammarModule);\n    shared.ServiceRegistry.register(grammar);\n    return grammar;\n}\n/**\n * Load a Langium grammar for your language from a JSON string. This is used by several services,\n * most notably the parser builder which interprets the grammar to create a parser.\n */\nexport function loadGrammarFromJson(json) {\n    var _a;\n    const services = createMinimalGrammarServices();\n    const astNode = services.serializer.JsonSerializer.deserialize(json);\n    services.shared.workspace.LangiumDocumentFactory.fromModel(astNode, URI.parse(`memory://${(_a = astNode.name) !== null && _a !== void 0 ? _a : 'grammar'}.langium`));\n    return astNode;\n}\n//# sourceMappingURL=grammar-loader.js.map","var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\n\n// src/language/generated/ast.ts\nimport { AbstractAstReflection } from \"langium\";\nvar Statement = \"Statement\";\nvar Architecture = \"Architecture\";\nfunction isArchitecture(item) {\n  return reflection.isInstance(item, Architecture);\n}\n__name(isArchitecture, \"isArchitecture\");\nvar Axis = \"Axis\";\nvar Branch = \"Branch\";\nfunction isBranch(item) {\n  return reflection.isInstance(item, Branch);\n}\n__name(isBranch, \"isBranch\");\nvar Checkout = \"Checkout\";\nvar CherryPicking = \"CherryPicking\";\nvar ClassDefStatement = \"ClassDefStatement\";\nvar Commit = \"Commit\";\nfunction isCommit(item) {\n  return reflection.isInstance(item, Commit);\n}\n__name(isCommit, \"isCommit\");\nvar Curve = \"Curve\";\nvar Edge = \"Edge\";\nvar Entry = \"Entry\";\nvar GitGraph = \"GitGraph\";\nfunction isGitGraph(item) {\n  return reflection.isInstance(item, GitGraph);\n}\n__name(isGitGraph, \"isGitGraph\");\nvar Group = \"Group\";\nvar Info = \"Info\";\nfunction isInfo(item) {\n  return reflection.isInstance(item, Info);\n}\n__name(isInfo, \"isInfo\");\nvar Item = \"Item\";\nvar Junction = \"Junction\";\nvar Merge = \"Merge\";\nfunction isMerge(item) {\n  return reflection.isInstance(item, Merge);\n}\n__name(isMerge, \"isMerge\");\nvar Option = \"Option\";\nvar Packet = \"Packet\";\nfunction isPacket(item) {\n  return reflection.isInstance(item, Packet);\n}\n__name(isPacket, \"isPacket\");\nvar PacketBlock = \"PacketBlock\";\nfunction isPacketBlock(item) {\n  return reflection.isInstance(item, PacketBlock);\n}\n__name(isPacketBlock, \"isPacketBlock\");\nvar Pie = \"Pie\";\nfunction isPie(item) {\n  return reflection.isInstance(item, Pie);\n}\n__name(isPie, \"isPie\");\nvar PieSection = \"PieSection\";\nfunction isPieSection(item) {\n  return reflection.isInstance(item, PieSection);\n}\n__name(isPieSection, \"isPieSection\");\nvar Radar = \"Radar\";\nvar Service = \"Service\";\nvar Treemap = \"Treemap\";\nfunction isTreemap(item) {\n  return reflection.isInstance(item, Treemap);\n}\n__name(isTreemap, \"isTreemap\");\nvar TreemapRow = \"TreemapRow\";\nvar Direction = \"Direction\";\nvar Leaf = \"Leaf\";\nvar Section = \"Section\";\nvar MermaidAstReflection = class extends AbstractAstReflection {\n  static {\n    __name(this, \"MermaidAstReflection\");\n  }\n  getAllTypes() {\n    return [Architecture, Axis, Branch, Checkout, CherryPicking, ClassDefStatement, Commit, Curve, Direction, Edge, Entry, GitGraph, Group, Info, Item, Junction, Leaf, Merge, Option, Packet, PacketBlock, Pie, PieSection, Radar, Section, Service, Statement, Treemap, TreemapRow];\n  }\n  computeIsSubtype(subtype, supertype) {\n    switch (subtype) {\n      case Branch:\n      case Checkout:\n      case CherryPicking:\n      case Commit:\n      case Merge: {\n        return this.isSubtype(Statement, supertype);\n      }\n      case Direction: {\n        return this.isSubtype(GitGraph, supertype);\n      }\n      case Leaf:\n      case Section: {\n        return this.isSubtype(Item, supertype);\n      }\n      default: {\n        return false;\n      }\n    }\n  }\n  getReferenceType(refInfo) {\n    const referenceId = `${refInfo.container.$type}:${refInfo.property}`;\n    switch (referenceId) {\n      case \"Entry:axis\": {\n        return Axis;\n      }\n      default: {\n        throw new Error(`${referenceId} is not a valid reference id.`);\n      }\n    }\n  }\n  getTypeMetaData(type) {\n    switch (type) {\n      case Architecture: {\n        return {\n          name: Architecture,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"edges\", defaultValue: [] },\n            { name: \"groups\", defaultValue: [] },\n            { name: \"junctions\", defaultValue: [] },\n            { name: \"services\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Axis: {\n        return {\n          name: Axis,\n          properties: [\n            { name: \"label\" },\n            { name: \"name\" }\n          ]\n        };\n      }\n      case Branch: {\n        return {\n          name: Branch,\n          properties: [\n            { name: \"name\" },\n            { name: \"order\" }\n          ]\n        };\n      }\n      case Checkout: {\n        return {\n          name: Checkout,\n          properties: [\n            { name: \"branch\" }\n          ]\n        };\n      }\n      case CherryPicking: {\n        return {\n          name: CherryPicking,\n          properties: [\n            { name: \"id\" },\n            { name: \"parent\" },\n            { name: \"tags\", defaultValue: [] }\n          ]\n        };\n      }\n      case ClassDefStatement: {\n        return {\n          name: ClassDefStatement,\n          properties: [\n            { name: \"className\" },\n            { name: \"styleText\" }\n          ]\n        };\n      }\n      case Commit: {\n        return {\n          name: Commit,\n          properties: [\n            { name: \"id\" },\n            { name: \"message\" },\n            { name: \"tags\", defaultValue: [] },\n            { name: \"type\" }\n          ]\n        };\n      }\n      case Curve: {\n        return {\n          name: Curve,\n          properties: [\n            { name: \"entries\", defaultValue: [] },\n            { name: \"label\" },\n            { name: \"name\" }\n          ]\n        };\n      }\n      case Edge: {\n        return {\n          name: Edge,\n          properties: [\n            { name: \"lhsDir\" },\n            { name: \"lhsGroup\", defaultValue: false },\n            { name: \"lhsId\" },\n            { name: \"lhsInto\", defaultValue: false },\n            { name: \"rhsDir\" },\n            { name: \"rhsGroup\", defaultValue: false },\n            { name: \"rhsId\" },\n            { name: \"rhsInto\", defaultValue: false },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Entry: {\n        return {\n          name: Entry,\n          properties: [\n            { name: \"axis\" },\n            { name: \"value\" }\n          ]\n        };\n      }\n      case GitGraph: {\n        return {\n          name: GitGraph,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"statements\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Group: {\n        return {\n          name: Group,\n          properties: [\n            { name: \"icon\" },\n            { name: \"id\" },\n            { name: \"in\" },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Info: {\n        return {\n          name: Info,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Item: {\n        return {\n          name: Item,\n          properties: [\n            { name: \"classSelector\" },\n            { name: \"name\" }\n          ]\n        };\n      }\n      case Junction: {\n        return {\n          name: Junction,\n          properties: [\n            { name: \"id\" },\n            { name: \"in\" }\n          ]\n        };\n      }\n      case Merge: {\n        return {\n          name: Merge,\n          properties: [\n            { name: \"branch\" },\n            { name: \"id\" },\n            { name: \"tags\", defaultValue: [] },\n            { name: \"type\" }\n          ]\n        };\n      }\n      case Option: {\n        return {\n          name: Option,\n          properties: [\n            { name: \"name\" },\n            { name: \"value\", defaultValue: false }\n          ]\n        };\n      }\n      case Packet: {\n        return {\n          name: Packet,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"blocks\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case PacketBlock: {\n        return {\n          name: PacketBlock,\n          properties: [\n            { name: \"bits\" },\n            { name: \"end\" },\n            { name: \"label\" },\n            { name: \"start\" }\n          ]\n        };\n      }\n      case Pie: {\n        return {\n          name: Pie,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"sections\", defaultValue: [] },\n            { name: \"showData\", defaultValue: false },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case PieSection: {\n        return {\n          name: PieSection,\n          properties: [\n            { name: \"label\" },\n            { name: \"value\" }\n          ]\n        };\n      }\n      case Radar: {\n        return {\n          name: Radar,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"axes\", defaultValue: [] },\n            { name: \"curves\", defaultValue: [] },\n            { name: \"options\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Service: {\n        return {\n          name: Service,\n          properties: [\n            { name: \"icon\" },\n            { name: \"iconText\" },\n            { name: \"id\" },\n            { name: \"in\" },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Treemap: {\n        return {\n          name: Treemap,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"title\" },\n            { name: \"TreemapRows\", defaultValue: [] }\n          ]\n        };\n      }\n      case TreemapRow: {\n        return {\n          name: TreemapRow,\n          properties: [\n            { name: \"indent\" },\n            { name: \"item\" }\n          ]\n        };\n      }\n      case Direction: {\n        return {\n          name: Direction,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"dir\" },\n            { name: \"statements\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Leaf: {\n        return {\n          name: Leaf,\n          properties: [\n            { name: \"classSelector\" },\n            { name: \"name\" },\n            { name: \"value\" }\n          ]\n        };\n      }\n      case Section: {\n        return {\n          name: Section,\n          properties: [\n            { name: \"classSelector\" },\n            { name: \"name\" }\n          ]\n        };\n      }\n      default: {\n        return {\n          name: type,\n          properties: []\n        };\n      }\n    }\n  }\n};\nvar reflection = new MermaidAstReflection();\n\n// src/language/generated/grammar.ts\nimport { loadGrammarFromJson } from \"langium\";\nvar loadedInfoGrammar;\nvar InfoGrammar = /* @__PURE__ */ __name(() => loadedInfoGrammar ?? (loadedInfoGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Info\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Info\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Keyword\",\"value\":\"info\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"showInfo\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[],\"cardinality\":\"*\"}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"?\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"BOOLEAN\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"boolean\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"true\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"false\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"FLOAT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[0-9]+\\\\\\\\.[0-9]+(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"INT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/0|[1-9][0-9]*(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NUMBER\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"}},{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"([^\\\\\"\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*\\\\\"|'([^'\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*'/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\w]([-\\\\\\\\w]*\\\\\\\\w)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[],\"types\":[],\"usedGrammars\":[]}`)), \"InfoGrammar\");\nvar loadedPacketGrammar;\nvar PacketGrammar = /* @__PURE__ */ __name(() => loadedPacketGrammar ?? (loadedPacketGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Packet\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Packet\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"packet\"},{\"$type\":\"Keyword\",\"value\":\"packet-beta\"}]},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"blocks\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]}],\"cardinality\":\"*\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"PacketBlock\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"start\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"-\"},{\"$type\":\"Assignment\",\"feature\":\"end\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}}],\"cardinality\":\"?\"}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"+\"},{\"$type\":\"Assignment\",\"feature\":\"bits\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}}]}]},{\"$type\":\"Keyword\",\"value\":\":\"},{\"$type\":\"Assignment\",\"feature\":\"label\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"BOOLEAN\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"boolean\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"true\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"false\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"FLOAT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[0-9]+\\\\\\\\.[0-9]+(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"INT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/0|[1-9][0-9]*(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NUMBER\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"}},{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"([^\\\\\"\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*\\\\\"|'([^'\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*'/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\w]([-\\\\\\\\w]*\\\\\\\\w)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[],\"types\":[],\"usedGrammars\":[]}`)), \"PacketGrammar\");\nvar loadedPieGrammar;\nvar PieGrammar = /* @__PURE__ */ __name(() => loadedPieGrammar ?? (loadedPieGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Pie\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Pie\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Keyword\",\"value\":\"pie\"},{\"$type\":\"Assignment\",\"feature\":\"showData\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"showData\"},\"cardinality\":\"?\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"sections\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]}],\"cardinality\":\"*\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"PieSection\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"label\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[]}},{\"$type\":\"Keyword\",\"value\":\":\"},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"BOOLEAN\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"boolean\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"true\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"false\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"FLOAT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[0-9]+\\\\\\\\.[0-9]+(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"INT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/0|[1-9][0-9]*(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NUMBER\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"}},{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"([^\\\\\"\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*\\\\\"|'([^'\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*'/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\w]([-\\\\\\\\w]*\\\\\\\\w)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[],\"types\":[],\"usedGrammars\":[]}`)), \"PieGrammar\");\nvar loadedArchitectureGrammar;\nvar ArchitectureGrammar = /* @__PURE__ */ __name(() => loadedArchitectureGrammar ?? (loadedArchitectureGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Architecture\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Architecture\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@23\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Keyword\",\"value\":\"architecture-beta\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@23\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}],\"cardinality\":\"*\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"Statement\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"groups\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"services\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"junctions\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"edges\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"LeftPort\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\":\"},{\"$type\":\"Assignment\",\"feature\":\"lhsDir\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"RightPort\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"rhsDir\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}},{\"$type\":\"Keyword\",\"value\":\":\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"Arrow\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"lhsInto\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"--\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"-\"},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@29\"},\"arguments\":[]}},{\"$type\":\"Keyword\",\"value\":\"-\"}]}]},{\"$type\":\"Assignment\",\"feature\":\"rhsInto\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Group\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"group\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"icon\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@28\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@29\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"in\"},{\"$type\":\"Assignment\",\"feature\":\"in\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Service\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"service\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"iconText\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@21\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"icon\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@28\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@29\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"in\"},{\"$type\":\"Assignment\",\"feature\":\"in\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Junction\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"junction\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"in\"},{\"$type\":\"Assignment\",\"feature\":\"in\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Edge\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"lhsId\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"lhsGroup\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"rhsId\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"rhsGroup\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARROW_DIRECTION\",\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"L\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"R\"}}]},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"T\"}}]},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"B\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARROW_GROUP\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\{group\\\\\\\\}/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARROW_INTO\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/<|>/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@23\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@16\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"BOOLEAN\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"boolean\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"true\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"false\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"FLOAT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[0-9]+\\\\\\\\.[0-9]+(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"INT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/0|[1-9][0-9]*(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NUMBER\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"}},{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"([^\\\\\"\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*\\\\\"|'([^'\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*'/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\w]([-\\\\\\\\w]*\\\\\\\\w)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARCH_ICON\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\([\\\\\\\\w-:]+\\\\\\\\)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARCH_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\[[\\\\\\\\w ]+\\\\\\\\]/\"},\"fragment\":false,\"hidden\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[],\"types\":[],\"usedGrammars\":[]}`)), \"ArchitectureGrammar\");\nvar loadedGitGraphGrammar;\nvar GitGraphGrammar = /* @__PURE__ */ __name(() => loadedGitGraphGrammar ?? (loadedGitGraphGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"GitGraph\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"GitGraph\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"gitGraph\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"gitGraph\"},{\"$type\":\"Keyword\",\"value\":\":\"}]},{\"$type\":\"Keyword\",\"value\":\"gitGraph:\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"gitGraph\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]},{\"$type\":\"Keyword\",\"value\":\":\"}]}]},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"statements\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}}],\"cardinality\":\"*\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Statement\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Direction\",\"definition\":{\"$type\":\"Assignment\",\"feature\":\"dir\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"LR\"},{\"$type\":\"Keyword\",\"value\":\"TB\"},{\"$type\":\"Keyword\",\"value\":\"BT\"}]}},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Commit\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"commit\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"id:\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"msg:\",\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"message\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"tag:\"},{\"$type\":\"Assignment\",\"feature\":\"tags\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"type:\"},{\"$type\":\"Assignment\",\"feature\":\"type\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"NORMAL\"},{\"$type\":\"Keyword\",\"value\":\"REVERSE\"},{\"$type\":\"Keyword\",\"value\":\"HIGHLIGHT\"}]}}]}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Branch\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"branch\"},{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@24\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"order:\"},{\"$type\":\"Assignment\",\"feature\":\"order\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Merge\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"merge\"},{\"$type\":\"Assignment\",\"feature\":\"branch\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@24\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]}},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"id:\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"tag:\"},{\"$type\":\"Assignment\",\"feature\":\"tags\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"type:\"},{\"$type\":\"Assignment\",\"feature\":\"type\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"NORMAL\"},{\"$type\":\"Keyword\",\"value\":\"REVERSE\"},{\"$type\":\"Keyword\",\"value\":\"HIGHLIGHT\"}]}}]}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Checkout\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"checkout\"},{\"$type\":\"Keyword\",\"value\":\"switch\"}]},{\"$type\":\"Assignment\",\"feature\":\"branch\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@24\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"CherryPicking\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"cherry-pick\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"id:\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"tag:\"},{\"$type\":\"Assignment\",\"feature\":\"tags\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"parent:\"},{\"$type\":\"Assignment\",\"feature\":\"parent\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"BOOLEAN\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"boolean\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"true\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"false\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"FLOAT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[0-9]+\\\\\\\\.[0-9]+(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"INT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/0|[1-9][0-9]*(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NUMBER\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@14\"}},{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"([^\\\\\"\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*\\\\\"|'([^'\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*'/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\w]([-\\\\\\\\w]*\\\\\\\\w)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"name\":\"REFERENCE\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\w([-\\\\\\\\./\\\\\\\\w]*[-\\\\\\\\w])?/\"},\"fragment\":false,\"hidden\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[],\"types\":[],\"usedGrammars\":[]}`)), \"GitGraphGrammar\");\nvar loadedRadarGrammar;\nvar RadarGrammar = /* @__PURE__ */ __name(() => loadedRadarGrammar ?? (loadedRadarGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Radar\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Radar\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"radar-beta\"},{\"$type\":\"Keyword\",\"value\":\"radar-beta:\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"radar-beta\"},{\"$type\":\"Keyword\",\"value\":\":\"}]}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"axis\"},{\"$type\":\"Assignment\",\"feature\":\"axes\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\",\"},{\"$type\":\"Assignment\",\"feature\":\"axes\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}}],\"cardinality\":\"*\"}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"curve\"},{\"$type\":\"Assignment\",\"feature\":\"curves\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\",\"},{\"$type\":\"Assignment\",\"feature\":\"curves\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}}],\"cardinality\":\"*\"}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"options\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\",\"},{\"$type\":\"Assignment\",\"feature\":\"options\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}}],\"cardinality\":\"*\"}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}],\"cardinality\":\"*\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"Label\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"[\"},{\"$type\":\"Assignment\",\"feature\":\"label\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[]}},{\"$type\":\"Keyword\",\"value\":\"]\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Axis\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[],\"cardinality\":\"?\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Curve\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[],\"cardinality\":\"?\"},{\"$type\":\"Keyword\",\"value\":\"{\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]},{\"$type\":\"Keyword\",\"value\":\"}\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"Entries\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Assignment\",\"feature\":\"entries\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\",\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Assignment\",\"feature\":\"entries\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]}}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"*\"}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Assignment\",\"feature\":\"entries\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\",\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Assignment\",\"feature\":\"entries\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"*\"}]}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"DetailedEntry\",\"returnType\":{\"$ref\":\"#/interfaces@0\"},\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"axis\",\"operator\":\"=\",\"terminal\":{\"$type\":\"CrossReference\",\"type\":{\"$ref\":\"#/rules@2\"},\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]},\"deprecatedSyntax\":false}},{\"$type\":\"Keyword\",\"value\":\":\",\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"NumberEntry\",\"returnType\":{\"$ref\":\"#/interfaces@0\"},\"definition\":{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Option\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"showLegend\"}},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"ticks\"}},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"max\"}},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"min\"}},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"graticule\"}},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}}]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"GRATICULE\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"circle\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"polygon\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@14\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"BOOLEAN\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"boolean\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"true\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"false\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"FLOAT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[0-9]+\\\\\\\\.[0-9]+(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"INT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/0|[1-9][0-9]*(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NUMBER\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"}},{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@16\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"([^\\\\\"\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*\\\\\"|'([^'\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*'/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\w]([-\\\\\\\\w]*\\\\\\\\w)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"interfaces\":[{\"$type\":\"Interface\",\"name\":\"Entry\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"axis\",\"isOptional\":true,\"type\":{\"$type\":\"ReferenceType\",\"referenceType\":{\"$type\":\"SimpleType\",\"typeRef\":{\"$ref\":\"#/rules@2\"}}}},{\"$type\":\"TypeAttribute\",\"name\":\"value\",\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"number\"},\"isOptional\":false}],\"superTypes\":[]}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"types\":[],\"usedGrammars\":[]}`)), \"RadarGrammar\");\nvar loadedTreemapGrammar;\nvar TreemapGrammar = /* @__PURE__ */ __name(() => loadedTreemapGrammar ?? (loadedTreemapGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Treemap\",\"rules\":[{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]}}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"BOOLEAN\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"boolean\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"true\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"false\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Treemap\",\"returnType\":{\"$ref\":\"#/interfaces@4\"},\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@0\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"TreemapRows\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@14\"},\"arguments\":[]}}],\"cardinality\":\"*\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"TREEMAP_KEYWORD\",\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"treemap-beta\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"treemap\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"CLASS_DEF\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/classDef\\\\\\\\s+([a-zA-Z_][a-zA-Z0-9_]+)(?:\\\\\\\\s+([^;\\\\\\\\r\\\\\\\\n]*))?(?:;)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STYLE_SEPARATOR\",\"definition\":{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\":::\"}},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"SEPARATOR\",\"definition\":{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\":\"}},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"COMMA\",\"definition\":{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\",\"}},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WS\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[ \\\\\\\\t]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"ML_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\%\\\\\\\\%[^\\\\\\\\n]*/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"NL\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false},{\"$type\":\"ParserRule\",\"name\":\"TreemapRow\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"indent\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"item\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@16\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"},\"arguments\":[]}]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"ClassDef\",\"dataType\":\"string\",\"definition\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Item\",\"returnType\":{\"$ref\":\"#/interfaces@0\"},\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Section\",\"returnType\":{\"$ref\":\"#/interfaces@1\"},\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@23\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"classSelector\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}],\"cardinality\":\"?\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Leaf\",\"returnType\":{\"$ref\":\"#/interfaces@2\"},\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@23\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[],\"cardinality\":\"?\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[],\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"classSelector\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}],\"cardinality\":\"?\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"INDENTATION\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[ \\\\\\\\t]{1,}/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID2\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[a-zA-Z_][a-zA-Z0-9_]*/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NUMBER2\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[0-9_\\\\\\\\.\\\\\\\\,]+/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"ParserRule\",\"name\":\"MyNumber\",\"dataType\":\"number\",\"definition\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@21\"},\"arguments\":[]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING2\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"[^\\\\\"]*\\\\\"|'[^']*'/\"},\"fragment\":false,\"hidden\":false}],\"interfaces\":[{\"$type\":\"Interface\",\"name\":\"Item\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"name\",\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"},\"isOptional\":false},{\"$type\":\"TypeAttribute\",\"name\":\"classSelector\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}}],\"superTypes\":[]},{\"$type\":\"Interface\",\"name\":\"Section\",\"superTypes\":[{\"$ref\":\"#/interfaces@0\"}],\"attributes\":[]},{\"$type\":\"Interface\",\"name\":\"Leaf\",\"superTypes\":[{\"$ref\":\"#/interfaces@0\"}],\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"value\",\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"number\"},\"isOptional\":false}]},{\"$type\":\"Interface\",\"name\":\"ClassDefStatement\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"className\",\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"},\"isOptional\":false},{\"$type\":\"TypeAttribute\",\"name\":\"styleText\",\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"},\"isOptional\":false}],\"superTypes\":[]},{\"$type\":\"Interface\",\"name\":\"Treemap\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"TreemapRows\",\"type\":{\"$type\":\"ArrayType\",\"elementType\":{\"$type\":\"SimpleType\",\"typeRef\":{\"$ref\":\"#/rules@14\"}}},\"isOptional\":false},{\"$type\":\"TypeAttribute\",\"name\":\"title\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"accTitle\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"accDescr\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}}],\"superTypes\":[]}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"imports\":[],\"types\":[],\"usedGrammars\":[],\"$comment\":\"/**\\\\n * Treemap grammar for Langium\\\\n * Converted from mindmap grammar\\\\n *\\\\n * The ML_COMMENT and NL hidden terminals handle whitespace, comments, and newlines\\\\n * before the treemap keyword, allowing for empty lines and comments before the\\\\n * treemap declaration.\\\\n */\"}`)), \"TreemapGrammar\");\n\n// src/language/generated/module.ts\nvar InfoLanguageMetaData = {\n  languageId: \"info\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar PacketLanguageMetaData = {\n  languageId: \"packet\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar PieLanguageMetaData = {\n  languageId: \"pie\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar ArchitectureLanguageMetaData = {\n  languageId: \"architecture\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar GitGraphLanguageMetaData = {\n  languageId: \"gitGraph\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar RadarLanguageMetaData = {\n  languageId: \"radar\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar TreemapLanguageMetaData = {\n  languageId: \"treemap\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar MermaidGeneratedSharedModule = {\n  AstReflection: /* @__PURE__ */ __name(() => new MermaidAstReflection(), \"AstReflection\")\n};\nvar InfoGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => InfoGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => InfoLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar PacketGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => PacketGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => PacketLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar PieGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => PieGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => PieLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar ArchitectureGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => ArchitectureGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => ArchitectureLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar GitGraphGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => GitGraphGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => GitGraphLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar RadarGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => RadarGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => RadarLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar TreemapGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => TreemapGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => TreemapLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\n\n// src/language/common/valueConverter.ts\nimport { DefaultValueConverter } from \"langium\";\n\n// src/language/common/matcher.ts\nvar accessibilityDescrRegex = /accDescr(?:[\\t ]*:([^\\n\\r]*)|\\s*{([^}]*)})/;\nvar accessibilityTitleRegex = /accTitle[\\t ]*:([^\\n\\r]*)/;\nvar titleRegex = /title([\\t ][^\\n\\r]*|)/;\n\n// src/language/common/valueConverter.ts\nvar rulesRegexes = {\n  ACC_DESCR: accessibilityDescrRegex,\n  ACC_TITLE: accessibilityTitleRegex,\n  TITLE: titleRegex\n};\nvar AbstractMermaidValueConverter = class extends DefaultValueConverter {\n  static {\n    __name(this, \"AbstractMermaidValueConverter\");\n  }\n  runConverter(rule, input, cstNode) {\n    let value = this.runCommonConverter(rule, input, cstNode);\n    if (value === void 0) {\n      value = this.runCustomConverter(rule, input, cstNode);\n    }\n    if (value === void 0) {\n      return super.runConverter(rule, input, cstNode);\n    }\n    return value;\n  }\n  runCommonConverter(rule, input, _cstNode) {\n    const regex = rulesRegexes[rule.name];\n    if (regex === void 0) {\n      return void 0;\n    }\n    const match = regex.exec(input);\n    if (match === null) {\n      return void 0;\n    }\n    if (match[1] !== void 0) {\n      return match[1].trim().replace(/[\\t ]{2,}/gm, \" \");\n    }\n    if (match[2] !== void 0) {\n      return match[2].replace(/^\\s*/gm, \"\").replace(/\\s+$/gm, \"\").replace(/[\\t ]{2,}/gm, \" \").replace(/[\\n\\r]{2,}/gm, \"\\n\");\n    }\n    return void 0;\n  }\n};\nvar CommonValueConverter = class extends AbstractMermaidValueConverter {\n  static {\n    __name(this, \"CommonValueConverter\");\n  }\n  runCustomConverter(_rule, _input, _cstNode) {\n    return void 0;\n  }\n};\n\n// src/language/common/tokenBuilder.ts\nimport { DefaultTokenBuilder } from \"langium\";\nvar AbstractMermaidTokenBuilder = class extends DefaultTokenBuilder {\n  static {\n    __name(this, \"AbstractMermaidTokenBuilder\");\n  }\n  constructor(keywords) {\n    super();\n    this.keywords = new Set(keywords);\n  }\n  buildKeywordTokens(rules, terminalTokens, options) {\n    const tokenTypes = super.buildKeywordTokens(rules, terminalTokens, options);\n    tokenTypes.forEach((tokenType) => {\n      if (this.keywords.has(tokenType.name) && tokenType.PATTERN !== void 0) {\n        tokenType.PATTERN = new RegExp(tokenType.PATTERN.toString() + \"(?:(?=%%)|(?!\\\\S))\");\n      }\n    });\n    return tokenTypes;\n  }\n};\nvar CommonTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"CommonTokenBuilder\");\n  }\n};\n\nexport {\n  __name,\n  Statement,\n  Architecture,\n  isArchitecture,\n  Branch,\n  isBranch,\n  Commit,\n  isCommit,\n  GitGraph,\n  isGitGraph,\n  Info,\n  isInfo,\n  Merge,\n  isMerge,\n  Packet,\n  isPacket,\n  PacketBlock,\n  isPacketBlock,\n  Pie,\n  isPie,\n  PieSection,\n  isPieSection,\n  Radar,\n  Treemap,\n  isTreemap,\n  MermaidGeneratedSharedModule,\n  InfoGeneratedModule,\n  PacketGeneratedModule,\n  PieGeneratedModule,\n  ArchitectureGeneratedModule,\n  GitGraphGeneratedModule,\n  RadarGeneratedModule,\n  TreemapGeneratedModule,\n  AbstractMermaidValueConverter,\n  CommonValueConverter,\n  AbstractMermaidTokenBuilder,\n  CommonTokenBuilder\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  CommonValueConverter,\n  InfoGeneratedModule,\n  MermaidGeneratedSharedModule,\n  __name\n} from \"./chunk-4KMFLZZN.mjs\";\n\n// src/language/info/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/info/tokenBuilder.ts\nvar InfoTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"InfoTokenBuilder\");\n  }\n  constructor() {\n    super([\"info\", \"showInfo\"]);\n  }\n};\n\n// src/language/info/module.ts\nvar InfoModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new InfoTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createInfoServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Info = inject(\n    createDefaultCoreModule({ shared }),\n    InfoGeneratedModule,\n    InfoModule\n  );\n  shared.ServiceRegistry.register(Info);\n  return { shared, Info };\n}\n__name(createInfoServices, \"createInfoServices\");\n\nexport {\n  InfoModule,\n  createInfoServices\n};\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class ErrorWithLocation extends Error {\n    constructor(node, message) {\n        super(node ? `${message} at ${node.range.start.line}:${node.range.start.character}` : message);\n    }\n}\nexport function assertUnreachable(_) {\n    throw new Error('Error! The input value was not handled.');\n}\n//# sourceMappingURL=errors.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\n/**\n * The default implementation of `Stream` works with two input functions:\n *  - The first function creates the initial state of an iteration.\n *  - The second function gets the current state as argument and returns an `IteratorResult`.\n */\nexport class StreamImpl {\n    constructor(startFn, nextFn) {\n        this.startFn = startFn;\n        this.nextFn = nextFn;\n    }\n    iterator() {\n        const iterator = {\n            state: this.startFn(),\n            next: () => this.nextFn(iterator.state),\n            [Symbol.iterator]: () => iterator\n        };\n        return iterator;\n    }\n    [Symbol.iterator]() {\n        return this.iterator();\n    }\n    isEmpty() {\n        const iterator = this.iterator();\n        return Boolean(iterator.next().done);\n    }\n    count() {\n        const iterator = this.iterator();\n        let count = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            count++;\n            next = iterator.next();\n        }\n        return count;\n    }\n    toArray() {\n        const result = [];\n        const iterator = this.iterator();\n        let next;\n        do {\n            next = iterator.next();\n            if (next.value !== undefined) {\n                result.push(next.value);\n            }\n        } while (!next.done);\n        return result;\n    }\n    toSet() {\n        return new Set(this);\n    }\n    toMap(keyFn, valueFn) {\n        const entryStream = this.map(element => [\n            keyFn ? keyFn(element) : element,\n            valueFn ? valueFn(element) : element\n        ]);\n        return new Map(entryStream);\n    }\n    toString() {\n        return this.join();\n    }\n    concat(other) {\n        return new StreamImpl(() => ({ first: this.startFn(), firstDone: false, iterator: other[Symbol.iterator]() }), state => {\n            let result;\n            if (!state.firstDone) {\n                do {\n                    result = this.nextFn(state.first);\n                    if (!result.done) {\n                        return result;\n                    }\n                } while (!result.done);\n                state.firstDone = true;\n            }\n            do {\n                result = state.iterator.next();\n                if (!result.done) {\n                    return result;\n                }\n            } while (!result.done);\n            return DONE_RESULT;\n        });\n    }\n    join(separator = ',') {\n        const iterator = this.iterator();\n        let value = '';\n        let result;\n        let addSeparator = false;\n        do {\n            result = iterator.next();\n            if (!result.done) {\n                if (addSeparator) {\n                    value += separator;\n                }\n                value += toString(result.value);\n            }\n            addSeparator = true;\n        } while (!result.done);\n        return value;\n    }\n    indexOf(searchElement, fromIndex = 0) {\n        const iterator = this.iterator();\n        let index = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            if (index >= fromIndex && next.value === searchElement) {\n                return index;\n            }\n            next = iterator.next();\n            index++;\n        }\n        return -1;\n    }\n    every(predicate) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (!predicate(next.value)) {\n                return false;\n            }\n            next = iterator.next();\n        }\n        return true;\n    }\n    some(predicate) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (predicate(next.value)) {\n                return true;\n            }\n            next = iterator.next();\n        }\n        return false;\n    }\n    forEach(callbackfn) {\n        const iterator = this.iterator();\n        let index = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            callbackfn(next.value, index);\n            next = iterator.next();\n            index++;\n        }\n    }\n    map(callbackfn) {\n        return new StreamImpl(this.startFn, (state) => {\n            const { done, value } = this.nextFn(state);\n            if (done) {\n                return DONE_RESULT;\n            }\n            else {\n                return { done: false, value: callbackfn(value) };\n            }\n        });\n    }\n    filter(predicate) {\n        return new StreamImpl(this.startFn, state => {\n            let result;\n            do {\n                result = this.nextFn(state);\n                if (!result.done && predicate(result.value)) {\n                    return result;\n                }\n            } while (!result.done);\n            return DONE_RESULT;\n        });\n    }\n    nonNullable() {\n        return this.filter(e => e !== undefined && e !== null);\n    }\n    reduce(callbackfn, initialValue) {\n        const iterator = this.iterator();\n        let previousValue = initialValue;\n        let next = iterator.next();\n        while (!next.done) {\n            if (previousValue === undefined) {\n                previousValue = next.value;\n            }\n            else {\n                previousValue = callbackfn(previousValue, next.value);\n            }\n            next = iterator.next();\n        }\n        return previousValue;\n    }\n    reduceRight(callbackfn, initialValue) {\n        return this.recursiveReduce(this.iterator(), callbackfn, initialValue);\n    }\n    recursiveReduce(iterator, callbackfn, initialValue) {\n        const next = iterator.next();\n        if (next.done) {\n            return initialValue;\n        }\n        const previousValue = this.recursiveReduce(iterator, callbackfn, initialValue);\n        if (previousValue === undefined) {\n            return next.value;\n        }\n        return callbackfn(previousValue, next.value);\n    }\n    find(predicate) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (predicate(next.value)) {\n                return next.value;\n            }\n            next = iterator.next();\n        }\n        return undefined;\n    }\n    findIndex(predicate) {\n        const iterator = this.iterator();\n        let index = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            if (predicate(next.value)) {\n                return index;\n            }\n            next = iterator.next();\n            index++;\n        }\n        return -1;\n    }\n    includes(searchElement) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (next.value === searchElement) {\n                return true;\n            }\n            next = iterator.next();\n        }\n        return false;\n    }\n    flatMap(callbackfn) {\n        return new StreamImpl(() => ({ this: this.startFn() }), (state) => {\n            do {\n                if (state.iterator) {\n                    const next = state.iterator.next();\n                    if (next.done) {\n                        state.iterator = undefined;\n                    }\n                    else {\n                        return next;\n                    }\n                }\n                const { done, value } = this.nextFn(state.this);\n                if (!done) {\n                    const mapped = callbackfn(value);\n                    if (isIterable(mapped)) {\n                        state.iterator = mapped[Symbol.iterator]();\n                    }\n                    else {\n                        return { done: false, value: mapped };\n                    }\n                }\n            } while (state.iterator);\n            return DONE_RESULT;\n        });\n    }\n    flat(depth) {\n        if (depth === undefined) {\n            depth = 1;\n        }\n        if (depth <= 0) {\n            return this;\n        }\n        const stream = depth > 1 ? this.flat(depth - 1) : this;\n        return new StreamImpl(() => ({ this: stream.startFn() }), (state) => {\n            do {\n                if (state.iterator) {\n                    const next = state.iterator.next();\n                    if (next.done) {\n                        state.iterator = undefined;\n                    }\n                    else {\n                        return next;\n                    }\n                }\n                const { done, value } = stream.nextFn(state.this);\n                if (!done) {\n                    if (isIterable(value)) {\n                        state.iterator = value[Symbol.iterator]();\n                    }\n                    else {\n                        return { done: false, value: value };\n                    }\n                }\n            } while (state.iterator);\n            return DONE_RESULT;\n        });\n    }\n    head() {\n        const iterator = this.iterator();\n        const result = iterator.next();\n        if (result.done) {\n            return undefined;\n        }\n        return result.value;\n    }\n    tail(skipCount = 1) {\n        return new StreamImpl(() => {\n            const state = this.startFn();\n            for (let i = 0; i < skipCount; i++) {\n                const next = this.nextFn(state);\n                if (next.done) {\n                    return state;\n                }\n            }\n            return state;\n        }, this.nextFn);\n    }\n    limit(maxSize) {\n        return new StreamImpl(() => ({ size: 0, state: this.startFn() }), state => {\n            state.size++;\n            if (state.size > maxSize) {\n                return DONE_RESULT;\n            }\n            return this.nextFn(state.state);\n        });\n    }\n    distinct(by) {\n        return new StreamImpl(() => ({ set: new Set(), internalState: this.startFn() }), state => {\n            let result;\n            do {\n                result = this.nextFn(state.internalState);\n                if (!result.done) {\n                    const value = by ? by(result.value) : result.value;\n                    if (!state.set.has(value)) {\n                        state.set.add(value);\n                        return result;\n                    }\n                }\n            } while (!result.done);\n            return DONE_RESULT;\n        });\n    }\n    exclude(other, key) {\n        const otherKeySet = new Set();\n        for (const item of other) {\n            const value = key ? key(item) : item;\n            otherKeySet.add(value);\n        }\n        return this.filter(e => {\n            const ownKey = key ? key(e) : e;\n            return !otherKeySet.has(ownKey);\n        });\n    }\n}\nfunction toString(item) {\n    if (typeof item === 'string') {\n        return item;\n    }\n    if (typeof item === 'undefined') {\n        return 'undefined';\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (typeof item.toString === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return item.toString();\n    }\n    return Object.prototype.toString.call(item);\n}\nfunction isIterable(obj) {\n    return !!obj && typeof obj[Symbol.iterator] === 'function';\n}\n/**\n * An empty stream of any type.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const EMPTY_STREAM = new StreamImpl(() => undefined, () => DONE_RESULT);\n/**\n * Use this `IteratorResult` when implementing a `StreamImpl` to indicate that there are no more elements in the stream.\n */\nexport const DONE_RESULT = Object.freeze({ done: true, value: undefined });\n/**\n * Create a stream from one or more iterables or array-likes.\n */\nexport function stream(...collections) {\n    if (collections.length === 1) {\n        const collection = collections[0];\n        if (collection instanceof StreamImpl) {\n            return collection;\n        }\n        if (isIterable(collection)) {\n            return new StreamImpl(() => collection[Symbol.iterator](), (iterator) => iterator.next());\n        }\n        if (typeof collection.length === 'number') {\n            return new StreamImpl(() => ({ index: 0 }), (state) => {\n                if (state.index < collection.length) {\n                    return { done: false, value: collection[state.index++] };\n                }\n                else {\n                    return DONE_RESULT;\n                }\n            });\n        }\n    }\n    if (collections.length > 1) {\n        return new StreamImpl(() => ({ collIndex: 0, arrIndex: 0 }), (state) => {\n            do {\n                if (state.iterator) {\n                    const next = state.iterator.next();\n                    if (!next.done) {\n                        return next;\n                    }\n                    state.iterator = undefined;\n                }\n                if (state.array) {\n                    if (state.arrIndex < state.array.length) {\n                        return { done: false, value: state.array[state.arrIndex++] };\n                    }\n                    state.array = undefined;\n                    state.arrIndex = 0;\n                }\n                if (state.collIndex < collections.length) {\n                    const collection = collections[state.collIndex++];\n                    if (isIterable(collection)) {\n                        state.iterator = collection[Symbol.iterator]();\n                    }\n                    else if (collection && typeof collection.length === 'number') {\n                        state.array = collection;\n                    }\n                }\n            } while (state.iterator || state.array || state.collIndex < collections.length);\n            return DONE_RESULT;\n        });\n    }\n    return EMPTY_STREAM;\n}\n/**\n * The default implementation of `TreeStream` takes a root element and a function that computes the\n * children of its argument. Whether the root node included in the stream is controlled with the\n * `includeRoot` option, which defaults to `false`.\n */\nexport class TreeStreamImpl extends StreamImpl {\n    constructor(root, children, options) {\n        super(() => ({\n            iterators: (options === null || options === void 0 ? void 0 : options.includeRoot) ? [[root][Symbol.iterator]()] : [children(root)[Symbol.iterator]()],\n            pruned: false\n        }), state => {\n            if (state.pruned) {\n                state.iterators.pop();\n                state.pruned = false;\n            }\n            while (state.iterators.length > 0) {\n                const iterator = state.iterators[state.iterators.length - 1];\n                const next = iterator.next();\n                if (next.done) {\n                    state.iterators.pop();\n                }\n                else {\n                    state.iterators.push(children(next.value)[Symbol.iterator]());\n                    return next;\n                }\n            }\n            return DONE_RESULT;\n        });\n    }\n    iterator() {\n        const iterator = {\n            state: this.startFn(),\n            next: () => this.nextFn(iterator.state),\n            prune: () => {\n                iterator.state.pruned = true;\n            },\n            [Symbol.iterator]: () => iterator\n        };\n        return iterator;\n    }\n}\n/**\n * A set of utility functions that reduce a stream to a single value.\n */\nexport var Reduction;\n(function (Reduction) {\n    /**\n     * Compute the sum of a number stream.\n     */\n    function sum(stream) {\n        return stream.reduce((a, b) => a + b, 0);\n    }\n    Reduction.sum = sum;\n    /**\n     * Compute the product of a number stream.\n     */\n    function product(stream) {\n        return stream.reduce((a, b) => a * b, 0);\n    }\n    Reduction.product = product;\n    /**\n     * Compute the minimum of a number stream. Returns `undefined` if the stream is empty.\n     */\n    function min(stream) {\n        return stream.reduce((a, b) => Math.min(a, b));\n    }\n    Reduction.min = min;\n    /**\n     * Compute the maximum of a number stream. Returns `undefined` if the stream is empty.\n     */\n    function max(stream) {\n        return stream.reduce((a, b) => Math.max(a, b));\n    }\n    Reduction.max = max;\n})(Reduction || (Reduction = {}));\n//# sourceMappingURL=stream.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Lexer } from 'chevrotain';\nimport { isKeyword, isParserRule, isTerminalRule } from '../languages/generated/ast.js';\nimport { streamAllContents } from '../utils/ast-utils.js';\nimport { getAllReachableRules, terminalRegex } from '../utils/grammar-utils.js';\nimport { getCaseInsensitivePattern, isWhitespace, partialMatches } from '../utils/regexp-utils.js';\nimport { stream } from '../utils/stream.js';\nexport class DefaultTokenBuilder {\n    constructor() {\n        /**\n         * The list of diagnostics stored during the lexing process of a single text.\n         */\n        this.diagnostics = [];\n    }\n    buildTokens(grammar, options) {\n        const reachableRules = stream(getAllReachableRules(grammar, false));\n        const terminalTokens = this.buildTerminalTokens(reachableRules);\n        const tokens = this.buildKeywordTokens(reachableRules, terminalTokens, options);\n        terminalTokens.forEach(terminalToken => {\n            const pattern = terminalToken.PATTERN;\n            if (typeof pattern === 'object' && pattern && 'test' in pattern && isWhitespace(pattern)) {\n                tokens.unshift(terminalToken);\n            }\n            else {\n                tokens.push(terminalToken);\n            }\n        });\n        // We don't need to add the EOF token explicitly.\n        // It is automatically available at the end of the token stream.\n        return tokens;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    flushLexingReport(text) {\n        return { diagnostics: this.popDiagnostics() };\n    }\n    popDiagnostics() {\n        const diagnostics = [...this.diagnostics];\n        this.diagnostics = [];\n        return diagnostics;\n    }\n    buildTerminalTokens(rules) {\n        return rules.filter(isTerminalRule).filter(e => !e.fragment)\n            .map(terminal => this.buildTerminalToken(terminal)).toArray();\n    }\n    buildTerminalToken(terminal) {\n        const regex = terminalRegex(terminal);\n        const pattern = this.requiresCustomPattern(regex) ? this.regexPatternFunction(regex) : regex;\n        const tokenType = {\n            name: terminal.name,\n            PATTERN: pattern,\n        };\n        if (typeof pattern === 'function') {\n            tokenType.LINE_BREAKS = true;\n        }\n        if (terminal.hidden) {\n            // Only skip tokens that are able to accept whitespace\n            tokenType.GROUP = isWhitespace(regex) ? Lexer.SKIPPED : 'hidden';\n        }\n        return tokenType;\n    }\n    requiresCustomPattern(regex) {\n        if (regex.flags.includes('u') || regex.flags.includes('s')) {\n            // Unicode and dotall regexes are not supported by Chevrotain.\n            return true;\n        }\n        else if (regex.source.includes('?<=') || regex.source.includes('?<!')) {\n            // Negative and positive lookbehind are not supported by Chevrotain yet.\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    regexPatternFunction(regex) {\n        const stickyRegex = new RegExp(regex, regex.flags + 'y');\n        return (text, offset) => {\n            stickyRegex.lastIndex = offset;\n            const execResult = stickyRegex.exec(text);\n            return execResult;\n        };\n    }\n    buildKeywordTokens(rules, terminalTokens, options) {\n        return rules\n            // We filter by parser rules, since keywords in terminal rules get transformed into regex and are not actual tokens\n            .filter(isParserRule)\n            .flatMap(rule => streamAllContents(rule).filter(isKeyword))\n            .distinct(e => e.value).toArray()\n            // Sort keywords by descending length\n            .sort((a, b) => b.value.length - a.value.length)\n            .map(keyword => this.buildKeywordToken(keyword, terminalTokens, Boolean(options === null || options === void 0 ? void 0 : options.caseInsensitive)));\n    }\n    buildKeywordToken(keyword, terminalTokens, caseInsensitive) {\n        const keywordPattern = this.buildKeywordPattern(keyword, caseInsensitive);\n        const tokenType = {\n            name: keyword.value,\n            PATTERN: keywordPattern,\n            LONGER_ALT: this.findLongerAlt(keyword, terminalTokens)\n        };\n        if (typeof keywordPattern === 'function') {\n            tokenType.LINE_BREAKS = true;\n        }\n        return tokenType;\n    }\n    buildKeywordPattern(keyword, caseInsensitive) {\n        return caseInsensitive ?\n            new RegExp(getCaseInsensitivePattern(keyword.value)) :\n            keyword.value;\n    }\n    findLongerAlt(keyword, terminalTokens) {\n        return terminalTokens.reduce((longerAlts, token) => {\n            const pattern = token === null || token === void 0 ? void 0 : token.PATTERN;\n            if ((pattern === null || pattern === void 0 ? void 0 : pattern.source) && partialMatches('^' + pattern.source + '$', keyword.value)) {\n                longerAlts.push(token);\n            }\n            return longerAlts;\n        }, []);\n    }\n}\n//# sourceMappingURL=token-builder.js.map","/******************************************************************************\n * This file was generated by langium-cli 3.3.0.\n * DO NOT EDIT MANUALLY!\n ******************************************************************************/\nimport { AbstractAstReflection } from '../../syntax-tree.js';\nexport const LangiumGrammarTerminals = {\n    ID: /\\^?[_a-zA-Z][\\w_]*/,\n    STRING: /\"(\\\\.|[^\"\\\\])*\"|'(\\\\.|[^'\\\\])*'/,\n    NUMBER: /NaN|-?((\\d*\\.\\d+|\\d+)([Ee][+-]?\\d+)?|Infinity)/,\n    RegexLiteral: /\\/(?![*+?])(?:[^\\r\\n\\[/\\\\]|\\\\.|\\[(?:[^\\r\\n\\]\\\\]|\\\\.)*\\])+\\/[a-z]*/,\n    WS: /\\s+/,\n    ML_COMMENT: /\\/\\*[\\s\\S]*?\\*\\//,\n    SL_COMMENT: /\\/\\/[^\\n\\r]*/,\n};\nexport const AbstractRule = 'AbstractRule';\nexport function isAbstractRule(item) {\n    return reflection.isInstance(item, AbstractRule);\n}\nexport const AbstractType = 'AbstractType';\nexport function isAbstractType(item) {\n    return reflection.isInstance(item, AbstractType);\n}\nexport const Condition = 'Condition';\nexport function isCondition(item) {\n    return reflection.isInstance(item, Condition);\n}\nexport function isFeatureName(item) {\n    return isPrimitiveType(item) || item === 'current' || item === 'entry' || item === 'extends' || item === 'false' || item === 'fragment' || item === 'grammar' || item === 'hidden' || item === 'import' || item === 'interface' || item === 'returns' || item === 'terminal' || item === 'true' || item === 'type' || item === 'infer' || item === 'infers' || item === 'with' || (typeof item === 'string' && (/\\^?[_a-zA-Z][\\w_]*/.test(item)));\n}\nexport function isPrimitiveType(item) {\n    return item === 'string' || item === 'number' || item === 'boolean' || item === 'Date' || item === 'bigint';\n}\nexport const TypeDefinition = 'TypeDefinition';\nexport function isTypeDefinition(item) {\n    return reflection.isInstance(item, TypeDefinition);\n}\nexport const ValueLiteral = 'ValueLiteral';\nexport function isValueLiteral(item) {\n    return reflection.isInstance(item, ValueLiteral);\n}\nexport const AbstractElement = 'AbstractElement';\nexport function isAbstractElement(item) {\n    return reflection.isInstance(item, AbstractElement);\n}\nexport const ArrayLiteral = 'ArrayLiteral';\nexport function isArrayLiteral(item) {\n    return reflection.isInstance(item, ArrayLiteral);\n}\nexport const ArrayType = 'ArrayType';\nexport function isArrayType(item) {\n    return reflection.isInstance(item, ArrayType);\n}\nexport const BooleanLiteral = 'BooleanLiteral';\nexport function isBooleanLiteral(item) {\n    return reflection.isInstance(item, BooleanLiteral);\n}\nexport const Conjunction = 'Conjunction';\nexport function isConjunction(item) {\n    return reflection.isInstance(item, Conjunction);\n}\nexport const Disjunction = 'Disjunction';\nexport function isDisjunction(item) {\n    return reflection.isInstance(item, Disjunction);\n}\nexport const Grammar = 'Grammar';\nexport function isGrammar(item) {\n    return reflection.isInstance(item, Grammar);\n}\nexport const GrammarImport = 'GrammarImport';\nexport function isGrammarImport(item) {\n    return reflection.isInstance(item, GrammarImport);\n}\nexport const InferredType = 'InferredType';\nexport function isInferredType(item) {\n    return reflection.isInstance(item, InferredType);\n}\nexport const Interface = 'Interface';\nexport function isInterface(item) {\n    return reflection.isInstance(item, Interface);\n}\nexport const NamedArgument = 'NamedArgument';\nexport function isNamedArgument(item) {\n    return reflection.isInstance(item, NamedArgument);\n}\nexport const Negation = 'Negation';\nexport function isNegation(item) {\n    return reflection.isInstance(item, Negation);\n}\nexport const NumberLiteral = 'NumberLiteral';\nexport function isNumberLiteral(item) {\n    return reflection.isInstance(item, NumberLiteral);\n}\nexport const Parameter = 'Parameter';\nexport function isParameter(item) {\n    return reflection.isInstance(item, Parameter);\n}\nexport const ParameterReference = 'ParameterReference';\nexport function isParameterReference(item) {\n    return reflection.isInstance(item, ParameterReference);\n}\nexport const ParserRule = 'ParserRule';\nexport function isParserRule(item) {\n    return reflection.isInstance(item, ParserRule);\n}\nexport const ReferenceType = 'ReferenceType';\nexport function isReferenceType(item) {\n    return reflection.isInstance(item, ReferenceType);\n}\nexport const ReturnType = 'ReturnType';\nexport function isReturnType(item) {\n    return reflection.isInstance(item, ReturnType);\n}\nexport const SimpleType = 'SimpleType';\nexport function isSimpleType(item) {\n    return reflection.isInstance(item, SimpleType);\n}\nexport const StringLiteral = 'StringLiteral';\nexport function isStringLiteral(item) {\n    return reflection.isInstance(item, StringLiteral);\n}\nexport const TerminalRule = 'TerminalRule';\nexport function isTerminalRule(item) {\n    return reflection.isInstance(item, TerminalRule);\n}\nexport const Type = 'Type';\nexport function isType(item) {\n    return reflection.isInstance(item, Type);\n}\nexport const TypeAttribute = 'TypeAttribute';\nexport function isTypeAttribute(item) {\n    return reflection.isInstance(item, TypeAttribute);\n}\nexport const UnionType = 'UnionType';\nexport function isUnionType(item) {\n    return reflection.isInstance(item, UnionType);\n}\nexport const Action = 'Action';\nexport function isAction(item) {\n    return reflection.isInstance(item, Action);\n}\nexport const Alternatives = 'Alternatives';\nexport function isAlternatives(item) {\n    return reflection.isInstance(item, Alternatives);\n}\nexport const Assignment = 'Assignment';\nexport function isAssignment(item) {\n    return reflection.isInstance(item, Assignment);\n}\nexport const CharacterRange = 'CharacterRange';\nexport function isCharacterRange(item) {\n    return reflection.isInstance(item, CharacterRange);\n}\nexport const CrossReference = 'CrossReference';\nexport function isCrossReference(item) {\n    return reflection.isInstance(item, CrossReference);\n}\nexport const EndOfFile = 'EndOfFile';\nexport function isEndOfFile(item) {\n    return reflection.isInstance(item, EndOfFile);\n}\nexport const Group = 'Group';\nexport function isGroup(item) {\n    return reflection.isInstance(item, Group);\n}\nexport const Keyword = 'Keyword';\nexport function isKeyword(item) {\n    return reflection.isInstance(item, Keyword);\n}\nexport const NegatedToken = 'NegatedToken';\nexport function isNegatedToken(item) {\n    return reflection.isInstance(item, NegatedToken);\n}\nexport const RegexToken = 'RegexToken';\nexport function isRegexToken(item) {\n    return reflection.isInstance(item, RegexToken);\n}\nexport const RuleCall = 'RuleCall';\nexport function isRuleCall(item) {\n    return reflection.isInstance(item, RuleCall);\n}\nexport const TerminalAlternatives = 'TerminalAlternatives';\nexport function isTerminalAlternatives(item) {\n    return reflection.isInstance(item, TerminalAlternatives);\n}\nexport const TerminalGroup = 'TerminalGroup';\nexport function isTerminalGroup(item) {\n    return reflection.isInstance(item, TerminalGroup);\n}\nexport const TerminalRuleCall = 'TerminalRuleCall';\nexport function isTerminalRuleCall(item) {\n    return reflection.isInstance(item, TerminalRuleCall);\n}\nexport const UnorderedGroup = 'UnorderedGroup';\nexport function isUnorderedGroup(item) {\n    return reflection.isInstance(item, UnorderedGroup);\n}\nexport const UntilToken = 'UntilToken';\nexport function isUntilToken(item) {\n    return reflection.isInstance(item, UntilToken);\n}\nexport const Wildcard = 'Wildcard';\nexport function isWildcard(item) {\n    return reflection.isInstance(item, Wildcard);\n}\nexport class LangiumGrammarAstReflection extends AbstractAstReflection {\n    getAllTypes() {\n        return [AbstractElement, AbstractRule, AbstractType, Action, Alternatives, ArrayLiteral, ArrayType, Assignment, BooleanLiteral, CharacterRange, Condition, Conjunction, CrossReference, Disjunction, EndOfFile, Grammar, GrammarImport, Group, InferredType, Interface, Keyword, NamedArgument, NegatedToken, Negation, NumberLiteral, Parameter, ParameterReference, ParserRule, ReferenceType, RegexToken, ReturnType, RuleCall, SimpleType, StringLiteral, TerminalAlternatives, TerminalGroup, TerminalRule, TerminalRuleCall, Type, TypeAttribute, TypeDefinition, UnionType, UnorderedGroup, UntilToken, ValueLiteral, Wildcard];\n    }\n    computeIsSubtype(subtype, supertype) {\n        switch (subtype) {\n            case Action:\n            case Alternatives:\n            case Assignment:\n            case CharacterRange:\n            case CrossReference:\n            case EndOfFile:\n            case Group:\n            case Keyword:\n            case NegatedToken:\n            case RegexToken:\n            case RuleCall:\n            case TerminalAlternatives:\n            case TerminalGroup:\n            case TerminalRuleCall:\n            case UnorderedGroup:\n            case UntilToken:\n            case Wildcard: {\n                return this.isSubtype(AbstractElement, supertype);\n            }\n            case ArrayLiteral:\n            case NumberLiteral:\n            case StringLiteral: {\n                return this.isSubtype(ValueLiteral, supertype);\n            }\n            case ArrayType:\n            case ReferenceType:\n            case SimpleType:\n            case UnionType: {\n                return this.isSubtype(TypeDefinition, supertype);\n            }\n            case BooleanLiteral: {\n                return this.isSubtype(Condition, supertype) || this.isSubtype(ValueLiteral, supertype);\n            }\n            case Conjunction:\n            case Disjunction:\n            case Negation:\n            case ParameterReference: {\n                return this.isSubtype(Condition, supertype);\n            }\n            case InferredType:\n            case Interface:\n            case Type: {\n                return this.isSubtype(AbstractType, supertype);\n            }\n            case ParserRule: {\n                return this.isSubtype(AbstractRule, supertype) || this.isSubtype(AbstractType, supertype);\n            }\n            case TerminalRule: {\n                return this.isSubtype(AbstractRule, supertype);\n            }\n            default: {\n                return false;\n            }\n        }\n    }\n    getReferenceType(refInfo) {\n        const referenceId = `${refInfo.container.$type}:${refInfo.property}`;\n        switch (referenceId) {\n            case 'Action:type':\n            case 'CrossReference:type':\n            case 'Interface:superTypes':\n            case 'ParserRule:returnType':\n            case 'SimpleType:typeRef': {\n                return AbstractType;\n            }\n            case 'Grammar:hiddenTokens':\n            case 'ParserRule:hiddenTokens':\n            case 'RuleCall:rule': {\n                return AbstractRule;\n            }\n            case 'Grammar:usedGrammars': {\n                return Grammar;\n            }\n            case 'NamedArgument:parameter':\n            case 'ParameterReference:parameter': {\n                return Parameter;\n            }\n            case 'TerminalRuleCall:rule': {\n                return TerminalRule;\n            }\n            default: {\n                throw new Error(`${referenceId} is not a valid reference id.`);\n            }\n        }\n    }\n    getTypeMetaData(type) {\n        switch (type) {\n            case AbstractElement: {\n                return {\n                    name: AbstractElement,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case ArrayLiteral: {\n                return {\n                    name: ArrayLiteral,\n                    properties: [\n                        { name: 'elements', defaultValue: [] }\n                    ]\n                };\n            }\n            case ArrayType: {\n                return {\n                    name: ArrayType,\n                    properties: [\n                        { name: 'elementType' }\n                    ]\n                };\n            }\n            case BooleanLiteral: {\n                return {\n                    name: BooleanLiteral,\n                    properties: [\n                        { name: 'true', defaultValue: false }\n                    ]\n                };\n            }\n            case Conjunction: {\n                return {\n                    name: Conjunction,\n                    properties: [\n                        { name: 'left' },\n                        { name: 'right' }\n                    ]\n                };\n            }\n            case Disjunction: {\n                return {\n                    name: Disjunction,\n                    properties: [\n                        { name: 'left' },\n                        { name: 'right' }\n                    ]\n                };\n            }\n            case Grammar: {\n                return {\n                    name: Grammar,\n                    properties: [\n                        { name: 'definesHiddenTokens', defaultValue: false },\n                        { name: 'hiddenTokens', defaultValue: [] },\n                        { name: 'imports', defaultValue: [] },\n                        { name: 'interfaces', defaultValue: [] },\n                        { name: 'isDeclared', defaultValue: false },\n                        { name: 'name' },\n                        { name: 'rules', defaultValue: [] },\n                        { name: 'types', defaultValue: [] },\n                        { name: 'usedGrammars', defaultValue: [] }\n                    ]\n                };\n            }\n            case GrammarImport: {\n                return {\n                    name: GrammarImport,\n                    properties: [\n                        { name: 'path' }\n                    ]\n                };\n            }\n            case InferredType: {\n                return {\n                    name: InferredType,\n                    properties: [\n                        { name: 'name' }\n                    ]\n                };\n            }\n            case Interface: {\n                return {\n                    name: Interface,\n                    properties: [\n                        { name: 'attributes', defaultValue: [] },\n                        { name: 'name' },\n                        { name: 'superTypes', defaultValue: [] }\n                    ]\n                };\n            }\n            case NamedArgument: {\n                return {\n                    name: NamedArgument,\n                    properties: [\n                        { name: 'calledByName', defaultValue: false },\n                        { name: 'parameter' },\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case Negation: {\n                return {\n                    name: Negation,\n                    properties: [\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case NumberLiteral: {\n                return {\n                    name: NumberLiteral,\n                    properties: [\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case Parameter: {\n                return {\n                    name: Parameter,\n                    properties: [\n                        { name: 'name' }\n                    ]\n                };\n            }\n            case ParameterReference: {\n                return {\n                    name: ParameterReference,\n                    properties: [\n                        { name: 'parameter' }\n                    ]\n                };\n            }\n            case ParserRule: {\n                return {\n                    name: ParserRule,\n                    properties: [\n                        { name: 'dataType' },\n                        { name: 'definesHiddenTokens', defaultValue: false },\n                        { name: 'definition' },\n                        { name: 'entry', defaultValue: false },\n                        { name: 'fragment', defaultValue: false },\n                        { name: 'hiddenTokens', defaultValue: [] },\n                        { name: 'inferredType' },\n                        { name: 'name' },\n                        { name: 'parameters', defaultValue: [] },\n                        { name: 'returnType' },\n                        { name: 'wildcard', defaultValue: false }\n                    ]\n                };\n            }\n            case ReferenceType: {\n                return {\n                    name: ReferenceType,\n                    properties: [\n                        { name: 'referenceType' }\n                    ]\n                };\n            }\n            case ReturnType: {\n                return {\n                    name: ReturnType,\n                    properties: [\n                        { name: 'name' }\n                    ]\n                };\n            }\n            case SimpleType: {\n                return {\n                    name: SimpleType,\n                    properties: [\n                        { name: 'primitiveType' },\n                        { name: 'stringType' },\n                        { name: 'typeRef' }\n                    ]\n                };\n            }\n            case StringLiteral: {\n                return {\n                    name: StringLiteral,\n                    properties: [\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case TerminalRule: {\n                return {\n                    name: TerminalRule,\n                    properties: [\n                        { name: 'definition' },\n                        { name: 'fragment', defaultValue: false },\n                        { name: 'hidden', defaultValue: false },\n                        { name: 'name' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case Type: {\n                return {\n                    name: Type,\n                    properties: [\n                        { name: 'name' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case TypeAttribute: {\n                return {\n                    name: TypeAttribute,\n                    properties: [\n                        { name: 'defaultValue' },\n                        { name: 'isOptional', defaultValue: false },\n                        { name: 'name' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case UnionType: {\n                return {\n                    name: UnionType,\n                    properties: [\n                        { name: 'types', defaultValue: [] }\n                    ]\n                };\n            }\n            case Action: {\n                return {\n                    name: Action,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'feature' },\n                        { name: 'inferredType' },\n                        { name: 'lookahead' },\n                        { name: 'operator' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case Alternatives: {\n                return {\n                    name: Alternatives,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case Assignment: {\n                return {\n                    name: Assignment,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'feature' },\n                        { name: 'lookahead' },\n                        { name: 'operator' },\n                        { name: 'terminal' }\n                    ]\n                };\n            }\n            case CharacterRange: {\n                return {\n                    name: CharacterRange,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'left' },\n                        { name: 'lookahead' },\n                        { name: 'right' }\n                    ]\n                };\n            }\n            case CrossReference: {\n                return {\n                    name: CrossReference,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'deprecatedSyntax', defaultValue: false },\n                        { name: 'lookahead' },\n                        { name: 'terminal' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case EndOfFile: {\n                return {\n                    name: EndOfFile,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case Group: {\n                return {\n                    name: Group,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'guardCondition' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case Keyword: {\n                return {\n                    name: Keyword,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case NegatedToken: {\n                return {\n                    name: NegatedToken,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'terminal' }\n                    ]\n                };\n            }\n            case RegexToken: {\n                return {\n                    name: RegexToken,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'regex' }\n                    ]\n                };\n            }\n            case RuleCall: {\n                return {\n                    name: RuleCall,\n                    properties: [\n                        { name: 'arguments', defaultValue: [] },\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'rule' }\n                    ]\n                };\n            }\n            case TerminalAlternatives: {\n                return {\n                    name: TerminalAlternatives,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case TerminalGroup: {\n                return {\n                    name: TerminalGroup,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case TerminalRuleCall: {\n                return {\n                    name: TerminalRuleCall,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'rule' }\n                    ]\n                };\n            }\n            case UnorderedGroup: {\n                return {\n                    name: UnorderedGroup,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case UntilToken: {\n                return {\n                    name: UntilToken,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'terminal' }\n                    ]\n                };\n            }\n            case Wildcard: {\n                return {\n                    name: Wildcard,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            default: {\n                return {\n                    name: type,\n                    properties: []\n                };\n            }\n        }\n    }\n}\nexport const reflection = new LangiumGrammarAstReflection();\n//# sourceMappingURL=ast.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport function isAstNode(obj) {\n    return typeof obj === 'object' && obj !== null && typeof obj.$type === 'string';\n}\nexport function isReference(obj) {\n    return typeof obj === 'object' && obj !== null && typeof obj.$refText === 'string';\n}\nexport function isAstNodeDescription(obj) {\n    return typeof obj === 'object' && obj !== null\n        && typeof obj.name === 'string'\n        && typeof obj.type === 'string'\n        && typeof obj.path === 'string';\n}\nexport function isLinkingError(obj) {\n    return typeof obj === 'object' && obj !== null\n        && isAstNode(obj.container)\n        && isReference(obj.reference)\n        && typeof obj.message === 'string';\n}\n/**\n * An abstract implementation of the {@link AstReflection} interface.\n * Serves to cache subtype computation results to improve performance throughout different parts of Langium.\n */\nexport class AbstractAstReflection {\n    constructor() {\n        this.subtypes = {};\n        this.allSubtypes = {};\n    }\n    isInstance(node, type) {\n        return isAstNode(node) && this.isSubtype(node.$type, type);\n    }\n    isSubtype(subtype, supertype) {\n        if (subtype === supertype) {\n            return true;\n        }\n        let nested = this.subtypes[subtype];\n        if (!nested) {\n            nested = this.subtypes[subtype] = {};\n        }\n        const existing = nested[supertype];\n        if (existing !== undefined) {\n            return existing;\n        }\n        else {\n            const result = this.computeIsSubtype(subtype, supertype);\n            nested[supertype] = result;\n            return result;\n        }\n    }\n    getAllSubTypes(type) {\n        const existing = this.allSubtypes[type];\n        if (existing) {\n            return existing;\n        }\n        else {\n            const allTypes = this.getAllTypes();\n            const types = [];\n            for (const possibleSubType of allTypes) {\n                if (this.isSubtype(possibleSubType, type)) {\n                    types.push(possibleSubType);\n                }\n            }\n            this.allSubtypes[type] = types;\n            return types;\n        }\n    }\n}\nexport function isCompositeCstNode(node) {\n    return typeof node === 'object' && node !== null && Array.isArray(node.content);\n}\nexport function isLeafCstNode(node) {\n    return typeof node === 'object' && node !== null && typeof node.tokenType === 'object';\n}\nexport function isRootCstNode(node) {\n    return isCompositeCstNode(node) && typeof node.fullText === 'string';\n}\n//# sourceMappingURL=syntax-tree.js.map","export function cc(char) {\n    return char.charCodeAt(0);\n}\nexport function insertToSet(item, set) {\n    if (Array.isArray(item)) {\n        item.forEach(function (subItem) {\n            set.push(subItem);\n        });\n    }\n    else {\n        set.push(item);\n    }\n}\nexport function addFlag(flagObj, flagKey) {\n    if (flagObj[flagKey] === true) {\n        throw \"duplicate flag \" + flagKey;\n    }\n    const x = flagObj[flagKey];\n    flagObj[flagKey] = true;\n}\nexport function ASSERT_EXISTS(obj) {\n    // istanbul ignore next\n    if (obj === undefined) {\n        throw Error(\"Internal Error - Should never get here!\");\n    }\n    return true;\n}\n// istanbul ignore next\nexport function ASSERT_NEVER_REACH_HERE() {\n    throw Error(\"Internal Error - Should never get here!\");\n}\nexport function isCharacter(obj) {\n    return obj[\"type\"] === \"Character\";\n}\n//# sourceMappingURL=utils.js.map","import { cc } from \"./utils.js\";\nexport const digitsCharCodes = [];\nfor (let i = cc(\"0\"); i <= cc(\"9\"); i++) {\n    digitsCharCodes.push(i);\n}\nexport const wordCharCodes = [cc(\"_\")].concat(digitsCharCodes);\nfor (let i = cc(\"a\"); i <= cc(\"z\"); i++) {\n    wordCharCodes.push(i);\n}\nfor (let i = cc(\"A\"); i <= cc(\"Z\"); i++) {\n    wordCharCodes.push(i);\n}\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#character-classes\nexport const whitespaceCodes = [\n    cc(\" \"),\n    cc(\"\\f\"),\n    cc(\"\\n\"),\n    cc(\"\\r\"),\n    cc(\"\\t\"),\n    cc(\"\\v\"),\n    cc(\"\\t\"),\n    cc(\"\\u00a0\"),\n    cc(\"\\u1680\"),\n    cc(\"\\u2000\"),\n    cc(\"\\u2001\"),\n    cc(\"\\u2002\"),\n    cc(\"\\u2003\"),\n    cc(\"\\u2004\"),\n    cc(\"\\u2005\"),\n    cc(\"\\u2006\"),\n    cc(\"\\u2007\"),\n    cc(\"\\u2008\"),\n    cc(\"\\u2009\"),\n    cc(\"\\u200a\"),\n    cc(\"\\u2028\"),\n    cc(\"\\u2029\"),\n    cc(\"\\u202f\"),\n    cc(\"\\u205f\"),\n    cc(\"\\u3000\"),\n    cc(\"\\ufeff\"),\n];\n//# sourceMappingURL=character-classes.js.map","import { addFlag, ASSERT_EXISTS, ASSERT_NEVER_REACH_HERE, cc, insertToSet, isCharacter, } from \"./utils.js\";\nimport { digitsCharCodes, whitespaceCodes, wordCharCodes, } from \"./character-classes.js\";\n// consts and utilities\nconst hexDigitPattern = /[0-9a-fA-F]/;\nconst decimalPattern = /[0-9]/;\nconst decimalPatternNoZero = /[1-9]/;\n// https://hackernoon.com/the-madness-of-parsing-real-world-javascript-regexps-d9ee336df983\n// https://www.ecma-international.org/ecma-262/8.0/index.html#prod-Pattern\nexport class RegExpParser {\n    constructor() {\n        this.idx = 0;\n        this.input = \"\";\n        this.groupIdx = 0;\n    }\n    saveState() {\n        return {\n            idx: this.idx,\n            input: this.input,\n            groupIdx: this.groupIdx,\n        };\n    }\n    restoreState(newState) {\n        this.idx = newState.idx;\n        this.input = newState.input;\n        this.groupIdx = newState.groupIdx;\n    }\n    pattern(input) {\n        // parser state\n        this.idx = 0;\n        this.input = input;\n        this.groupIdx = 0;\n        this.consumeChar(\"/\");\n        const value = this.disjunction();\n        this.consumeChar(\"/\");\n        const flags = {\n            type: \"Flags\",\n            loc: { begin: this.idx, end: input.length },\n            global: false,\n            ignoreCase: false,\n            multiLine: false,\n            unicode: false,\n            sticky: false,\n        };\n        while (this.isRegExpFlag()) {\n            switch (this.popChar()) {\n                case \"g\":\n                    addFlag(flags, \"global\");\n                    break;\n                case \"i\":\n                    addFlag(flags, \"ignoreCase\");\n                    break;\n                case \"m\":\n                    addFlag(flags, \"multiLine\");\n                    break;\n                case \"u\":\n                    addFlag(flags, \"unicode\");\n                    break;\n                case \"y\":\n                    addFlag(flags, \"sticky\");\n                    break;\n            }\n        }\n        if (this.idx !== this.input.length) {\n            throw Error(\"Redundant input: \" + this.input.substring(this.idx));\n        }\n        return {\n            type: \"Pattern\",\n            flags: flags,\n            value: value,\n            loc: this.loc(0),\n        };\n    }\n    disjunction() {\n        const alts = [];\n        const begin = this.idx;\n        alts.push(this.alternative());\n        while (this.peekChar() === \"|\") {\n            this.consumeChar(\"|\");\n            alts.push(this.alternative());\n        }\n        return { type: \"Disjunction\", value: alts, loc: this.loc(begin) };\n    }\n    alternative() {\n        const terms = [];\n        const begin = this.idx;\n        while (this.isTerm()) {\n            terms.push(this.term());\n        }\n        return { type: \"Alternative\", value: terms, loc: this.loc(begin) };\n    }\n    term() {\n        if (this.isAssertion()) {\n            return this.assertion();\n        }\n        else {\n            return this.atom();\n        }\n    }\n    assertion() {\n        const begin = this.idx;\n        switch (this.popChar()) {\n            case \"^\":\n                return {\n                    type: \"StartAnchor\",\n                    loc: this.loc(begin),\n                };\n            case \"$\":\n                return { type: \"EndAnchor\", loc: this.loc(begin) };\n            // '\\b' or '\\B'\n            case \"\\\\\":\n                switch (this.popChar()) {\n                    case \"b\":\n                        return {\n                            type: \"WordBoundary\",\n                            loc: this.loc(begin),\n                        };\n                    case \"B\":\n                        return {\n                            type: \"NonWordBoundary\",\n                            loc: this.loc(begin),\n                        };\n                }\n                // istanbul ignore next\n                throw Error(\"Invalid Assertion Escape\");\n            // '(?=' or '(?!'\n            case \"(\":\n                this.consumeChar(\"?\");\n                let type;\n                switch (this.popChar()) {\n                    case \"=\":\n                        type = \"Lookahead\";\n                        break;\n                    case \"!\":\n                        type = \"NegativeLookahead\";\n                        break;\n                }\n                ASSERT_EXISTS(type);\n                const disjunction = this.disjunction();\n                this.consumeChar(\")\");\n                return {\n                    type: type,\n                    value: disjunction,\n                    loc: this.loc(begin),\n                };\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    quantifier(isBacktracking = false) {\n        let range = undefined;\n        const begin = this.idx;\n        switch (this.popChar()) {\n            case \"*\":\n                range = {\n                    atLeast: 0,\n                    atMost: Infinity,\n                };\n                break;\n            case \"+\":\n                range = {\n                    atLeast: 1,\n                    atMost: Infinity,\n                };\n                break;\n            case \"?\":\n                range = {\n                    atLeast: 0,\n                    atMost: 1,\n                };\n                break;\n            case \"{\":\n                const atLeast = this.integerIncludingZero();\n                switch (this.popChar()) {\n                    case \"}\":\n                        range = {\n                            atLeast: atLeast,\n                            atMost: atLeast,\n                        };\n                        break;\n                    case \",\":\n                        let atMost;\n                        if (this.isDigit()) {\n                            atMost = this.integerIncludingZero();\n                            range = {\n                                atLeast: atLeast,\n                                atMost: atMost,\n                            };\n                        }\n                        else {\n                            range = {\n                                atLeast: atLeast,\n                                atMost: Infinity,\n                            };\n                        }\n                        this.consumeChar(\"}\");\n                        break;\n                }\n                // throwing exceptions from \"ASSERT_EXISTS\" during backtracking\n                // causes severe performance degradations\n                if (isBacktracking === true && range === undefined) {\n                    return undefined;\n                }\n                ASSERT_EXISTS(range);\n                break;\n        }\n        // throwing exceptions from \"ASSERT_EXISTS\" during backtracking\n        // causes severe performance degradations\n        if (isBacktracking === true && range === undefined) {\n            return undefined;\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(range)) {\n            if (this.peekChar(0) === \"?\") {\n                this.consumeChar(\"?\");\n                range.greedy = false;\n            }\n            else {\n                range.greedy = true;\n            }\n            range.type = \"Quantifier\";\n            range.loc = this.loc(begin);\n            return range;\n        }\n    }\n    atom() {\n        let atom;\n        const begin = this.idx;\n        switch (this.peekChar()) {\n            case \".\":\n                atom = this.dotAll();\n                break;\n            case \"\\\\\":\n                atom = this.atomEscape();\n                break;\n            case \"[\":\n                atom = this.characterClass();\n                break;\n            case \"(\":\n                atom = this.group();\n                break;\n        }\n        if (atom === undefined && this.isPatternCharacter()) {\n            atom = this.patternCharacter();\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(atom)) {\n            atom.loc = this.loc(begin);\n            if (this.isQuantifier()) {\n                atom.quantifier = this.quantifier();\n            }\n            return atom;\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    dotAll() {\n        this.consumeChar(\".\");\n        return {\n            type: \"Set\",\n            complement: true,\n            value: [cc(\"\\n\"), cc(\"\\r\"), cc(\"\\u2028\"), cc(\"\\u2029\")],\n        };\n    }\n    atomEscape() {\n        this.consumeChar(\"\\\\\");\n        switch (this.peekChar()) {\n            case \"1\":\n            case \"2\":\n            case \"3\":\n            case \"4\":\n            case \"5\":\n            case \"6\":\n            case \"7\":\n            case \"8\":\n            case \"9\":\n                return this.decimalEscapeAtom();\n            case \"d\":\n            case \"D\":\n            case \"s\":\n            case \"S\":\n            case \"w\":\n            case \"W\":\n                return this.characterClassEscape();\n            case \"f\":\n            case \"n\":\n            case \"r\":\n            case \"t\":\n            case \"v\":\n                return this.controlEscapeAtom();\n            case \"c\":\n                return this.controlLetterEscapeAtom();\n            case \"0\":\n                return this.nulCharacterAtom();\n            case \"x\":\n                return this.hexEscapeSequenceAtom();\n            case \"u\":\n                return this.regExpUnicodeEscapeSequenceAtom();\n            default:\n                return this.identityEscapeAtom();\n        }\n    }\n    decimalEscapeAtom() {\n        const value = this.positiveInteger();\n        return { type: \"GroupBackReference\", value: value };\n    }\n    characterClassEscape() {\n        let set;\n        let complement = false;\n        switch (this.popChar()) {\n            case \"d\":\n                set = digitsCharCodes;\n                break;\n            case \"D\":\n                set = digitsCharCodes;\n                complement = true;\n                break;\n            case \"s\":\n                set = whitespaceCodes;\n                break;\n            case \"S\":\n                set = whitespaceCodes;\n                complement = true;\n                break;\n            case \"w\":\n                set = wordCharCodes;\n                break;\n            case \"W\":\n                set = wordCharCodes;\n                complement = true;\n                break;\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(set)) {\n            return { type: \"Set\", value: set, complement: complement };\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    controlEscapeAtom() {\n        let escapeCode;\n        switch (this.popChar()) {\n            case \"f\":\n                escapeCode = cc(\"\\f\");\n                break;\n            case \"n\":\n                escapeCode = cc(\"\\n\");\n                break;\n            case \"r\":\n                escapeCode = cc(\"\\r\");\n                break;\n            case \"t\":\n                escapeCode = cc(\"\\t\");\n                break;\n            case \"v\":\n                escapeCode = cc(\"\\v\");\n                break;\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(escapeCode)) {\n            return { type: \"Character\", value: escapeCode };\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    controlLetterEscapeAtom() {\n        this.consumeChar(\"c\");\n        const letter = this.popChar();\n        if (/[a-zA-Z]/.test(letter) === false) {\n            throw Error(\"Invalid \");\n        }\n        const letterCode = letter.toUpperCase().charCodeAt(0) - 64;\n        return { type: \"Character\", value: letterCode };\n    }\n    nulCharacterAtom() {\n        // TODO implement '[lookahead ∉ DecimalDigit]'\n        // TODO: for the deprecated octal escape sequence\n        this.consumeChar(\"0\");\n        return { type: \"Character\", value: cc(\"\\0\") };\n    }\n    hexEscapeSequenceAtom() {\n        this.consumeChar(\"x\");\n        return this.parseHexDigits(2);\n    }\n    regExpUnicodeEscapeSequenceAtom() {\n        this.consumeChar(\"u\");\n        return this.parseHexDigits(4);\n    }\n    identityEscapeAtom() {\n        // TODO: implement \"SourceCharacter but not UnicodeIDContinue\"\n        // // http://unicode.org/reports/tr31/#Specific_Character_Adjustments\n        const escapedChar = this.popChar();\n        return { type: \"Character\", value: cc(escapedChar) };\n    }\n    classPatternCharacterAtom() {\n        switch (this.peekChar()) {\n            // istanbul ignore next\n            case \"\\n\":\n            // istanbul ignore next\n            case \"\\r\":\n            // istanbul ignore next\n            case \"\\u2028\":\n            // istanbul ignore next\n            case \"\\u2029\":\n            // istanbul ignore next\n            case \"\\\\\":\n            // istanbul ignore next\n            case \"]\":\n                throw Error(\"TBD\");\n            default:\n                const nextChar = this.popChar();\n                return { type: \"Character\", value: cc(nextChar) };\n        }\n    }\n    characterClass() {\n        const set = [];\n        let complement = false;\n        this.consumeChar(\"[\");\n        if (this.peekChar(0) === \"^\") {\n            this.consumeChar(\"^\");\n            complement = true;\n        }\n        while (this.isClassAtom()) {\n            const from = this.classAtom();\n            const isFromSingleChar = from.type === \"Character\";\n            if (isCharacter(from) && this.isRangeDash()) {\n                this.consumeChar(\"-\");\n                const to = this.classAtom();\n                const isToSingleChar = to.type === \"Character\";\n                // a range can only be used when both sides are single characters\n                if (isCharacter(to)) {\n                    if (to.value < from.value) {\n                        throw Error(\"Range out of order in character class\");\n                    }\n                    set.push({ from: from.value, to: to.value });\n                }\n                else {\n                    // literal dash\n                    insertToSet(from.value, set);\n                    set.push(cc(\"-\"));\n                    insertToSet(to.value, set);\n                }\n            }\n            else {\n                insertToSet(from.value, set);\n            }\n        }\n        this.consumeChar(\"]\");\n        return { type: \"Set\", complement: complement, value: set };\n    }\n    classAtom() {\n        switch (this.peekChar()) {\n            // istanbul ignore next\n            case \"]\":\n            // istanbul ignore next\n            case \"\\n\":\n            // istanbul ignore next\n            case \"\\r\":\n            // istanbul ignore next\n            case \"\\u2028\":\n            // istanbul ignore next\n            case \"\\u2029\":\n                throw Error(\"TBD\");\n            case \"\\\\\":\n                return this.classEscape();\n            default:\n                return this.classPatternCharacterAtom();\n        }\n    }\n    classEscape() {\n        this.consumeChar(\"\\\\\");\n        switch (this.peekChar()) {\n            // Matches a backspace.\n            // (Not to be confused with \\b word boundary outside characterClass)\n            case \"b\":\n                this.consumeChar(\"b\");\n                return { type: \"Character\", value: cc(\"\\u0008\") };\n            case \"d\":\n            case \"D\":\n            case \"s\":\n            case \"S\":\n            case \"w\":\n            case \"W\":\n                return this.characterClassEscape();\n            case \"f\":\n            case \"n\":\n            case \"r\":\n            case \"t\":\n            case \"v\":\n                return this.controlEscapeAtom();\n            case \"c\":\n                return this.controlLetterEscapeAtom();\n            case \"0\":\n                return this.nulCharacterAtom();\n            case \"x\":\n                return this.hexEscapeSequenceAtom();\n            case \"u\":\n                return this.regExpUnicodeEscapeSequenceAtom();\n            default:\n                return this.identityEscapeAtom();\n        }\n    }\n    group() {\n        let capturing = true;\n        this.consumeChar(\"(\");\n        switch (this.peekChar(0)) {\n            case \"?\":\n                this.consumeChar(\"?\");\n                this.consumeChar(\":\");\n                capturing = false;\n                break;\n            default:\n                this.groupIdx++;\n                break;\n        }\n        const value = this.disjunction();\n        this.consumeChar(\")\");\n        const groupAst = {\n            type: \"Group\",\n            capturing: capturing,\n            value: value,\n        };\n        if (capturing) {\n            groupAst[\"idx\"] = this.groupIdx;\n        }\n        return groupAst;\n    }\n    positiveInteger() {\n        let number = this.popChar();\n        // istanbul ignore next - can't ever get here due to previous lookahead checks\n        // still implementing this error checking in case this ever changes.\n        if (decimalPatternNoZero.test(number) === false) {\n            throw Error(\"Expecting a positive integer\");\n        }\n        while (decimalPattern.test(this.peekChar(0))) {\n            number += this.popChar();\n        }\n        return parseInt(number, 10);\n    }\n    integerIncludingZero() {\n        let number = this.popChar();\n        if (decimalPattern.test(number) === false) {\n            throw Error(\"Expecting an integer\");\n        }\n        while (decimalPattern.test(this.peekChar(0))) {\n            number += this.popChar();\n        }\n        return parseInt(number, 10);\n    }\n    patternCharacter() {\n        const nextChar = this.popChar();\n        switch (nextChar) {\n            // istanbul ignore next\n            case \"\\n\":\n            // istanbul ignore next\n            case \"\\r\":\n            // istanbul ignore next\n            case \"\\u2028\":\n            // istanbul ignore next\n            case \"\\u2029\":\n            // istanbul ignore next\n            case \"^\":\n            // istanbul ignore next\n            case \"$\":\n            // istanbul ignore next\n            case \"\\\\\":\n            // istanbul ignore next\n            case \".\":\n            // istanbul ignore next\n            case \"*\":\n            // istanbul ignore next\n            case \"+\":\n            // istanbul ignore next\n            case \"?\":\n            // istanbul ignore next\n            case \"(\":\n            // istanbul ignore next\n            case \")\":\n            // istanbul ignore next\n            case \"[\":\n            // istanbul ignore next\n            case \"|\":\n                // istanbul ignore next\n                throw Error(\"TBD\");\n            default:\n                return { type: \"Character\", value: cc(nextChar) };\n        }\n    }\n    isRegExpFlag() {\n        switch (this.peekChar(0)) {\n            case \"g\":\n            case \"i\":\n            case \"m\":\n            case \"u\":\n            case \"y\":\n                return true;\n            default:\n                return false;\n        }\n    }\n    isRangeDash() {\n        return this.peekChar() === \"-\" && this.isClassAtom(1);\n    }\n    isDigit() {\n        return decimalPattern.test(this.peekChar(0));\n    }\n    isClassAtom(howMuch = 0) {\n        switch (this.peekChar(howMuch)) {\n            case \"]\":\n            case \"\\n\":\n            case \"\\r\":\n            case \"\\u2028\":\n            case \"\\u2029\":\n                return false;\n            default:\n                return true;\n        }\n    }\n    isTerm() {\n        return this.isAtom() || this.isAssertion();\n    }\n    isAtom() {\n        if (this.isPatternCharacter()) {\n            return true;\n        }\n        switch (this.peekChar(0)) {\n            case \".\":\n            case \"\\\\\": // atomEscape\n            case \"[\": // characterClass\n            // TODO: isAtom must be called before isAssertion - disambiguate\n            case \"(\": // group\n                return true;\n            default:\n                return false;\n        }\n    }\n    isAssertion() {\n        switch (this.peekChar(0)) {\n            case \"^\":\n            case \"$\":\n                return true;\n            // '\\b' or '\\B'\n            case \"\\\\\":\n                switch (this.peekChar(1)) {\n                    case \"b\":\n                    case \"B\":\n                        return true;\n                    default:\n                        return false;\n                }\n            // '(?=' or '(?!'\n            case \"(\":\n                return (this.peekChar(1) === \"?\" &&\n                    (this.peekChar(2) === \"=\" || this.peekChar(2) === \"!\"));\n            default:\n                return false;\n        }\n    }\n    isQuantifier() {\n        const prevState = this.saveState();\n        try {\n            return this.quantifier(true) !== undefined;\n        }\n        catch (e) {\n            return false;\n        }\n        finally {\n            this.restoreState(prevState);\n        }\n    }\n    isPatternCharacter() {\n        switch (this.peekChar()) {\n            case \"^\":\n            case \"$\":\n            case \"\\\\\":\n            case \".\":\n            case \"*\":\n            case \"+\":\n            case \"?\":\n            case \"(\":\n            case \")\":\n            case \"[\":\n            case \"|\":\n            case \"/\":\n            case \"\\n\":\n            case \"\\r\":\n            case \"\\u2028\":\n            case \"\\u2029\":\n                return false;\n            default:\n                return true;\n        }\n    }\n    parseHexDigits(howMany) {\n        let hexString = \"\";\n        for (let i = 0; i < howMany; i++) {\n            const hexChar = this.popChar();\n            if (hexDigitPattern.test(hexChar) === false) {\n                throw Error(\"Expecting a HexDecimal digits\");\n            }\n            hexString += hexChar;\n        }\n        const charCode = parseInt(hexString, 16);\n        return { type: \"Character\", value: charCode };\n    }\n    peekChar(howMuch = 0) {\n        return this.input[this.idx + howMuch];\n    }\n    popChar() {\n        const nextChar = this.peekChar(0);\n        this.consumeChar(undefined);\n        return nextChar;\n    }\n    consumeChar(char) {\n        if (char !== undefined && this.input[this.idx] !== char) {\n            throw Error(\"Expected: '\" +\n                char +\n                \"' but found: '\" +\n                this.input[this.idx] +\n                \"' at offset: \" +\n                this.idx);\n        }\n        if (this.idx >= this.input.length) {\n            throw Error(\"Unexpected end of input\");\n        }\n        this.idx++;\n    }\n    loc(begin) {\n        return { begin: begin, end: this.idx };\n    }\n}\n//# sourceMappingURL=regexp-parser.js.map","export class BaseRegExpVisitor {\n    visitChildren(node) {\n        for (const key in node) {\n            const child = node[key];\n            /* istanbul ignore else */\n            if (node.hasOwnProperty(key)) {\n                if (child.type !== undefined) {\n                    this.visit(child);\n                }\n                else if (Array.isArray(child)) {\n                    child.forEach((subChild) => {\n                        this.visit(subChild);\n                    }, this);\n                }\n            }\n        }\n    }\n    visit(node) {\n        switch (node.type) {\n            case \"Pattern\":\n                this.visitPattern(node);\n                break;\n            case \"Flags\":\n                this.visitFlags(node);\n                break;\n            case \"Disjunction\":\n                this.visitDisjunction(node);\n                break;\n            case \"Alternative\":\n                this.visitAlternative(node);\n                break;\n            case \"StartAnchor\":\n                this.visitStartAnchor(node);\n                break;\n            case \"EndAnchor\":\n                this.visitEndAnchor(node);\n                break;\n            case \"WordBoundary\":\n                this.visitWordBoundary(node);\n                break;\n            case \"NonWordBoundary\":\n                this.visitNonWordBoundary(node);\n                break;\n            case \"Lookahead\":\n                this.visitLookahead(node);\n                break;\n            case \"NegativeLookahead\":\n                this.visitNegativeLookahead(node);\n                break;\n            case \"Character\":\n                this.visitCharacter(node);\n                break;\n            case \"Set\":\n                this.visitSet(node);\n                break;\n            case \"Group\":\n                this.visitGroup(node);\n                break;\n            case \"GroupBackReference\":\n                this.visitGroupBackReference(node);\n                break;\n            case \"Quantifier\":\n                this.visitQuantifier(node);\n                break;\n        }\n        this.visitChildren(node);\n    }\n    visitPattern(node) { }\n    visitFlags(node) { }\n    visitDisjunction(node) { }\n    visitAlternative(node) { }\n    // Assertion\n    visitStartAnchor(node) { }\n    visitEndAnchor(node) { }\n    visitWordBoundary(node) { }\n    visitNonWordBoundary(node) { }\n    visitLookahead(node) { }\n    visitNegativeLookahead(node) { }\n    // atoms\n    visitCharacter(node) { }\n    visitSet(node) { }\n    visitGroup(node) { }\n    visitGroupBackReference(node) { }\n    visitQuantifier(node) { }\n}\n//# sourceMappingURL=base-regexp-visitor.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Emitter = exports.Event = void 0;\nconst ral_1 = require(\"./ral\");\nvar Event;\n(function (Event) {\n    const _disposable = { dispose() { } };\n    Event.None = function () { return _disposable; };\n})(Event || (exports.Event = Event = {}));\nclass CallbackList {\n    add(callback, context = null, bucket) {\n        if (!this._callbacks) {\n            this._callbacks = [];\n            this._contexts = [];\n        }\n        this._callbacks.push(callback);\n        this._contexts.push(context);\n        if (Array.isArray(bucket)) {\n            bucket.push({ dispose: () => this.remove(callback, context) });\n        }\n    }\n    remove(callback, context = null) {\n        if (!this._callbacks) {\n            return;\n        }\n        let foundCallbackWithDifferentContext = false;\n        for (let i = 0, len = this._callbacks.length; i < len; i++) {\n            if (this._callbacks[i] === callback) {\n                if (this._contexts[i] === context) {\n                    // callback & context match => remove it\n                    this._callbacks.splice(i, 1);\n                    this._contexts.splice(i, 1);\n                    return;\n                }\n                else {\n                    foundCallbackWithDifferentContext = true;\n                }\n            }\n        }\n        if (foundCallbackWithDifferentContext) {\n            throw new Error('When adding a listener with a context, you should remove it with the same context');\n        }\n    }\n    invoke(...args) {\n        if (!this._callbacks) {\n            return [];\n        }\n        const ret = [], callbacks = this._callbacks.slice(0), contexts = this._contexts.slice(0);\n        for (let i = 0, len = callbacks.length; i < len; i++) {\n            try {\n                ret.push(callbacks[i].apply(contexts[i], args));\n            }\n            catch (e) {\n                // eslint-disable-next-line no-console\n                (0, ral_1.default)().console.error(e);\n            }\n        }\n        return ret;\n    }\n    isEmpty() {\n        return !this._callbacks || this._callbacks.length === 0;\n    }\n    dispose() {\n        this._callbacks = undefined;\n        this._contexts = undefined;\n    }\n}\nclass Emitter {\n    constructor(_options) {\n        this._options = _options;\n    }\n    /**\n     * For the public to allow to subscribe\n     * to events from this Emitter\n     */\n    get event() {\n        if (!this._event) {\n            this._event = (listener, thisArgs, disposables) => {\n                if (!this._callbacks) {\n                    this._callbacks = new CallbackList();\n                }\n                if (this._options && this._options.onFirstListenerAdd && this._callbacks.isEmpty()) {\n                    this._options.onFirstListenerAdd(this);\n                }\n                this._callbacks.add(listener, thisArgs);\n                const result = {\n                    dispose: () => {\n                        if (!this._callbacks) {\n                            // disposable is disposed after emitter is disposed.\n                            return;\n                        }\n                        this._callbacks.remove(listener, thisArgs);\n                        result.dispose = Emitter._noop;\n                        if (this._options && this._options.onLastListenerRemove && this._callbacks.isEmpty()) {\n                            this._options.onLastListenerRemove(this);\n                        }\n                    }\n                };\n                if (Array.isArray(disposables)) {\n                    disposables.push(result);\n                }\n                return result;\n            };\n        }\n        return this._event;\n    }\n    /**\n     * To be kept private to fire an event to\n     * subscribers\n     */\n    fire(event) {\n        if (this._callbacks) {\n            this._callbacks.invoke.call(this._callbacks, event);\n        }\n    }\n    dispose() {\n        if (this._callbacks) {\n            this._callbacks.dispose();\n            this._callbacks = undefined;\n        }\n    }\n}\nexports.Emitter = Emitter;\nEmitter._noop = function () { };\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { RegExpParser, BaseRegExpVisitor } from '@chevrotain/regexp-to-ast';\nexport const NEWLINE_REGEXP = /\\r?\\n/gm;\nconst regexpParser = new RegExpParser();\n/**\n * This class is in charge of heuristically identifying start/end tokens of terminals.\n *\n * The way this works is by doing the following:\n * 1. Traverse the regular expression in the \"start state\"\n * 2. Add any encountered sets/single characters to the \"start regexp\"\n * 3. Once we encounter any variable-length content (i.e. with quantifiers such as +/?/*), we enter the \"end state\"\n * 4. In the end state, any sets/single characters are added to an \"end stack\".\n * 5. If we re-encounter any variable-length content we reset the end stack\n * 6. We continue visiting the regex until the end, reseting the end stack and rebuilding it as necessary\n *\n * After traversing a regular expression the `startRegexp/endRegexp` properties allow access to the stored start/end of the terminal\n */\nclass TerminalRegExpVisitor extends BaseRegExpVisitor {\n    constructor() {\n        super(...arguments);\n        this.isStarting = true;\n        this.endRegexpStack = [];\n        this.multiline = false;\n    }\n    get endRegex() {\n        return this.endRegexpStack.join('');\n    }\n    reset(regex) {\n        this.multiline = false;\n        this.regex = regex;\n        this.startRegexp = '';\n        this.isStarting = true;\n        this.endRegexpStack = [];\n    }\n    visitGroup(node) {\n        if (node.quantifier) {\n            this.isStarting = false;\n            this.endRegexpStack = [];\n        }\n    }\n    visitCharacter(node) {\n        const char = String.fromCharCode(node.value);\n        if (!this.multiline && char === '\\n') {\n            this.multiline = true;\n        }\n        if (node.quantifier) {\n            this.isStarting = false;\n            this.endRegexpStack = [];\n        }\n        else {\n            const escapedChar = escapeRegExp(char);\n            this.endRegexpStack.push(escapedChar);\n            if (this.isStarting) {\n                this.startRegexp += escapedChar;\n            }\n        }\n    }\n    visitSet(node) {\n        if (!this.multiline) {\n            const set = this.regex.substring(node.loc.begin, node.loc.end);\n            const regex = new RegExp(set);\n            this.multiline = Boolean('\\n'.match(regex));\n        }\n        if (node.quantifier) {\n            this.isStarting = false;\n            this.endRegexpStack = [];\n        }\n        else {\n            const set = this.regex.substring(node.loc.begin, node.loc.end);\n            this.endRegexpStack.push(set);\n            if (this.isStarting) {\n                this.startRegexp += set;\n            }\n        }\n    }\n    visitChildren(node) {\n        if (node.type === 'Group') {\n            // Ignore children of groups with quantifier (+/*/?)\n            // These groups are unrelated to start/end tokens of terminals\n            const group = node;\n            if (group.quantifier) {\n                return;\n            }\n        }\n        super.visitChildren(node);\n    }\n}\nconst visitor = new TerminalRegExpVisitor();\nexport function getTerminalParts(regexp) {\n    try {\n        if (typeof regexp !== 'string') {\n            regexp = regexp.source;\n        }\n        regexp = `/${regexp}/`;\n        const pattern = regexpParser.pattern(regexp);\n        const parts = [];\n        for (const alternative of pattern.value.value) {\n            visitor.reset(regexp);\n            visitor.visit(alternative);\n            parts.push({\n                start: visitor.startRegexp,\n                end: visitor.endRegex\n            });\n        }\n        return parts;\n    }\n    catch (_a) {\n        return [];\n    }\n}\nexport function isMultilineComment(regexp) {\n    try {\n        if (typeof regexp === 'string') {\n            regexp = new RegExp(regexp);\n        }\n        regexp = regexp.toString();\n        visitor.reset(regexp);\n        // Parsing the pattern might fail (since it's user code)\n        visitor.visit(regexpParser.pattern(regexp));\n        return visitor.multiline;\n    }\n    catch (_a) {\n        return false;\n    }\n}\n/**\n * A set of all characters that are considered whitespace by the '\\s' RegExp character class.\n * Taken from [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_expressions/Character_classes).\n */\nexport const whitespaceCharacters = ('\\f\\n\\r\\t\\v\\u0020\\u00a0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007' +\n    '\\u2008\\u2009\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff').split('');\nexport function isWhitespace(value) {\n    const regexp = typeof value === 'string' ? new RegExp(value) : value;\n    return whitespaceCharacters.some((ws) => regexp.test(ws));\n}\nexport function escapeRegExp(value) {\n    return value.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\nexport function getCaseInsensitivePattern(keyword) {\n    return Array.prototype.map.call(keyword, letter => /\\w/.test(letter) ? `[${letter.toLowerCase()}${letter.toUpperCase()}]` : escapeRegExp(letter)).join('');\n}\n/**\n * Determines whether the given input has a partial match with the specified regex.\n * @param regex The regex to partially match against\n * @param input The input string\n * @returns Whether any match exists.\n */\nexport function partialMatches(regex, input) {\n    const partial = partialRegExp(regex);\n    const match = input.match(partial);\n    return !!match && match[0].length > 0;\n}\n/**\n * Builds a partial regex from the input regex. A partial regex is able to match incomplete input strings. E.g.\n * a partial regex constructed from `/ab/` is able to match the string `a` without needing a following `b` character. However it won't match `b` alone.\n * @param regex The input regex to be converted.\n * @returns A partial regex constructed from the input regex.\n */\nexport function partialRegExp(regex) {\n    if (typeof regex === 'string') {\n        regex = new RegExp(regex);\n    }\n    const re = regex, source = regex.source;\n    let i = 0;\n    function process() {\n        let result = '', tmp;\n        function appendRaw(nbChars) {\n            result += source.substr(i, nbChars);\n            i += nbChars;\n        }\n        function appendOptional(nbChars) {\n            result += '(?:' + source.substr(i, nbChars) + '|$)';\n            i += nbChars;\n        }\n        while (i < source.length) {\n            switch (source[i]) {\n                case '\\\\':\n                    switch (source[i + 1]) {\n                        case 'c':\n                            appendOptional(3);\n                            break;\n                        case 'x':\n                            appendOptional(4);\n                            break;\n                        case 'u':\n                            if (re.unicode) {\n                                if (source[i + 2] === '{') {\n                                    appendOptional(source.indexOf('}', i) - i + 1);\n                                }\n                                else {\n                                    appendOptional(6);\n                                }\n                            }\n                            else {\n                                appendOptional(2);\n                            }\n                            break;\n                        case 'p':\n                        case 'P':\n                            if (re.unicode) {\n                                appendOptional(source.indexOf('}', i) - i + 1);\n                            }\n                            else {\n                                appendOptional(2);\n                            }\n                            break;\n                        case 'k':\n                            appendOptional(source.indexOf('>', i) - i + 1);\n                            break;\n                        default:\n                            appendOptional(2);\n                            break;\n                    }\n                    break;\n                case '[':\n                    tmp = /\\[(?:\\\\.|.)*?\\]/g;\n                    tmp.lastIndex = i;\n                    tmp = tmp.exec(source) || [];\n                    appendOptional(tmp[0].length);\n                    break;\n                case '|':\n                case '^':\n                case '$':\n                case '*':\n                case '+':\n                case '?':\n                    appendRaw(1);\n                    break;\n                case '{':\n                    tmp = /\\{\\d+,?\\d*\\}/g;\n                    tmp.lastIndex = i;\n                    tmp = tmp.exec(source);\n                    if (tmp) {\n                        appendRaw(tmp[0].length);\n                    }\n                    else {\n                        appendOptional(1);\n                    }\n                    break;\n                case '(':\n                    if (source[i + 1] === '?') {\n                        switch (source[i + 2]) {\n                            case ':':\n                                result += '(?:';\n                                i += 3;\n                                result += process() + '|$)';\n                                break;\n                            case '=':\n                                result += '(?=';\n                                i += 3;\n                                result += process() + ')';\n                                break;\n                            case '!':\n                                tmp = i;\n                                i += 3;\n                                process();\n                                result += source.substr(tmp, i - tmp);\n                                break;\n                            case '<':\n                                switch (source[i + 3]) {\n                                    case '=':\n                                    case '!':\n                                        tmp = i;\n                                        i += 4;\n                                        process();\n                                        result += source.substr(tmp, i - tmp);\n                                        break;\n                                    default:\n                                        appendRaw(source.indexOf('>', i) - i + 1);\n                                        result += process() + '|$)';\n                                        break;\n                                }\n                                break;\n                        }\n                    }\n                    else {\n                        appendRaw(1);\n                        result += process() + '|$)';\n                    }\n                    break;\n                case ')':\n                    ++i;\n                    return result;\n                default:\n                    appendOptional(1);\n                    break;\n            }\n        }\n        return result;\n    }\n    return new RegExp(process(), regex.flags);\n}\n//# sourceMappingURL=regexp-utils.js.map","import {\n  AbstractMermaidTokenBuilder,\n  CommonValueConverter,\n  MermaidGeneratedSharedModule,\n  RadarGeneratedModule,\n  __name\n} from \"./chunk-4KMFLZZN.mjs\";\n\n// src/language/radar/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/radar/tokenBuilder.ts\nvar RadarTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"RadarTokenBuilder\");\n  }\n  constructor() {\n    super([\"radar-beta\"]);\n  }\n};\n\n// src/language/radar/module.ts\nvar RadarModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new RadarTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createRadarServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Radar = inject(\n    createDefaultCoreModule({ shared }),\n    RadarGeneratedModule,\n    RadarModule\n  );\n  shared.ServiceRegistry.register(Radar);\n  return { shared, Radar };\n}\n__name(createRadarServices, \"createRadarServices\");\n\nexport {\n  RadarModule,\n  createRadarServices\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  ArchitectureGeneratedModule,\n  MermaidGeneratedSharedModule,\n  __name\n} from \"./chunk-4KMFLZZN.mjs\";\n\n// src/language/architecture/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/architecture/tokenBuilder.ts\nvar ArchitectureTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"ArchitectureTokenBuilder\");\n  }\n  constructor() {\n    super([\"architecture\"]);\n  }\n};\n\n// src/language/architecture/valueConverter.ts\nvar ArchitectureValueConverter = class extends AbstractMermaidValueConverter {\n  static {\n    __name(this, \"ArchitectureValueConverter\");\n  }\n  runCustomConverter(rule, input, _cstNode) {\n    if (rule.name === \"ARCH_ICON\") {\n      return input.replace(/[()]/g, \"\").trim();\n    } else if (rule.name === \"ARCH_TEXT_ICON\") {\n      return input.replace(/[\"()]/g, \"\");\n    } else if (rule.name === \"ARCH_TITLE\") {\n      return input.replace(/[[\\]]/g, \"\").trim();\n    }\n    return void 0;\n  }\n};\n\n// src/language/architecture/module.ts\nvar ArchitectureModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new ArchitectureTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new ArchitectureValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createArchitectureServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Architecture = inject(\n    createDefaultCoreModule({ shared }),\n    ArchitectureGeneratedModule,\n    ArchitectureModule\n  );\n  shared.ServiceRegistry.register(Architecture);\n  return { shared, Architecture };\n}\n__name(createArchitectureServices, \"createArchitectureServices\");\n\nexport {\n  ArchitectureModule,\n  createArchitectureServices\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  MermaidGeneratedSharedModule,\n  TreemapGeneratedModule,\n  __name\n} from \"./chunk-4KMFLZZN.mjs\";\n\n// src/language/treemap/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/treemap/tokenBuilder.ts\nvar TreemapTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"TreemapTokenBuilder\");\n  }\n  constructor() {\n    super([\"treemap\"]);\n  }\n};\n\n// src/language/treemap/valueConverter.ts\nvar classDefRegex = /classDef\\s+([A-Z_a-z]\\w+)(?:\\s+([^\\n\\r;]*))?;?/;\nvar TreemapValueConverter = class extends AbstractMermaidValueConverter {\n  static {\n    __name(this, \"TreemapValueConverter\");\n  }\n  runCustomConverter(rule, input, _cstNode) {\n    if (rule.name === \"NUMBER2\") {\n      return parseFloat(input.replace(/,/g, \"\"));\n    } else if (rule.name === \"SEPARATOR\") {\n      return input.substring(1, input.length - 1);\n    } else if (rule.name === \"STRING2\") {\n      return input.substring(1, input.length - 1);\n    } else if (rule.name === \"INDENTATION\") {\n      return input.length;\n    } else if (rule.name === \"ClassDef\") {\n      if (typeof input !== \"string\") {\n        return input;\n      }\n      const match = classDefRegex.exec(input);\n      if (match) {\n        return {\n          $type: \"ClassDefStatement\",\n          className: match[1],\n          styleText: match[2] || void 0\n        };\n      }\n    }\n    return void 0;\n  }\n};\n\n// src/language/treemap/treemap-validator.ts\nfunction registerValidationChecks(services) {\n  const validator = services.validation.TreemapValidator;\n  const registry = services.validation.ValidationRegistry;\n  if (registry) {\n    const checks = {\n      Treemap: validator.checkSingleRoot.bind(validator)\n      // Remove unused validation for TreemapRow\n    };\n    registry.register(checks, validator);\n  }\n}\n__name(registerValidationChecks, \"registerValidationChecks\");\nvar TreemapValidator = class {\n  static {\n    __name(this, \"TreemapValidator\");\n  }\n  /**\n   * Validates that a treemap has only one root node.\n   * A root node is defined as a node that has no indentation.\n   */\n  checkSingleRoot(doc, accept) {\n    let rootNodeIndentation;\n    for (const row of doc.TreemapRows) {\n      if (!row.item) {\n        continue;\n      }\n      if (rootNodeIndentation === void 0 && // Check if this is a root node (no indentation)\n      row.indent === void 0) {\n        rootNodeIndentation = 0;\n      } else if (row.indent === void 0) {\n        accept(\"error\", \"Multiple root nodes are not allowed in a treemap.\", {\n          node: row,\n          property: \"item\"\n        });\n      } else if (rootNodeIndentation !== void 0 && rootNodeIndentation >= parseInt(row.indent, 10)) {\n        accept(\"error\", \"Multiple root nodes are not allowed in a treemap.\", {\n          node: row,\n          property: \"item\"\n        });\n      }\n    }\n  }\n};\n\n// src/language/treemap/module.ts\nvar TreemapModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new TreemapTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new TreemapValueConverter(), \"ValueConverter\")\n  },\n  validation: {\n    TreemapValidator: /* @__PURE__ */ __name(() => new TreemapValidator(), \"TreemapValidator\")\n  }\n};\nfunction createTreemapServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Treemap = inject(\n    createDefaultCoreModule({ shared }),\n    TreemapGeneratedModule,\n    TreemapModule\n  );\n  shared.ServiceRegistry.register(Treemap);\n  registerValidationChecks(Treemap);\n  return { shared, Treemap };\n}\n__name(createTreemapServices, \"createTreemapServices\");\n\nexport {\n  TreemapModule,\n  createTreemapServices\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  CommonValueConverter,\n  GitGraphGeneratedModule,\n  MermaidGeneratedSharedModule,\n  __name\n} from \"./chunk-4KMFLZZN.mjs\";\n\n// src/language/gitGraph/module.ts\nimport {\n  inject,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  EmptyFileSystem\n} from \"langium\";\n\n// src/language/gitGraph/tokenBuilder.ts\nvar GitGraphTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"GitGraphTokenBuilder\");\n  }\n  constructor() {\n    super([\"gitGraph\"]);\n  }\n};\n\n// src/language/gitGraph/module.ts\nvar GitGraphModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new GitGraphTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createGitGraphServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const GitGraph = inject(\n    createDefaultCoreModule({ shared }),\n    GitGraphGeneratedModule,\n    GitGraphModule\n  );\n  shared.ServiceRegistry.register(GitGraph);\n  return { shared, GitGraph };\n}\n__name(createGitGraphServices, \"createGitGraphServices\");\n\nexport {\n  GitGraphModule,\n  createGitGraphServices\n};\n","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class EmptyFileSystemProvider {\n    readFile() {\n        throw new Error('No file system is available.');\n    }\n    async readDirectory() {\n        return [];\n    }\n}\nexport const EmptyFileSystem = {\n    fileSystemProvider: () => new EmptyFileSystemProvider()\n};\n//# sourceMappingURL=file-system-provider.js.map","import {\n  __name\n} from \"./chunk-3XYRH5AP.mjs\";\n\n// src/rendering-util/insertElementsForSize.js\nimport { select } from \"d3\";\nvar getDiagramElement = /* @__PURE__ */ __name((id, securityLevel) => {\n  let sandboxElement;\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = select(\"#i\" + id);\n  }\n  const root = securityLevel === \"sandbox\" ? select(sandboxElement.nodes()[0].contentDocument.body) : select(\"body\");\n  const svg = root.select(`[id=\"${id}\"]`);\n  return svg;\n}, \"getDiagramElement\");\n\nexport {\n  getDiagramElement\n};\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isCrossReference, isRuleCall } from '../languages/generated/ast.js';\nimport { getCrossReferenceTerminal, getRuleType } from '../utils/grammar-utils.js';\nexport class DefaultValueConverter {\n    convert(input, cstNode) {\n        let feature = cstNode.grammarSource;\n        if (isCrossReference(feature)) {\n            feature = getCrossReferenceTerminal(feature);\n        }\n        if (isRuleCall(feature)) {\n            const rule = feature.rule.ref;\n            if (!rule) {\n                throw new Error('This cst node was not parsed by a rule.');\n            }\n            return this.runConverter(rule, input, cstNode);\n        }\n        return input;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    runConverter(rule, input, cstNode) {\n        var _a;\n        switch (rule.name.toUpperCase()) {\n            case 'INT': return ValueConverter.convertInt(input);\n            case 'STRING': return ValueConverter.convertString(input);\n            case 'ID': return ValueConverter.convertID(input);\n        }\n        switch ((_a = getRuleType(rule)) === null || _a === void 0 ? void 0 : _a.toLowerCase()) {\n            case 'number': return ValueConverter.convertNumber(input);\n            case 'boolean': return ValueConverter.convertBoolean(input);\n            case 'bigint': return ValueConverter.convertBigint(input);\n            case 'date': return ValueConverter.convertDate(input);\n            default: return input;\n        }\n    }\n}\nexport var ValueConverter;\n(function (ValueConverter) {\n    function convertString(input) {\n        let result = '';\n        for (let i = 1; i < input.length - 1; i++) {\n            const c = input.charAt(i);\n            if (c === '\\\\') {\n                const c1 = input.charAt(++i);\n                result += convertEscapeCharacter(c1);\n            }\n            else {\n                result += c;\n            }\n        }\n        return result;\n    }\n    ValueConverter.convertString = convertString;\n    function convertEscapeCharacter(char) {\n        switch (char) {\n            case 'b': return '\\b';\n            case 'f': return '\\f';\n            case 'n': return '\\n';\n            case 'r': return '\\r';\n            case 't': return '\\t';\n            case 'v': return '\\v';\n            case '0': return '\\0';\n            default: return char;\n        }\n    }\n    function convertID(input) {\n        if (input.charAt(0) === '^') {\n            return input.substring(1);\n        }\n        else {\n            return input;\n        }\n    }\n    ValueConverter.convertID = convertID;\n    function convertInt(input) {\n        return parseInt(input);\n    }\n    ValueConverter.convertInt = convertInt;\n    function convertBigint(input) {\n        return BigInt(input);\n    }\n    ValueConverter.convertBigint = convertBigint;\n    function convertDate(input) {\n        return new Date(input);\n    }\n    ValueConverter.convertDate = convertDate;\n    function convertNumber(input) {\n        return Number(input);\n    }\n    ValueConverter.convertNumber = convertNumber;\n    function convertBoolean(input) {\n        return input.toLowerCase() === 'true';\n    }\n    ValueConverter.convertBoolean = convertBoolean;\n})(ValueConverter || (ValueConverter = {}));\n//# sourceMappingURL=value-converter.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isCompositeCstNode, isLeafCstNode, isRootCstNode } from '../syntax-tree.js';\nimport { TreeStreamImpl } from './stream.js';\n/**\n * Create a stream of all CST nodes that are directly and indirectly contained in the given root node,\n * including the root node itself.\n */\nexport function streamCst(node) {\n    return new TreeStreamImpl(node, element => {\n        if (isCompositeCstNode(element)) {\n            return element.content;\n        }\n        else {\n            return [];\n        }\n    }, { includeRoot: true });\n}\n/**\n * Create a stream of all leaf nodes that are directly and indirectly contained in the given root node.\n */\nexport function flattenCst(node) {\n    return streamCst(node).filter(isLeafCstNode);\n}\n/**\n * Determines whether the specified cst node is a child of the specified parent node.\n */\nexport function isChildNode(child, parent) {\n    while (child.container) {\n        child = child.container;\n        if (child === parent) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function tokenToRange(token) {\n    // Chevrotain uses 1-based indices everywhere\n    // So we subtract 1 from every value to align with the LSP\n    return {\n        start: {\n            character: token.startColumn - 1,\n            line: token.startLine - 1\n        },\n        end: {\n            character: token.endColumn, // endColumn uses the correct index\n            line: token.endLine - 1\n        }\n    };\n}\nexport function toDocumentSegment(node) {\n    if (!node) {\n        return undefined;\n    }\n    const { offset, end, range } = node;\n    return {\n        range,\n        offset,\n        end,\n        length: end - offset\n    };\n}\nexport var RangeComparison;\n(function (RangeComparison) {\n    RangeComparison[RangeComparison[\"Before\"] = 0] = \"Before\";\n    RangeComparison[RangeComparison[\"After\"] = 1] = \"After\";\n    RangeComparison[RangeComparison[\"OverlapFront\"] = 2] = \"OverlapFront\";\n    RangeComparison[RangeComparison[\"OverlapBack\"] = 3] = \"OverlapBack\";\n    RangeComparison[RangeComparison[\"Inside\"] = 4] = \"Inside\";\n    RangeComparison[RangeComparison[\"Outside\"] = 5] = \"Outside\";\n})(RangeComparison || (RangeComparison = {}));\nexport function compareRange(range, to) {\n    if (range.end.line < to.start.line || (range.end.line === to.start.line && range.end.character <= to.start.character)) {\n        return RangeComparison.Before;\n    }\n    else if (range.start.line > to.end.line || (range.start.line === to.end.line && range.start.character >= to.end.character)) {\n        return RangeComparison.After;\n    }\n    const startInside = range.start.line > to.start.line || (range.start.line === to.start.line && range.start.character >= to.start.character);\n    const endInside = range.end.line < to.end.line || (range.end.line === to.end.line && range.end.character <= to.end.character);\n    if (startInside && endInside) {\n        return RangeComparison.Inside;\n    }\n    else if (startInside) {\n        return RangeComparison.OverlapBack;\n    }\n    else if (endInside) {\n        return RangeComparison.OverlapFront;\n    }\n    else {\n        return RangeComparison.Outside;\n    }\n}\nexport function inRange(range, to) {\n    const comparison = compareRange(range, to);\n    return comparison > RangeComparison.After;\n}\n// The \\p{L} regex matches any unicode letter character, i.e. characters from non-english alphabets\n// Together with \\w it matches any kind of character which can commonly appear in IDs\nexport const DefaultNameRegexp = /^[\\w\\p{L}]$/u;\n/**\n * Performs `findLeafNodeAtOffset` with a minor difference: When encountering a character that matches the `nameRegexp` argument,\n * it will instead return the leaf node at the `offset - 1` position.\n *\n * For LSP services, users expect that the declaration of an element is available if the cursor is directly after the element.\n */\nexport function findDeclarationNodeAtOffset(cstNode, offset, nameRegexp = DefaultNameRegexp) {\n    if (cstNode) {\n        if (offset > 0) {\n            const localOffset = offset - cstNode.offset;\n            const textAtOffset = cstNode.text.charAt(localOffset);\n            if (!nameRegexp.test(textAtOffset)) {\n                offset--;\n            }\n        }\n        return findLeafNodeAtOffset(cstNode, offset);\n    }\n    return undefined;\n}\nexport function findCommentNode(cstNode, commentNames) {\n    if (cstNode) {\n        const previous = getPreviousNode(cstNode, true);\n        if (previous && isCommentNode(previous, commentNames)) {\n            return previous;\n        }\n        if (isRootCstNode(cstNode)) {\n            // Go from the first non-hidden node through all nodes in reverse order\n            // We do this to find the comment node which directly precedes the root node\n            const endIndex = cstNode.content.findIndex(e => !e.hidden);\n            for (let i = endIndex - 1; i >= 0; i--) {\n                const child = cstNode.content[i];\n                if (isCommentNode(child, commentNames)) {\n                    return child;\n                }\n            }\n        }\n    }\n    return undefined;\n}\nexport function isCommentNode(cstNode, commentNames) {\n    return isLeafCstNode(cstNode) && commentNames.includes(cstNode.tokenType.name);\n}\n/**\n * Finds the leaf CST node at the specified 0-based string offset.\n * Note that the given offset will be within the range of the returned leaf node.\n *\n * If the offset does not point to a CST node (but just white space), this method will return `undefined`.\n *\n * @param node The CST node to search through.\n * @param offset The specified offset.\n * @returns The CST node at the specified offset.\n */\nexport function findLeafNodeAtOffset(node, offset) {\n    if (isLeafCstNode(node)) {\n        return node;\n    }\n    else if (isCompositeCstNode(node)) {\n        const searchResult = binarySearch(node, offset, false);\n        if (searchResult) {\n            return findLeafNodeAtOffset(searchResult, offset);\n        }\n    }\n    return undefined;\n}\n/**\n * Finds the leaf CST node at the specified 0-based string offset.\n * If no CST node exists at the specified position, it will return the leaf node before it.\n *\n * If there is no leaf node before the specified offset, this method will return `undefined`.\n *\n * @param node The CST node to search through.\n * @param offset The specified offset.\n * @returns The CST node closest to the specified offset.\n */\nexport function findLeafNodeBeforeOffset(node, offset) {\n    if (isLeafCstNode(node)) {\n        return node;\n    }\n    else if (isCompositeCstNode(node)) {\n        const searchResult = binarySearch(node, offset, true);\n        if (searchResult) {\n            return findLeafNodeBeforeOffset(searchResult, offset);\n        }\n    }\n    return undefined;\n}\nfunction binarySearch(node, offset, closest) {\n    let left = 0;\n    let right = node.content.length - 1;\n    let closestNode = undefined;\n    while (left <= right) {\n        const middle = Math.floor((left + right) / 2);\n        const middleNode = node.content[middle];\n        if (middleNode.offset <= offset && middleNode.end > offset) {\n            // Found an exact match\n            return middleNode;\n        }\n        if (middleNode.end <= offset) {\n            // Update the closest node (less than offset) and move to the right half\n            closestNode = closest ? middleNode : undefined;\n            left = middle + 1;\n        }\n        else {\n            // Move to the left half\n            right = middle - 1;\n        }\n    }\n    return closestNode;\n}\nexport function getPreviousNode(node, hidden = true) {\n    while (node.container) {\n        const parent = node.container;\n        let index = parent.content.indexOf(node);\n        while (index > 0) {\n            index--;\n            const previous = parent.content[index];\n            if (hidden || !previous.hidden) {\n                return previous;\n            }\n        }\n        node = parent;\n    }\n    return undefined;\n}\nexport function getNextNode(node, hidden = true) {\n    while (node.container) {\n        const parent = node.container;\n        let index = parent.content.indexOf(node);\n        const last = parent.content.length - 1;\n        while (index < last) {\n            index++;\n            const next = parent.content[index];\n            if (hidden || !next.hidden) {\n                return next;\n            }\n        }\n        node = parent;\n    }\n    return undefined;\n}\nexport function getStartlineNode(node) {\n    if (node.range.start.character === 0) {\n        return node;\n    }\n    const line = node.range.start.line;\n    let last = node;\n    let index;\n    while (node.container) {\n        const parent = node.container;\n        const selfIndex = index !== null && index !== void 0 ? index : parent.content.indexOf(node);\n        if (selfIndex === 0) {\n            node = parent;\n            index = undefined;\n        }\n        else {\n            index = selfIndex - 1;\n            node = parent.content[index];\n        }\n        if (node.range.start.line !== line) {\n            break;\n        }\n        last = node;\n    }\n    return last;\n}\nexport function getInteriorNodes(start, end) {\n    const commonParent = getCommonParent(start, end);\n    if (!commonParent) {\n        return [];\n    }\n    return commonParent.parent.content.slice(commonParent.a + 1, commonParent.b);\n}\nfunction getCommonParent(a, b) {\n    const aParents = getParentChain(a);\n    const bParents = getParentChain(b);\n    let current;\n    for (let i = 0; i < aParents.length && i < bParents.length; i++) {\n        const aParent = aParents[i];\n        const bParent = bParents[i];\n        if (aParent.parent === bParent.parent) {\n            current = {\n                parent: aParent.parent,\n                a: aParent.index,\n                b: bParent.index\n            };\n        }\n        else {\n            break;\n        }\n    }\n    return current;\n}\nfunction getParentChain(node) {\n    const chain = [];\n    while (node.container) {\n        const parent = node.container;\n        const index = parent.content.indexOf(node);\n        chain.push({\n            parent,\n            index\n        });\n        node = parent;\n    }\n    return chain.reverse();\n}\n//# sourceMappingURL=cst-utils.js.map","var LIB;(()=>{\"use strict\";var t={470:t=>{function e(t){if(\"string\"!=typeof t)throw new TypeError(\"Path must be a string. Received \"+JSON.stringify(t))}function r(t,e){for(var r,n=\"\",i=0,o=-1,s=0,h=0;h<=t.length;++h){if(h<t.length)r=t.charCodeAt(h);else{if(47===r)break;r=47}if(47===r){if(o===h-1||1===s);else if(o!==h-1&&2===s){if(n.length<2||2!==i||46!==n.charCodeAt(n.length-1)||46!==n.charCodeAt(n.length-2))if(n.length>2){var a=n.lastIndexOf(\"/\");if(a!==n.length-1){-1===a?(n=\"\",i=0):i=(n=n.slice(0,a)).length-1-n.lastIndexOf(\"/\"),o=h,s=0;continue}}else if(2===n.length||1===n.length){n=\"\",i=0,o=h,s=0;continue}e&&(n.length>0?n+=\"/..\":n=\"..\",i=2)}else n.length>0?n+=\"/\"+t.slice(o+1,h):n=t.slice(o+1,h),i=h-o-1;o=h,s=0}else 46===r&&-1!==s?++s:s=-1}return n}var n={resolve:function(){for(var t,n=\"\",i=!1,o=arguments.length-1;o>=-1&&!i;o--){var s;o>=0?s=arguments[o]:(void 0===t&&(t=process.cwd()),s=t),e(s),0!==s.length&&(n=s+\"/\"+n,i=47===s.charCodeAt(0))}return n=r(n,!i),i?n.length>0?\"/\"+n:\"/\":n.length>0?n:\".\"},normalize:function(t){if(e(t),0===t.length)return\".\";var n=47===t.charCodeAt(0),i=47===t.charCodeAt(t.length-1);return 0!==(t=r(t,!n)).length||n||(t=\".\"),t.length>0&&i&&(t+=\"/\"),n?\"/\"+t:t},isAbsolute:function(t){return e(t),t.length>0&&47===t.charCodeAt(0)},join:function(){if(0===arguments.length)return\".\";for(var t,r=0;r<arguments.length;++r){var i=arguments[r];e(i),i.length>0&&(void 0===t?t=i:t+=\"/\"+i)}return void 0===t?\".\":n.normalize(t)},relative:function(t,r){if(e(t),e(r),t===r)return\"\";if((t=n.resolve(t))===(r=n.resolve(r)))return\"\";for(var i=1;i<t.length&&47===t.charCodeAt(i);++i);for(var o=t.length,s=o-i,h=1;h<r.length&&47===r.charCodeAt(h);++h);for(var a=r.length-h,c=s<a?s:a,f=-1,u=0;u<=c;++u){if(u===c){if(a>c){if(47===r.charCodeAt(h+u))return r.slice(h+u+1);if(0===u)return r.slice(h+u)}else s>c&&(47===t.charCodeAt(i+u)?f=u:0===u&&(f=0));break}var l=t.charCodeAt(i+u);if(l!==r.charCodeAt(h+u))break;47===l&&(f=u)}var g=\"\";for(u=i+f+1;u<=o;++u)u!==o&&47!==t.charCodeAt(u)||(0===g.length?g+=\"..\":g+=\"/..\");return g.length>0?g+r.slice(h+f):(h+=f,47===r.charCodeAt(h)&&++h,r.slice(h))},_makeLong:function(t){return t},dirname:function(t){if(e(t),0===t.length)return\".\";for(var r=t.charCodeAt(0),n=47===r,i=-1,o=!0,s=t.length-1;s>=1;--s)if(47===(r=t.charCodeAt(s))){if(!o){i=s;break}}else o=!1;return-1===i?n?\"/\":\".\":n&&1===i?\"//\":t.slice(0,i)},basename:function(t,r){if(void 0!==r&&\"string\"!=typeof r)throw new TypeError('\"ext\" argument must be a string');e(t);var n,i=0,o=-1,s=!0;if(void 0!==r&&r.length>0&&r.length<=t.length){if(r.length===t.length&&r===t)return\"\";var h=r.length-1,a=-1;for(n=t.length-1;n>=0;--n){var c=t.charCodeAt(n);if(47===c){if(!s){i=n+1;break}}else-1===a&&(s=!1,a=n+1),h>=0&&(c===r.charCodeAt(h)?-1==--h&&(o=n):(h=-1,o=a))}return i===o?o=a:-1===o&&(o=t.length),t.slice(i,o)}for(n=t.length-1;n>=0;--n)if(47===t.charCodeAt(n)){if(!s){i=n+1;break}}else-1===o&&(s=!1,o=n+1);return-1===o?\"\":t.slice(i,o)},extname:function(t){e(t);for(var r=-1,n=0,i=-1,o=!0,s=0,h=t.length-1;h>=0;--h){var a=t.charCodeAt(h);if(47!==a)-1===i&&(o=!1,i=h+1),46===a?-1===r?r=h:1!==s&&(s=1):-1!==r&&(s=-1);else if(!o){n=h+1;break}}return-1===r||-1===i||0===s||1===s&&r===i-1&&r===n+1?\"\":t.slice(r,i)},format:function(t){if(null===t||\"object\"!=typeof t)throw new TypeError('The \"pathObject\" argument must be of type Object. Received type '+typeof t);return function(t,e){var r=e.dir||e.root,n=e.base||(e.name||\"\")+(e.ext||\"\");return r?r===e.root?r+n:r+\"/\"+n:n}(0,t)},parse:function(t){e(t);var r={root:\"\",dir:\"\",base:\"\",ext:\"\",name:\"\"};if(0===t.length)return r;var n,i=t.charCodeAt(0),o=47===i;o?(r.root=\"/\",n=1):n=0;for(var s=-1,h=0,a=-1,c=!0,f=t.length-1,u=0;f>=n;--f)if(47!==(i=t.charCodeAt(f)))-1===a&&(c=!1,a=f+1),46===i?-1===s?s=f:1!==u&&(u=1):-1!==s&&(u=-1);else if(!c){h=f+1;break}return-1===s||-1===a||0===u||1===u&&s===a-1&&s===h+1?-1!==a&&(r.base=r.name=0===h&&o?t.slice(1,a):t.slice(h,a)):(0===h&&o?(r.name=t.slice(1,s),r.base=t.slice(1,a)):(r.name=t.slice(h,s),r.base=t.slice(h,a)),r.ext=t.slice(s,a)),h>0?r.dir=t.slice(0,h-1):o&&(r.dir=\"/\"),r},sep:\"/\",delimiter:\":\",win32:null,posix:null};n.posix=n,t.exports=n}},e={};function r(n){var i=e[n];if(void 0!==i)return i.exports;var o=e[n]={exports:{}};return t[n](o,o.exports,r),o.exports}r.d=(t,e)=>{for(var n in e)r.o(e,n)&&!r.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.r=t=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})};var n={};(()=>{let t;if(r.r(n),r.d(n,{URI:()=>f,Utils:()=>P}),\"object\"==typeof process)t=\"win32\"===process.platform;else if(\"object\"==typeof navigator){let e=navigator.userAgent;t=e.indexOf(\"Windows\")>=0}const e=/^\\w[\\w\\d+.-]*$/,i=/^\\//,o=/^\\/\\//;function s(t,r){if(!t.scheme&&r)throw new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${t.authority}\", path: \"${t.path}\", query: \"${t.query}\", fragment: \"${t.fragment}\"}`);if(t.scheme&&!e.test(t.scheme))throw new Error(\"[UriError]: Scheme contains illegal characters.\");if(t.path)if(t.authority){if(!i.test(t.path))throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character')}else if(o.test(t.path))throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")')}const h=\"\",a=\"/\",c=/^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;class f{static isUri(t){return t instanceof f||!!t&&\"string\"==typeof t.authority&&\"string\"==typeof t.fragment&&\"string\"==typeof t.path&&\"string\"==typeof t.query&&\"string\"==typeof t.scheme&&\"string\"==typeof t.fsPath&&\"function\"==typeof t.with&&\"function\"==typeof t.toString}scheme;authority;path;query;fragment;constructor(t,e,r,n,i,o=!1){\"object\"==typeof t?(this.scheme=t.scheme||h,this.authority=t.authority||h,this.path=t.path||h,this.query=t.query||h,this.fragment=t.fragment||h):(this.scheme=function(t,e){return t||e?t:\"file\"}(t,o),this.authority=e||h,this.path=function(t,e){switch(t){case\"https\":case\"http\":case\"file\":e?e[0]!==a&&(e=a+e):e=a}return e}(this.scheme,r||h),this.query=n||h,this.fragment=i||h,s(this,o))}get fsPath(){return m(this,!1)}with(t){if(!t)return this;let{scheme:e,authority:r,path:n,query:i,fragment:o}=t;return void 0===e?e=this.scheme:null===e&&(e=h),void 0===r?r=this.authority:null===r&&(r=h),void 0===n?n=this.path:null===n&&(n=h),void 0===i?i=this.query:null===i&&(i=h),void 0===o?o=this.fragment:null===o&&(o=h),e===this.scheme&&r===this.authority&&n===this.path&&i===this.query&&o===this.fragment?this:new l(e,r,n,i,o)}static parse(t,e=!1){const r=c.exec(t);return r?new l(r[2]||h,C(r[4]||h),C(r[5]||h),C(r[7]||h),C(r[9]||h),e):new l(h,h,h,h,h)}static file(e){let r=h;if(t&&(e=e.replace(/\\\\/g,a)),e[0]===a&&e[1]===a){const t=e.indexOf(a,2);-1===t?(r=e.substring(2),e=a):(r=e.substring(2,t),e=e.substring(t)||a)}return new l(\"file\",r,e,h,h)}static from(t){const e=new l(t.scheme,t.authority,t.path,t.query,t.fragment);return s(e,!0),e}toString(t=!1){return y(this,t)}toJSON(){return this}static revive(t){if(t){if(t instanceof f)return t;{const e=new l(t);return e._formatted=t.external,e._fsPath=t._sep===u?t.fsPath:null,e}}return t}}const u=t?1:void 0;class l extends f{_formatted=null;_fsPath=null;get fsPath(){return this._fsPath||(this._fsPath=m(this,!1)),this._fsPath}toString(t=!1){return t?y(this,!0):(this._formatted||(this._formatted=y(this,!1)),this._formatted)}toJSON(){const t={$mid:1};return this._fsPath&&(t.fsPath=this._fsPath,t._sep=u),this._formatted&&(t.external=this._formatted),this.path&&(t.path=this.path),this.scheme&&(t.scheme=this.scheme),this.authority&&(t.authority=this.authority),this.query&&(t.query=this.query),this.fragment&&(t.fragment=this.fragment),t}}const g={58:\"%3A\",47:\"%2F\",63:\"%3F\",35:\"%23\",91:\"%5B\",93:\"%5D\",64:\"%40\",33:\"%21\",36:\"%24\",38:\"%26\",39:\"%27\",40:\"%28\",41:\"%29\",42:\"%2A\",43:\"%2B\",44:\"%2C\",59:\"%3B\",61:\"%3D\",32:\"%20\"};function d(t,e,r){let n,i=-1;for(let o=0;o<t.length;o++){const s=t.charCodeAt(o);if(s>=97&&s<=122||s>=65&&s<=90||s>=48&&s<=57||45===s||46===s||95===s||126===s||e&&47===s||r&&91===s||r&&93===s||r&&58===s)-1!==i&&(n+=encodeURIComponent(t.substring(i,o)),i=-1),void 0!==n&&(n+=t.charAt(o));else{void 0===n&&(n=t.substr(0,o));const e=g[s];void 0!==e?(-1!==i&&(n+=encodeURIComponent(t.substring(i,o)),i=-1),n+=e):-1===i&&(i=o)}}return-1!==i&&(n+=encodeURIComponent(t.substring(i))),void 0!==n?n:t}function p(t){let e;for(let r=0;r<t.length;r++){const n=t.charCodeAt(r);35===n||63===n?(void 0===e&&(e=t.substr(0,r)),e+=g[n]):void 0!==e&&(e+=t[r])}return void 0!==e?e:t}function m(e,r){let n;return n=e.authority&&e.path.length>1&&\"file\"===e.scheme?`//${e.authority}${e.path}`:47===e.path.charCodeAt(0)&&(e.path.charCodeAt(1)>=65&&e.path.charCodeAt(1)<=90||e.path.charCodeAt(1)>=97&&e.path.charCodeAt(1)<=122)&&58===e.path.charCodeAt(2)?r?e.path.substr(1):e.path[1].toLowerCase()+e.path.substr(2):e.path,t&&(n=n.replace(/\\//g,\"\\\\\")),n}function y(t,e){const r=e?p:d;let n=\"\",{scheme:i,authority:o,path:s,query:h,fragment:c}=t;if(i&&(n+=i,n+=\":\"),(o||\"file\"===i)&&(n+=a,n+=a),o){let t=o.indexOf(\"@\");if(-1!==t){const e=o.substr(0,t);o=o.substr(t+1),t=e.lastIndexOf(\":\"),-1===t?n+=r(e,!1,!1):(n+=r(e.substr(0,t),!1,!1),n+=\":\",n+=r(e.substr(t+1),!1,!0)),n+=\"@\"}o=o.toLowerCase(),t=o.lastIndexOf(\":\"),-1===t?n+=r(o,!1,!0):(n+=r(o.substr(0,t),!1,!0),n+=o.substr(t))}if(s){if(s.length>=3&&47===s.charCodeAt(0)&&58===s.charCodeAt(2)){const t=s.charCodeAt(1);t>=65&&t<=90&&(s=`/${String.fromCharCode(t+32)}:${s.substr(3)}`)}else if(s.length>=2&&58===s.charCodeAt(1)){const t=s.charCodeAt(0);t>=65&&t<=90&&(s=`${String.fromCharCode(t+32)}:${s.substr(2)}`)}n+=r(s,!0,!1)}return h&&(n+=\"?\",n+=r(h,!1,!1)),c&&(n+=\"#\",n+=e?c:d(c,!1,!1)),n}function v(t){try{return decodeURIComponent(t)}catch{return t.length>3?t.substr(0,3)+v(t.substr(3)):t}}const b=/(%[0-9A-Za-z][0-9A-Za-z])+/g;function C(t){return t.match(b)?t.replace(b,(t=>v(t))):t}var A=r(470);const w=A.posix||A,x=\"/\";var P;!function(t){t.joinPath=function(t,...e){return t.with({path:w.join(t.path,...e)})},t.resolvePath=function(t,...e){let r=t.path,n=!1;r[0]!==x&&(r=x+r,n=!0);let i=w.resolve(r,...e);return n&&i[0]===x&&!t.authority&&(i=i.substring(1)),t.with({path:i})},t.dirname=function(t){if(0===t.path.length||t.path===x)return t;let e=w.dirname(t.path);return 1===e.length&&46===e.charCodeAt(0)&&(e=\"\"),t.with({path:e})},t.basename=function(t){return w.basename(t.path)},t.extname=function(t){return w.extname(t.path)}}(P||(P={}))})(),LIB=n})();export const{URI,Utils}=LIB;\n//# sourceMappingURL=index.mjs.map","import baseFlatten from './_baseFlatten.js';\nimport map from './map.js';\n\n/**\n * Creates a flattened array of values by running each element in `collection`\n * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n * with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [n, n];\n * }\n *\n * _.flatMap([1, 2], duplicate);\n * // => [1, 1, 2, 2]\n */\nfunction flatMap(collection, iteratee) {\n  return baseFlatten(map(collection, iteratee), 1);\n}\n\nexport default flatMap;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.stringArray = exports.array = exports.func = exports.error = exports.number = exports.string = exports.boolean = void 0;\nfunction boolean(value) {\n    return value === true || value === false;\n}\nexports.boolean = boolean;\nfunction string(value) {\n    return typeof value === 'string' || value instanceof String;\n}\nexports.string = string;\nfunction number(value) {\n    return typeof value === 'number' || value instanceof Number;\n}\nexports.number = number;\nfunction error(value) {\n    return value instanceof Error;\n}\nexports.error = error;\nfunction func(value) {\n    return typeof value === 'function';\n}\nexports.func = func;\nfunction array(value) {\n    return Array.isArray(value);\n}\nexports.array = array;\nfunction stringArray(value) {\n    return array(value) && value.every(elem => string(elem));\n}\nexports.stringArray = stringArray;\n","import {\n  GitGraphModule,\n  createGitGraphServices\n} from \"./chunks/mermaid-parser.core/chunk-BN7GFLIU.mjs\";\nimport {\n  InfoModule,\n  createInfoServices\n} from \"./chunks/mermaid-parser.core/chunk-T44TD3VJ.mjs\";\nimport {\n  PacketModule,\n  createPacketServices\n} from \"./chunks/mermaid-parser.core/chunk-KMC2YHZD.mjs\";\nimport {\n  PieModule,\n  createPieServices\n} from \"./chunks/mermaid-parser.core/chunk-WFWHJNB7.mjs\";\nimport {\n  ArchitectureModule,\n  createArchitectureServices\n} from \"./chunks/mermaid-parser.core/chunk-JEIROHC2.mjs\";\nimport {\n  RadarModule,\n  createRadarServices\n} from \"./chunks/mermaid-parser.core/chunk-WFRQ32O7.mjs\";\nimport {\n  TreemapModule,\n  createTreemapServices\n} from \"./chunks/mermaid-parser.core/chunk-XRWGC2XP.mjs\";\nimport {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  Architecture,\n  ArchitectureGeneratedModule,\n  Branch,\n  Commit,\n  CommonTokenBuilder,\n  CommonValueConverter,\n  GitGraph,\n  GitGraphGeneratedModule,\n  Info,\n  InfoGeneratedModule,\n  Merge,\n  MermaidGeneratedSharedModule,\n  Packet,\n  PacketBlock,\n  PacketGeneratedModule,\n  Pie,\n  PieGeneratedModule,\n  PieSection,\n  Radar,\n  RadarGeneratedModule,\n  Statement,\n  Treemap,\n  TreemapGeneratedModule,\n  __name,\n  isArchitecture,\n  isBranch,\n  isCommit,\n  isGitGraph,\n  isInfo,\n  isMerge,\n  isPacket,\n  isPacketBlock,\n  isPie,\n  isPieSection,\n  isTreemap\n} from \"./chunks/mermaid-parser.core/chunk-4KMFLZZN.mjs\";\n\n// src/parse.ts\nvar parsers = {};\nvar initializers = {\n  info: /* @__PURE__ */ __name(async () => {\n    const { createInfoServices: createInfoServices2 } = await import(\"./chunks/mermaid-parser.core/info-63CPKGFF.mjs\");\n    const parser = createInfoServices2().Info.parser.LangiumParser;\n    parsers.info = parser;\n  }, \"info\"),\n  packet: /* @__PURE__ */ __name(async () => {\n    const { createPacketServices: createPacketServices2 } = await import(\"./chunks/mermaid-parser.core/packet-HUATNLJX.mjs\");\n    const parser = createPacketServices2().Packet.parser.LangiumParser;\n    parsers.packet = parser;\n  }, \"packet\"),\n  pie: /* @__PURE__ */ __name(async () => {\n    const { createPieServices: createPieServices2 } = await import(\"./chunks/mermaid-parser.core/pie-WTHONI2E.mjs\");\n    const parser = createPieServices2().Pie.parser.LangiumParser;\n    parsers.pie = parser;\n  }, \"pie\"),\n  architecture: /* @__PURE__ */ __name(async () => {\n    const { createArchitectureServices: createArchitectureServices2 } = await import(\"./chunks/mermaid-parser.core/architecture-O4VJ6CD3.mjs\");\n    const parser = createArchitectureServices2().Architecture.parser.LangiumParser;\n    parsers.architecture = parser;\n  }, \"architecture\"),\n  gitGraph: /* @__PURE__ */ __name(async () => {\n    const { createGitGraphServices: createGitGraphServices2 } = await import(\"./chunks/mermaid-parser.core/gitGraph-ZV4HHKMB.mjs\");\n    const parser = createGitGraphServices2().GitGraph.parser.LangiumParser;\n    parsers.gitGraph = parser;\n  }, \"gitGraph\"),\n  radar: /* @__PURE__ */ __name(async () => {\n    const { createRadarServices: createRadarServices2 } = await import(\"./chunks/mermaid-parser.core/radar-NJJJXTRR.mjs\");\n    const parser = createRadarServices2().Radar.parser.LangiumParser;\n    parsers.radar = parser;\n  }, \"radar\"),\n  treemap: /* @__PURE__ */ __name(async () => {\n    const { createTreemapServices: createTreemapServices2 } = await import(\"./chunks/mermaid-parser.core/treemap-75Q7IDZK.mjs\");\n    const parser = createTreemapServices2().Treemap.parser.LangiumParser;\n    parsers.treemap = parser;\n  }, \"treemap\")\n};\nasync function parse(diagramType, text) {\n  const initializer = initializers[diagramType];\n  if (!initializer) {\n    throw new Error(`Unknown diagram type: ${diagramType}`);\n  }\n  if (!parsers[diagramType]) {\n    await initializer();\n  }\n  const parser = parsers[diagramType];\n  const result = parser.parse(text);\n  if (result.lexerErrors.length > 0 || result.parserErrors.length > 0) {\n    throw new MermaidParseError(result);\n  }\n  return result.value;\n}\n__name(parse, \"parse\");\nvar MermaidParseError = class extends Error {\n  constructor(result) {\n    const lexerErrors = result.lexerErrors.map((err) => err.message).join(\"\\n\");\n    const parserErrors = result.parserErrors.map((err) => err.message).join(\"\\n\");\n    super(`Parsing failed: ${lexerErrors} ${parserErrors}`);\n    this.result = result;\n  }\n  static {\n    __name(this, \"MermaidParseError\");\n  }\n};\nexport {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  Architecture,\n  ArchitectureGeneratedModule,\n  ArchitectureModule,\n  Branch,\n  Commit,\n  CommonTokenBuilder,\n  CommonValueConverter,\n  GitGraph,\n  GitGraphGeneratedModule,\n  GitGraphModule,\n  Info,\n  InfoGeneratedModule,\n  InfoModule,\n  Merge,\n  MermaidGeneratedSharedModule,\n  MermaidParseError,\n  Packet,\n  PacketBlock,\n  PacketGeneratedModule,\n  PacketModule,\n  Pie,\n  PieGeneratedModule,\n  PieModule,\n  PieSection,\n  Radar,\n  RadarGeneratedModule,\n  RadarModule,\n  Statement,\n  Treemap,\n  TreemapGeneratedModule,\n  TreemapModule,\n  createArchitectureServices,\n  createGitGraphServices,\n  createInfoServices,\n  createPacketServices,\n  createPieServices,\n  createRadarServices,\n  createTreemapServices,\n  isArchitecture,\n  isBranch,\n  isCommit,\n  isGitGraph,\n  isInfo,\n  isMerge,\n  isPacket,\n  isPacketBlock,\n  isPie,\n  isPieSection,\n  isTreemap,\n  parse\n};\n","import {\n  __name,\n  configureSvgSize,\n  log\n} from \"./chunk-3XYRH5AP.mjs\";\n\n// src/rendering-util/setupViewPortForSVG.ts\nvar setupViewPortForSVG = /* @__PURE__ */ __name((svg, padding, cssDiagram, useMaxWidth) => {\n  svg.attr(\"class\", cssDiagram);\n  const { width, height, x, y } = calculateDimensionsWithPadding(svg, padding);\n  configureSvgSize(svg, height, width, useMaxWidth);\n  const viewBox = createViewBox(x, y, width, height, padding);\n  svg.attr(\"viewBox\", viewBox);\n  log.debug(`viewBox configured: ${viewBox} with padding: ${padding}`);\n}, \"setupViewPortForSVG\");\nvar calculateDimensionsWithPadding = /* @__PURE__ */ __name((svg, padding) => {\n  const bounds = svg.node()?.getBBox() || { width: 0, height: 0, x: 0, y: 0 };\n  return {\n    width: bounds.width + padding * 2,\n    height: bounds.height + padding * 2,\n    x: bounds.x,\n    y: bounds.y\n  };\n}, \"calculateDimensionsWithPadding\");\nvar createViewBox = /* @__PURE__ */ __name((x, y, width, height, padding) => {\n  return `${x - padding} ${y - padding} ${width} ${height}`;\n}, \"createViewBox\");\n\nexport {\n  setupViewPortForSVG\n};\n","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport map from \"lodash-es/map.js\";\nimport filter from \"lodash-es/filter.js\";\nimport { Alternation, NonTerminal, Option, RepetitionMandatory, Repetition, Terminal, RepetitionWithSeparator, RepetitionMandatoryWithSeparator } from \"chevrotain\";\nexport function buildATNKey(rule, type, occurrence) {\n    return `${rule.name}_${type}_${occurrence}`;\n}\nexport const ATN_INVALID_TYPE = 0;\nexport const ATN_BASIC = 1;\nexport const ATN_RULE_START = 2;\nexport const ATN_PLUS_BLOCK_START = 4;\nexport const ATN_STAR_BLOCK_START = 5;\n// Currently unused as the ATN is not used for lexing\nexport const ATN_TOKEN_START = 6;\nexport const ATN_RULE_STOP = 7;\nexport const ATN_BLOCK_END = 8;\nexport const ATN_STAR_LOOP_BACK = 9;\nexport const ATN_STAR_LOOP_ENTRY = 10;\nexport const ATN_PLUS_LOOP_BACK = 11;\nexport const ATN_LOOP_END = 12;\nexport class AbstractTransition {\n    constructor(target) {\n        this.target = target;\n    }\n    isEpsilon() {\n        return false;\n    }\n}\nexport class AtomTransition extends AbstractTransition {\n    constructor(target, tokenType) {\n        super(target);\n        this.tokenType = tokenType;\n    }\n}\nexport class EpsilonTransition extends AbstractTransition {\n    constructor(target) {\n        super(target);\n    }\n    isEpsilon() {\n        return true;\n    }\n}\nexport class RuleTransition extends AbstractTransition {\n    constructor(ruleStart, rule, followState) {\n        super(ruleStart);\n        this.rule = rule;\n        this.followState = followState;\n    }\n    isEpsilon() {\n        return true;\n    }\n}\nexport function createATN(rules) {\n    const atn = {\n        decisionMap: {},\n        decisionStates: [],\n        ruleToStartState: new Map(),\n        ruleToStopState: new Map(),\n        states: []\n    };\n    createRuleStartAndStopATNStates(atn, rules);\n    const ruleLength = rules.length;\n    for (let i = 0; i < ruleLength; i++) {\n        const rule = rules[i];\n        const ruleBlock = block(atn, rule, rule);\n        if (ruleBlock === undefined) {\n            continue;\n        }\n        buildRuleHandle(atn, rule, ruleBlock);\n    }\n    return atn;\n}\nfunction createRuleStartAndStopATNStates(atn, rules) {\n    const ruleLength = rules.length;\n    for (let i = 0; i < ruleLength; i++) {\n        const rule = rules[i];\n        const start = newState(atn, rule, undefined, {\n            type: ATN_RULE_START\n        });\n        const stop = newState(atn, rule, undefined, {\n            type: ATN_RULE_STOP\n        });\n        start.stop = stop;\n        atn.ruleToStartState.set(rule, start);\n        atn.ruleToStopState.set(rule, stop);\n    }\n}\nfunction atom(atn, rule, production) {\n    if (production instanceof Terminal) {\n        return tokenRef(atn, rule, production.terminalType, production);\n    }\n    else if (production instanceof NonTerminal) {\n        return ruleRef(atn, rule, production);\n    }\n    else if (production instanceof Alternation) {\n        return alternation(atn, rule, production);\n    }\n    else if (production instanceof Option) {\n        return option(atn, rule, production);\n    }\n    else if (production instanceof Repetition) {\n        return repetition(atn, rule, production);\n    }\n    else if (production instanceof RepetitionWithSeparator) {\n        return repetitionSep(atn, rule, production);\n    }\n    else if (production instanceof RepetitionMandatory) {\n        return repetitionMandatory(atn, rule, production);\n    }\n    else if (production instanceof RepetitionMandatoryWithSeparator) {\n        return repetitionMandatorySep(atn, rule, production);\n    }\n    else {\n        return block(atn, rule, production);\n    }\n}\nfunction repetition(atn, rule, repetition) {\n    const starState = newState(atn, rule, repetition, {\n        type: ATN_STAR_BLOCK_START\n    });\n    defineDecisionState(atn, starState);\n    const handle = makeAlts(atn, rule, starState, repetition, block(atn, rule, repetition));\n    return star(atn, rule, repetition, handle);\n}\nfunction repetitionSep(atn, rule, repetition) {\n    const starState = newState(atn, rule, repetition, {\n        type: ATN_STAR_BLOCK_START\n    });\n    defineDecisionState(atn, starState);\n    const handle = makeAlts(atn, rule, starState, repetition, block(atn, rule, repetition));\n    const sep = tokenRef(atn, rule, repetition.separator, repetition);\n    return star(atn, rule, repetition, handle, sep);\n}\nfunction repetitionMandatory(atn, rule, repetition) {\n    const plusState = newState(atn, rule, repetition, {\n        type: ATN_PLUS_BLOCK_START\n    });\n    defineDecisionState(atn, plusState);\n    const handle = makeAlts(atn, rule, plusState, repetition, block(atn, rule, repetition));\n    return plus(atn, rule, repetition, handle);\n}\nfunction repetitionMandatorySep(atn, rule, repetition) {\n    const plusState = newState(atn, rule, repetition, {\n        type: ATN_PLUS_BLOCK_START\n    });\n    defineDecisionState(atn, plusState);\n    const handle = makeAlts(atn, rule, plusState, repetition, block(atn, rule, repetition));\n    const sep = tokenRef(atn, rule, repetition.separator, repetition);\n    return plus(atn, rule, repetition, handle, sep);\n}\nfunction alternation(atn, rule, alternation) {\n    const start = newState(atn, rule, alternation, {\n        type: ATN_BASIC\n    });\n    defineDecisionState(atn, start);\n    const alts = map(alternation.definition, (e) => atom(atn, rule, e));\n    const handle = makeAlts(atn, rule, start, alternation, ...alts);\n    return handle;\n}\nfunction option(atn, rule, option) {\n    const start = newState(atn, rule, option, {\n        type: ATN_BASIC\n    });\n    defineDecisionState(atn, start);\n    const handle = makeAlts(atn, rule, start, option, block(atn, rule, option));\n    return optional(atn, rule, option, handle);\n}\nfunction block(atn, rule, block) {\n    const handles = filter(map(block.definition, (e) => atom(atn, rule, e)), (e) => e !== undefined);\n    if (handles.length === 1) {\n        return handles[0];\n    }\n    else if (handles.length === 0) {\n        return undefined;\n    }\n    else {\n        return makeBlock(atn, handles);\n    }\n}\nfunction plus(atn, rule, plus, handle, sep) {\n    const blkStart = handle.left;\n    const blkEnd = handle.right;\n    const loop = newState(atn, rule, plus, {\n        type: ATN_PLUS_LOOP_BACK\n    });\n    defineDecisionState(atn, loop);\n    const end = newState(atn, rule, plus, {\n        type: ATN_LOOP_END\n    });\n    blkStart.loopback = loop;\n    end.loopback = loop;\n    atn.decisionMap[buildATNKey(rule, sep ? 'RepetitionMandatoryWithSeparator' : 'RepetitionMandatory', plus.idx)] = loop;\n    epsilon(blkEnd, loop); // block can see loop back\n    // Depending on whether we have a separator we put the exit transition at index 1 or 0\n    // This influences the chosen option in the lookahead DFA\n    if (sep === undefined) {\n        epsilon(loop, blkStart); // loop back to start\n        epsilon(loop, end); // exit\n    }\n    else {\n        epsilon(loop, end); // exit\n        // loop back to start with separator\n        epsilon(loop, sep.left);\n        epsilon(sep.right, blkStart);\n    }\n    return {\n        left: blkStart,\n        right: end\n    };\n}\nfunction star(atn, rule, star, handle, sep) {\n    const start = handle.left;\n    const end = handle.right;\n    const entry = newState(atn, rule, star, {\n        type: ATN_STAR_LOOP_ENTRY\n    });\n    defineDecisionState(atn, entry);\n    const loopEnd = newState(atn, rule, star, {\n        type: ATN_LOOP_END\n    });\n    const loop = newState(atn, rule, star, {\n        type: ATN_STAR_LOOP_BACK\n    });\n    entry.loopback = loop;\n    loopEnd.loopback = loop;\n    epsilon(entry, start); // loop enter edge (alt 2)\n    epsilon(entry, loopEnd); // bypass loop edge (alt 1)\n    epsilon(end, loop); // block end hits loop back\n    if (sep !== undefined) {\n        epsilon(loop, loopEnd); // end loop\n        // loop back to start of handle using separator\n        epsilon(loop, sep.left);\n        epsilon(sep.right, start);\n    }\n    else {\n        epsilon(loop, entry); // loop back to entry/exit decision\n    }\n    atn.decisionMap[buildATNKey(rule, sep ? 'RepetitionWithSeparator' : 'Repetition', star.idx)] = entry;\n    return {\n        left: entry,\n        right: loopEnd\n    };\n}\nfunction optional(atn, rule, optional, handle) {\n    const start = handle.left;\n    const end = handle.right;\n    epsilon(start, end);\n    atn.decisionMap[buildATNKey(rule, 'Option', optional.idx)] = start;\n    return handle;\n}\nfunction defineDecisionState(atn, state) {\n    atn.decisionStates.push(state);\n    state.decision = atn.decisionStates.length - 1;\n    return state.decision;\n}\nfunction makeAlts(atn, rule, start, production, ...alts) {\n    const end = newState(atn, rule, production, {\n        type: ATN_BLOCK_END,\n        start\n    });\n    start.end = end;\n    for (const alt of alts) {\n        if (alt !== undefined) {\n            // hook alts up to decision block\n            epsilon(start, alt.left);\n            epsilon(alt.right, end);\n        }\n        else {\n            epsilon(start, end);\n        }\n    }\n    const handle = {\n        left: start,\n        right: end\n    };\n    atn.decisionMap[buildATNKey(rule, getProdType(production), production.idx)] = start;\n    return handle;\n}\nfunction getProdType(production) {\n    if (production instanceof Alternation) {\n        return 'Alternation';\n    }\n    else if (production instanceof Option) {\n        return 'Option';\n    }\n    else if (production instanceof Repetition) {\n        return 'Repetition';\n    }\n    else if (production instanceof RepetitionWithSeparator) {\n        return 'RepetitionWithSeparator';\n    }\n    else if (production instanceof RepetitionMandatory) {\n        return 'RepetitionMandatory';\n    }\n    else if (production instanceof RepetitionMandatoryWithSeparator) {\n        return 'RepetitionMandatoryWithSeparator';\n    }\n    else {\n        throw new Error('Invalid production type encountered');\n    }\n}\nfunction makeBlock(atn, alts) {\n    const altsLength = alts.length;\n    for (let i = 0; i < altsLength - 1; i++) {\n        const handle = alts[i];\n        let transition;\n        if (handle.left.transitions.length === 1) {\n            transition = handle.left.transitions[0];\n        }\n        const isRuleTransition = transition instanceof RuleTransition;\n        const ruleTransition = transition;\n        const next = alts[i + 1].left;\n        if (handle.left.type === ATN_BASIC &&\n            handle.right.type === ATN_BASIC &&\n            transition !== undefined &&\n            ((isRuleTransition && ruleTransition.followState === handle.right) ||\n                transition.target === handle.right)) {\n            // we can avoid epsilon edge to next element\n            if (isRuleTransition) {\n                ruleTransition.followState = next;\n            }\n            else {\n                transition.target = next;\n            }\n            removeState(atn, handle.right); // we skipped over this state\n        }\n        else {\n            // need epsilon if previous block's right end node is complex\n            epsilon(handle.right, next);\n        }\n    }\n    const first = alts[0];\n    const last = alts[altsLength - 1];\n    return {\n        left: first.left,\n        right: last.right\n    };\n}\nfunction tokenRef(atn, rule, tokenType, production) {\n    const left = newState(atn, rule, production, {\n        type: ATN_BASIC\n    });\n    const right = newState(atn, rule, production, {\n        type: ATN_BASIC\n    });\n    addTransition(left, new AtomTransition(right, tokenType));\n    return {\n        left,\n        right\n    };\n}\nfunction ruleRef(atn, currentRule, nonTerminal) {\n    const rule = nonTerminal.referencedRule;\n    const start = atn.ruleToStartState.get(rule);\n    const left = newState(atn, currentRule, nonTerminal, {\n        type: ATN_BASIC\n    });\n    const right = newState(atn, currentRule, nonTerminal, {\n        type: ATN_BASIC\n    });\n    const call = new RuleTransition(start, rule, right);\n    addTransition(left, call);\n    return {\n        left,\n        right\n    };\n}\nfunction buildRuleHandle(atn, rule, block) {\n    const start = atn.ruleToStartState.get(rule);\n    epsilon(start, block.left);\n    const stop = atn.ruleToStopState.get(rule);\n    epsilon(block.right, stop);\n    const handle = {\n        left: start,\n        right: stop\n    };\n    return handle;\n}\nfunction epsilon(a, b) {\n    const transition = new EpsilonTransition(b);\n    addTransition(a, transition);\n}\nfunction newState(atn, rule, production, partial) {\n    const t = Object.assign({ atn,\n        production, epsilonOnlyTransitions: false, rule, transitions: [], nextTokenWithinRule: [], stateNumber: atn.states.length }, partial);\n    atn.states.push(t);\n    return t;\n}\nfunction addTransition(state, transition) {\n    // A single ATN state can only contain epsilon transitions or non-epsilon transitions\n    // Because they are never mixed, only setting the property for the first transition is fine\n    if (state.transitions.length === 0) {\n        state.epsilonOnlyTransitions = transition.isEpsilon();\n    }\n    state.transitions.push(transition);\n}\nfunction removeState(atn, state) {\n    atn.states.splice(atn.states.indexOf(state), 1);\n}\n//# sourceMappingURL=atn.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport map from \"lodash-es/map.js\";\nexport const DFA_ERROR = {};\nexport class ATNConfigSet {\n    constructor() {\n        this.map = {};\n        this.configs = [];\n    }\n    get size() {\n        return this.configs.length;\n    }\n    finalize() {\n        // Empties the map to free up memory\n        this.map = {};\n    }\n    add(config) {\n        const key = getATNConfigKey(config);\n        // Only add configs which don't exist in our map already\n        // While this does not influence the actual algorithm, adding them anyway would massively increase memory consumption\n        if (!(key in this.map)) {\n            this.map[key] = this.configs.length;\n            this.configs.push(config);\n        }\n    }\n    get elements() {\n        return this.configs;\n    }\n    get alts() {\n        return map(this.configs, (e) => e.alt);\n    }\n    get key() {\n        let value = \"\";\n        for (const k in this.map) {\n            value += k + \":\";\n        }\n        return value;\n    }\n}\nexport function getATNConfigKey(config, alt = true) {\n    return `${alt ? `a${config.alt}` : \"\"}s${config.state.stateNumber}:${config.stack.map((e) => e.stateNumber.toString()).join(\"_\")}`;\n}\n//# sourceMappingURL=dfa.js.map","import baseIteratee from './_baseIteratee.js';\nimport baseUniq from './_baseUniq.js';\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nexport default uniqBy;\n","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { tokenMatcher, tokenLabel, NonTerminal, Alternation, Option, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Repetition, Terminal, LLkLookaheadStrategy, getLookaheadPaths } from \"chevrotain\";\nimport { ATN_RULE_STOP, AtomTransition, buildATNKey, createATN, EpsilonTransition, RuleTransition } from \"./atn.js\";\nimport { ATNConfigSet, DFA_ERROR, getATNConfigKey } from \"./dfa.js\";\nimport min from \"lodash-es/min.js\";\nimport flatMap from \"lodash-es/flatMap.js\";\nimport uniqBy from \"lodash-es/uniqBy.js\";\nimport map from \"lodash-es/map.js\";\nimport flatten from \"lodash-es/flatten.js\";\nimport forEach from \"lodash-es/forEach.js\";\nimport isEmpty from \"lodash-es/isEmpty.js\";\nimport reduce from \"lodash-es/reduce.js\";\nfunction createDFACache(startState, decision) {\n    const map = {};\n    return (predicateSet) => {\n        const key = predicateSet.toString();\n        let existing = map[key];\n        if (existing !== undefined) {\n            return existing;\n        }\n        else {\n            existing = {\n                atnStartState: startState,\n                decision,\n                states: {}\n            };\n            map[key] = existing;\n            return existing;\n        }\n    };\n}\nclass PredicateSet {\n    constructor() {\n        this.predicates = [];\n    }\n    is(index) {\n        return index >= this.predicates.length || this.predicates[index];\n    }\n    set(index, value) {\n        this.predicates[index] = value;\n    }\n    toString() {\n        let value = \"\";\n        const size = this.predicates.length;\n        for (let i = 0; i < size; i++) {\n            value += this.predicates[i] === true ? \"1\" : \"0\";\n        }\n        return value;\n    }\n}\nconst EMPTY_PREDICATES = new PredicateSet();\nexport class LLStarLookaheadStrategy extends LLkLookaheadStrategy {\n    constructor(options) {\n        var _a;\n        super();\n        this.logging = (_a = options === null || options === void 0 ? void 0 : options.logging) !== null && _a !== void 0 ? _a : ((message) => console.log(message));\n    }\n    initialize(options) {\n        this.atn = createATN(options.rules);\n        this.dfas = initATNSimulator(this.atn);\n    }\n    validateAmbiguousAlternationAlternatives() {\n        return [];\n    }\n    validateEmptyOrAlternatives() {\n        return [];\n    }\n    buildLookaheadForAlternation(options) {\n        const { prodOccurrence, rule, hasPredicates, dynamicTokensEnabled } = options;\n        const dfas = this.dfas;\n        const logging = this.logging;\n        const key = buildATNKey(rule, 'Alternation', prodOccurrence);\n        const decisionState = this.atn.decisionMap[key];\n        const decisionIndex = decisionState.decision;\n        const partialAlts = map(getLookaheadPaths({\n            maxLookahead: 1,\n            occurrence: prodOccurrence,\n            prodType: \"Alternation\",\n            rule: rule\n        }), (currAlt) => map(currAlt, (path) => path[0]));\n        if (isLL1Sequence(partialAlts, false) && !dynamicTokensEnabled) {\n            const choiceToAlt = reduce(partialAlts, (result, currAlt, idx) => {\n                forEach(currAlt, (currTokType) => {\n                    if (currTokType) {\n                        result[currTokType.tokenTypeIdx] = idx;\n                        forEach(currTokType.categoryMatches, (currExtendingType) => {\n                            result[currExtendingType] = idx;\n                        });\n                    }\n                });\n                return result;\n            }, {});\n            if (hasPredicates) {\n                return function (orAlts) {\n                    var _a;\n                    const nextToken = this.LA(1);\n                    const prediction = choiceToAlt[nextToken.tokenTypeIdx];\n                    if (orAlts !== undefined && prediction !== undefined) {\n                        const gate = (_a = orAlts[prediction]) === null || _a === void 0 ? void 0 : _a.GATE;\n                        if (gate !== undefined && gate.call(this) === false) {\n                            return undefined;\n                        }\n                    }\n                    return prediction;\n                };\n            }\n            else {\n                return function () {\n                    const nextToken = this.LA(1);\n                    return choiceToAlt[nextToken.tokenTypeIdx];\n                };\n            }\n        }\n        else if (hasPredicates) {\n            return function (orAlts) {\n                const predicates = new PredicateSet();\n                const length = orAlts === undefined ? 0 : orAlts.length;\n                for (let i = 0; i < length; i++) {\n                    const gate = orAlts === null || orAlts === void 0 ? void 0 : orAlts[i].GATE;\n                    predicates.set(i, gate === undefined || gate.call(this));\n                }\n                const result = adaptivePredict.call(this, dfas, decisionIndex, predicates, logging);\n                return typeof result === 'number' ? result : undefined;\n            };\n        }\n        else {\n            return function () {\n                const result = adaptivePredict.call(this, dfas, decisionIndex, EMPTY_PREDICATES, logging);\n                return typeof result === 'number' ? result : undefined;\n            };\n        }\n    }\n    buildLookaheadForOptional(options) {\n        const { prodOccurrence, rule, prodType, dynamicTokensEnabled } = options;\n        const dfas = this.dfas;\n        const logging = this.logging;\n        const key = buildATNKey(rule, prodType, prodOccurrence);\n        const decisionState = this.atn.decisionMap[key];\n        const decisionIndex = decisionState.decision;\n        const alts = map(getLookaheadPaths({\n            maxLookahead: 1,\n            occurrence: prodOccurrence,\n            prodType,\n            rule\n        }), (e) => {\n            return map(e, (g) => g[0]);\n        });\n        if (isLL1Sequence(alts) && alts[0][0] && !dynamicTokensEnabled) {\n            const alt = alts[0];\n            const singleTokensTypes = flatten(alt);\n            if (singleTokensTypes.length === 1 &&\n                isEmpty(singleTokensTypes[0].categoryMatches)) {\n                const expectedTokenType = singleTokensTypes[0];\n                const expectedTokenUniqueKey = expectedTokenType.tokenTypeIdx;\n                return function () {\n                    return this.LA(1).tokenTypeIdx === expectedTokenUniqueKey;\n                };\n            }\n            else {\n                const choiceToAlt = reduce(singleTokensTypes, (result, currTokType) => {\n                    if (currTokType !== undefined) {\n                        result[currTokType.tokenTypeIdx] = true;\n                        forEach(currTokType.categoryMatches, (currExtendingType) => {\n                            result[currExtendingType] = true;\n                        });\n                    }\n                    return result;\n                }, {});\n                return function () {\n                    const nextToken = this.LA(1);\n                    return choiceToAlt[nextToken.tokenTypeIdx] === true;\n                };\n            }\n        }\n        return function () {\n            const result = adaptivePredict.call(this, dfas, decisionIndex, EMPTY_PREDICATES, logging);\n            return typeof result === \"object\" ? false : result === 0;\n        };\n    }\n}\nfunction isLL1Sequence(sequences, allowEmpty = true) {\n    const fullSet = new Set();\n    for (const alt of sequences) {\n        const altSet = new Set();\n        for (const tokType of alt) {\n            if (tokType === undefined) {\n                if (allowEmpty) {\n                    // Epsilon production encountered\n                    break;\n                }\n                else {\n                    return false;\n                }\n            }\n            const indices = [tokType.tokenTypeIdx].concat(tokType.categoryMatches);\n            for (const index of indices) {\n                if (fullSet.has(index)) {\n                    if (!altSet.has(index)) {\n                        return false;\n                    }\n                }\n                else {\n                    fullSet.add(index);\n                    altSet.add(index);\n                }\n            }\n        }\n    }\n    return true;\n}\nfunction initATNSimulator(atn) {\n    const decisionLength = atn.decisionStates.length;\n    const decisionToDFA = Array(decisionLength);\n    for (let i = 0; i < decisionLength; i++) {\n        decisionToDFA[i] = createDFACache(atn.decisionStates[i], i);\n    }\n    return decisionToDFA;\n}\nfunction adaptivePredict(dfaCaches, decision, predicateSet, logging) {\n    const dfa = dfaCaches[decision](predicateSet);\n    let start = dfa.start;\n    if (start === undefined) {\n        const closure = computeStartState(dfa.atnStartState);\n        start = addDFAState(dfa, newDFAState(closure));\n        dfa.start = start;\n    }\n    const alt = performLookahead.apply(this, [dfa, start, predicateSet, logging]);\n    return alt;\n}\nfunction performLookahead(dfa, s0, predicateSet, logging) {\n    let previousD = s0;\n    let i = 1;\n    const path = [];\n    let t = this.LA(i++);\n    while (true) {\n        let d = getExistingTargetState(previousD, t);\n        if (d === undefined) {\n            d = computeLookaheadTarget.apply(this, [dfa, previousD, t, i, predicateSet, logging]);\n        }\n        if (d === DFA_ERROR) {\n            return buildAdaptivePredictError(path, previousD, t);\n        }\n        if (d.isAcceptState === true) {\n            return d.prediction;\n        }\n        previousD = d;\n        path.push(t);\n        t = this.LA(i++);\n    }\n}\nfunction computeLookaheadTarget(dfa, previousD, token, lookahead, predicateSet, logging) {\n    const reach = computeReachSet(previousD.configs, token, predicateSet);\n    if (reach.size === 0) {\n        addDFAEdge(dfa, previousD, token, DFA_ERROR);\n        return DFA_ERROR;\n    }\n    let newState = newDFAState(reach);\n    const predictedAlt = getUniqueAlt(reach, predicateSet);\n    if (predictedAlt !== undefined) {\n        newState.isAcceptState = true;\n        newState.prediction = predictedAlt;\n        newState.configs.uniqueAlt = predictedAlt;\n    }\n    else if (hasConflictTerminatingPrediction(reach)) {\n        const prediction = min(reach.alts);\n        newState.isAcceptState = true;\n        newState.prediction = prediction;\n        newState.configs.uniqueAlt = prediction;\n        reportLookaheadAmbiguity.apply(this, [dfa, lookahead, reach.alts, logging]);\n    }\n    newState = addDFAEdge(dfa, previousD, token, newState);\n    return newState;\n}\nfunction reportLookaheadAmbiguity(dfa, lookahead, ambiguityIndices, logging) {\n    const prefixPath = [];\n    for (let i = 1; i <= lookahead; i++) {\n        prefixPath.push(this.LA(i).tokenType);\n    }\n    const atnState = dfa.atnStartState;\n    const topLevelRule = atnState.rule;\n    const production = atnState.production;\n    const message = buildAmbiguityError({\n        topLevelRule,\n        ambiguityIndices,\n        production,\n        prefixPath\n    });\n    logging(message);\n}\nfunction buildAmbiguityError(options) {\n    const pathMsg = map(options.prefixPath, (currtok) => tokenLabel(currtok)).join(\", \");\n    const occurrence = options.production.idx === 0 ? \"\" : options.production.idx;\n    let currMessage = `Ambiguous Alternatives Detected: <${options.ambiguityIndices.join(\", \")}> in <${getProductionDslName(options.production)}${occurrence}>` +\n        ` inside <${options.topLevelRule.name}> Rule,\\n` +\n        `<${pathMsg}> may appears as a prefix path in all these alternatives.\\n`;\n    currMessage =\n        currMessage +\n            `See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#AMBIGUOUS_ALTERNATIVES\\n` +\n            `For Further details.`;\n    return currMessage;\n}\nfunction getProductionDslName(prod) {\n    if (prod instanceof NonTerminal) {\n        return \"SUBRULE\";\n    }\n    else if (prod instanceof Option) {\n        return \"OPTION\";\n    }\n    else if (prod instanceof Alternation) {\n        return \"OR\";\n    }\n    else if (prod instanceof RepetitionMandatory) {\n        return \"AT_LEAST_ONE\";\n    }\n    else if (prod instanceof RepetitionMandatoryWithSeparator) {\n        return \"AT_LEAST_ONE_SEP\";\n    }\n    else if (prod instanceof RepetitionWithSeparator) {\n        return \"MANY_SEP\";\n    }\n    else if (prod instanceof Repetition) {\n        return \"MANY\";\n    }\n    else if (prod instanceof Terminal) {\n        return \"CONSUME\";\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction buildAdaptivePredictError(path, previous, current) {\n    const nextTransitions = flatMap(previous.configs.elements, (e) => e.state.transitions);\n    const nextTokenTypes = uniqBy(nextTransitions\n        .filter((e) => e instanceof AtomTransition)\n        .map((e) => e.tokenType), (e) => e.tokenTypeIdx);\n    return {\n        actualToken: current,\n        possibleTokenTypes: nextTokenTypes,\n        tokenPath: path\n    };\n}\nfunction getExistingTargetState(state, token) {\n    return state.edges[token.tokenTypeIdx];\n}\nfunction computeReachSet(configs, token, predicateSet) {\n    const intermediate = new ATNConfigSet();\n    const skippedStopStates = [];\n    for (const c of configs.elements) {\n        if (predicateSet.is(c.alt) === false) {\n            continue;\n        }\n        if (c.state.type === ATN_RULE_STOP) {\n            skippedStopStates.push(c);\n            continue;\n        }\n        const transitionLength = c.state.transitions.length;\n        for (let i = 0; i < transitionLength; i++) {\n            const transition = c.state.transitions[i];\n            const target = getReachableTarget(transition, token);\n            if (target !== undefined) {\n                intermediate.add({\n                    state: target,\n                    alt: c.alt,\n                    stack: c.stack\n                });\n            }\n        }\n    }\n    let reach;\n    if (skippedStopStates.length === 0 && intermediate.size === 1) {\n        reach = intermediate;\n    }\n    if (reach === undefined) {\n        reach = new ATNConfigSet();\n        for (const c of intermediate.elements) {\n            closure(c, reach);\n        }\n    }\n    if (skippedStopStates.length > 0 && !hasConfigInRuleStopState(reach)) {\n        for (const c of skippedStopStates) {\n            reach.add(c);\n        }\n    }\n    return reach;\n}\nfunction getReachableTarget(transition, token) {\n    if (transition instanceof AtomTransition &&\n        tokenMatcher(token, transition.tokenType)) {\n        return transition.target;\n    }\n    return undefined;\n}\nfunction getUniqueAlt(configs, predicateSet) {\n    let alt;\n    for (const c of configs.elements) {\n        if (predicateSet.is(c.alt) === true) {\n            if (alt === undefined) {\n                alt = c.alt;\n            }\n            else if (alt !== c.alt) {\n                return undefined;\n            }\n        }\n    }\n    return alt;\n}\nfunction newDFAState(closure) {\n    return {\n        configs: closure,\n        edges: {},\n        isAcceptState: false,\n        prediction: -1\n    };\n}\nfunction addDFAEdge(dfa, from, token, to) {\n    to = addDFAState(dfa, to);\n    from.edges[token.tokenTypeIdx] = to;\n    return to;\n}\nfunction addDFAState(dfa, state) {\n    if (state === DFA_ERROR) {\n        return state;\n    }\n    // Repetitions have the same config set\n    // Therefore, storing the key of the config in a map allows us to create a loop in our DFA\n    const mapKey = state.configs.key;\n    const existing = dfa.states[mapKey];\n    if (existing !== undefined) {\n        return existing;\n    }\n    state.configs.finalize();\n    dfa.states[mapKey] = state;\n    return state;\n}\nfunction computeStartState(atnState) {\n    const configs = new ATNConfigSet();\n    const numberOfTransitions = atnState.transitions.length;\n    for (let i = 0; i < numberOfTransitions; i++) {\n        const target = atnState.transitions[i].target;\n        const config = {\n            state: target,\n            alt: i,\n            stack: []\n        };\n        closure(config, configs);\n    }\n    return configs;\n}\nfunction closure(config, configs) {\n    const p = config.state;\n    if (p.type === ATN_RULE_STOP) {\n        if (config.stack.length > 0) {\n            const atnStack = [...config.stack];\n            const followState = atnStack.pop();\n            const followConfig = {\n                state: followState,\n                alt: config.alt,\n                stack: atnStack\n            };\n            closure(followConfig, configs);\n        }\n        else {\n            // Dipping into outer context, simply add the config\n            // This will stop computation once every config is at the rule stop state\n            configs.add(config);\n        }\n        return;\n    }\n    if (!p.epsilonOnlyTransitions) {\n        configs.add(config);\n    }\n    const transitionLength = p.transitions.length;\n    for (let i = 0; i < transitionLength; i++) {\n        const transition = p.transitions[i];\n        const c = getEpsilonTarget(config, transition);\n        if (c !== undefined) {\n            closure(c, configs);\n        }\n    }\n}\nfunction getEpsilonTarget(config, transition) {\n    if (transition instanceof EpsilonTransition) {\n        return {\n            state: transition.target,\n            alt: config.alt,\n            stack: config.stack\n        };\n    }\n    else if (transition instanceof RuleTransition) {\n        const stack = [...config.stack, transition.followState];\n        return {\n            state: transition.target,\n            alt: config.alt,\n            stack\n        };\n    }\n    return undefined;\n}\nfunction hasConfigInRuleStopState(configs) {\n    for (const c of configs.elements) {\n        if (c.state.type === ATN_RULE_STOP) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction allConfigsInRuleStopStates(configs) {\n    for (const c of configs.elements) {\n        if (c.state.type !== ATN_RULE_STOP) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction hasConflictTerminatingPrediction(configs) {\n    if (allConfigsInRuleStopStates(configs)) {\n        return true;\n    }\n    const altSets = getConflictingAltSets(configs.elements);\n    const heuristic = hasConflictingAltSet(altSets) && !hasStateAssociatedWithOneAlt(altSets);\n    return heuristic;\n}\nfunction getConflictingAltSets(configs) {\n    const configToAlts = new Map();\n    for (const c of configs) {\n        const key = getATNConfigKey(c, false);\n        let alts = configToAlts.get(key);\n        if (alts === undefined) {\n            alts = {};\n            configToAlts.set(key, alts);\n        }\n        alts[c.alt] = true;\n    }\n    return configToAlts;\n}\nfunction hasConflictingAltSet(altSets) {\n    for (const value of Array.from(altSets.values())) {\n        if (Object.keys(value).length > 1) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction hasStateAssociatedWithOneAlt(altSets) {\n    for (const value of Array.from(altSets.values())) {\n        if (Object.keys(value).length === 1) {\n            return true;\n        }\n    }\n    return false;\n}\n//# sourceMappingURL=all-star-lookahead.js.map","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nexport var DocumentUri;\n(function (DocumentUri) {\n    function is(value) {\n        return typeof value === 'string';\n    }\n    DocumentUri.is = is;\n})(DocumentUri || (DocumentUri = {}));\nexport var URI;\n(function (URI) {\n    function is(value) {\n        return typeof value === 'string';\n    }\n    URI.is = is;\n})(URI || (URI = {}));\nexport var integer;\n(function (integer) {\n    integer.MIN_VALUE = -2147483648;\n    integer.MAX_VALUE = 2147483647;\n    function is(value) {\n        return typeof value === 'number' && integer.MIN_VALUE <= value && value <= integer.MAX_VALUE;\n    }\n    integer.is = is;\n})(integer || (integer = {}));\nexport var uinteger;\n(function (uinteger) {\n    uinteger.MIN_VALUE = 0;\n    uinteger.MAX_VALUE = 2147483647;\n    function is(value) {\n        return typeof value === 'number' && uinteger.MIN_VALUE <= value && value <= uinteger.MAX_VALUE;\n    }\n    uinteger.is = is;\n})(uinteger || (uinteger = {}));\n/**\n * The Position namespace provides helper functions to work with\n * {@link Position} literals.\n */\nexport var Position;\n(function (Position) {\n    /**\n     * Creates a new Position literal from the given line and character.\n     * @param line The position's line.\n     * @param character The position's character.\n     */\n    function create(line, character) {\n        if (line === Number.MAX_VALUE) {\n            line = uinteger.MAX_VALUE;\n        }\n        if (character === Number.MAX_VALUE) {\n            character = uinteger.MAX_VALUE;\n        }\n        return { line, character };\n    }\n    Position.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Position} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Is.uinteger(candidate.line) && Is.uinteger(candidate.character);\n    }\n    Position.is = is;\n})(Position || (Position = {}));\n/**\n * The Range namespace provides helper functions to work with\n * {@link Range} literals.\n */\nexport var Range;\n(function (Range) {\n    function create(one, two, three, four) {\n        if (Is.uinteger(one) && Is.uinteger(two) && Is.uinteger(three) && Is.uinteger(four)) {\n            return { start: Position.create(one, two), end: Position.create(three, four) };\n        }\n        else if (Position.is(one) && Position.is(two)) {\n            return { start: one, end: two };\n        }\n        else {\n            throw new Error(`Range#create called with invalid arguments[${one}, ${two}, ${three}, ${four}]`);\n        }\n    }\n    Range.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Range} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n    }\n    Range.is = is;\n})(Range || (Range = {}));\n/**\n * The Location namespace provides helper functions to work with\n * {@link Location} literals.\n */\nexport var Location;\n(function (Location) {\n    /**\n     * Creates a Location literal.\n     * @param uri The location's uri.\n     * @param range The location's range.\n     */\n    function create(uri, range) {\n        return { uri, range };\n    }\n    Location.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Location} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n    }\n    Location.is = is;\n})(Location || (Location = {}));\n/**\n * The LocationLink namespace provides helper functions to work with\n * {@link LocationLink} literals.\n */\nexport var LocationLink;\n(function (LocationLink) {\n    /**\n     * Creates a LocationLink literal.\n     * @param targetUri The definition's uri.\n     * @param targetRange The full range of the definition.\n     * @param targetSelectionRange The span of the symbol definition at the target.\n     * @param originSelectionRange The span of the symbol being defined in the originating source file.\n     */\n    function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\n        return { targetUri, targetRange, targetSelectionRange, originSelectionRange };\n    }\n    LocationLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link LocationLink} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri)\n            && Range.is(candidate.targetSelectionRange)\n            && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\n    }\n    LocationLink.is = is;\n})(LocationLink || (LocationLink = {}));\n/**\n * The Color namespace provides helper functions to work with\n * {@link Color} literals.\n */\nexport var Color;\n(function (Color) {\n    /**\n     * Creates a new Color literal.\n     */\n    function create(red, green, blue, alpha) {\n        return {\n            red,\n            green,\n            blue,\n            alpha,\n        };\n    }\n    Color.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Color} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.numberRange(candidate.red, 0, 1)\n            && Is.numberRange(candidate.green, 0, 1)\n            && Is.numberRange(candidate.blue, 0, 1)\n            && Is.numberRange(candidate.alpha, 0, 1);\n    }\n    Color.is = is;\n})(Color || (Color = {}));\n/**\n * The ColorInformation namespace provides helper functions to work with\n * {@link ColorInformation} literals.\n */\nexport var ColorInformation;\n(function (ColorInformation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(range, color) {\n        return {\n            range,\n            color,\n        };\n    }\n    ColorInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link ColorInformation} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.range) && Color.is(candidate.color);\n    }\n    ColorInformation.is = is;\n})(ColorInformation || (ColorInformation = {}));\n/**\n * The Color namespace provides helper functions to work with\n * {@link ColorPresentation} literals.\n */\nexport var ColorPresentation;\n(function (ColorPresentation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(label, textEdit, additionalTextEdits) {\n        return {\n            label,\n            textEdit,\n            additionalTextEdits,\n        };\n    }\n    ColorPresentation.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link ColorInformation} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.label)\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\n    }\n    ColorPresentation.is = is;\n})(ColorPresentation || (ColorPresentation = {}));\n/**\n * A set of predefined range kinds.\n */\nexport var FoldingRangeKind;\n(function (FoldingRangeKind) {\n    /**\n     * Folding range for a comment\n     */\n    FoldingRangeKind.Comment = 'comment';\n    /**\n     * Folding range for an import or include\n     */\n    FoldingRangeKind.Imports = 'imports';\n    /**\n     * Folding range for a region (e.g. `#region`)\n     */\n    FoldingRangeKind.Region = 'region';\n})(FoldingRangeKind || (FoldingRangeKind = {}));\n/**\n * The folding range namespace provides helper functions to work with\n * {@link FoldingRange} literals.\n */\nexport var FoldingRange;\n(function (FoldingRange) {\n    /**\n     * Creates a new FoldingRange literal.\n     */\n    function create(startLine, endLine, startCharacter, endCharacter, kind, collapsedText) {\n        const result = {\n            startLine,\n            endLine\n        };\n        if (Is.defined(startCharacter)) {\n            result.startCharacter = startCharacter;\n        }\n        if (Is.defined(endCharacter)) {\n            result.endCharacter = endCharacter;\n        }\n        if (Is.defined(kind)) {\n            result.kind = kind;\n        }\n        if (Is.defined(collapsedText)) {\n            result.collapsedText = collapsedText;\n        }\n        return result;\n    }\n    FoldingRange.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link FoldingRange} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.uinteger(candidate.startLine) && Is.uinteger(candidate.startLine)\n            && (Is.undefined(candidate.startCharacter) || Is.uinteger(candidate.startCharacter))\n            && (Is.undefined(candidate.endCharacter) || Is.uinteger(candidate.endCharacter))\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\n    }\n    FoldingRange.is = is;\n})(FoldingRange || (FoldingRange = {}));\n/**\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\n * {@link DiagnosticRelatedInformation} literals.\n */\nexport var DiagnosticRelatedInformation;\n(function (DiagnosticRelatedInformation) {\n    /**\n     * Creates a new DiagnosticRelatedInformation literal.\n     */\n    function create(location, message) {\n        return {\n            location,\n            message\n        };\n    }\n    DiagnosticRelatedInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link DiagnosticRelatedInformation} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\n    }\n    DiagnosticRelatedInformation.is = is;\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\n/**\n * The diagnostic's severity.\n */\nexport var DiagnosticSeverity;\n(function (DiagnosticSeverity) {\n    /**\n     * Reports an error.\n     */\n    DiagnosticSeverity.Error = 1;\n    /**\n     * Reports a warning.\n     */\n    DiagnosticSeverity.Warning = 2;\n    /**\n     * Reports an information.\n     */\n    DiagnosticSeverity.Information = 3;\n    /**\n     * Reports a hint.\n     */\n    DiagnosticSeverity.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\n/**\n * The diagnostic tags.\n *\n * @since 3.15.0\n */\nexport var DiagnosticTag;\n(function (DiagnosticTag) {\n    /**\n     * Unused or unnecessary code.\n     *\n     * Clients are allowed to render diagnostics with this tag faded out instead of having\n     * an error squiggle.\n     */\n    DiagnosticTag.Unnecessary = 1;\n    /**\n     * Deprecated or obsolete code.\n     *\n     * Clients are allowed to rendered diagnostics with this tag strike through.\n     */\n    DiagnosticTag.Deprecated = 2;\n})(DiagnosticTag || (DiagnosticTag = {}));\n/**\n * The CodeDescription namespace provides functions to deal with descriptions for diagnostic codes.\n *\n * @since 3.16.0\n */\nexport var CodeDescription;\n(function (CodeDescription) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.href);\n    }\n    CodeDescription.is = is;\n})(CodeDescription || (CodeDescription = {}));\n/**\n * The Diagnostic namespace provides helper functions to work with\n * {@link Diagnostic} literals.\n */\nexport var Diagnostic;\n(function (Diagnostic) {\n    /**\n     * Creates a new Diagnostic literal.\n     */\n    function create(range, message, severity, code, source, relatedInformation) {\n        let result = { range, message };\n        if (Is.defined(severity)) {\n            result.severity = severity;\n        }\n        if (Is.defined(code)) {\n            result.code = code;\n        }\n        if (Is.defined(source)) {\n            result.source = source;\n        }\n        if (Is.defined(relatedInformation)) {\n            result.relatedInformation = relatedInformation;\n        }\n        return result;\n    }\n    Diagnostic.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Diagnostic} interface.\n     */\n    function is(value) {\n        var _a;\n        let candidate = value;\n        return Is.defined(candidate)\n            && Range.is(candidate.range)\n            && Is.string(candidate.message)\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\n            && (Is.integer(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\n            && (Is.undefined(candidate.codeDescription) || (Is.string((_a = candidate.codeDescription) === null || _a === void 0 ? void 0 : _a.href)))\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\n    }\n    Diagnostic.is = is;\n})(Diagnostic || (Diagnostic = {}));\n/**\n * The Command namespace provides helper functions to work with\n * {@link Command} literals.\n */\nexport var Command;\n(function (Command) {\n    /**\n     * Creates a new Command literal.\n     */\n    function create(title, command, ...args) {\n        let result = { title, command };\n        if (Is.defined(args) && args.length > 0) {\n            result.arguments = args;\n        }\n        return result;\n    }\n    Command.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Command} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\n    }\n    Command.is = is;\n})(Command || (Command = {}));\n/**\n * The TextEdit namespace provides helper function to create replace,\n * insert and delete edits more easily.\n */\nexport var TextEdit;\n(function (TextEdit) {\n    /**\n     * Creates a replace text edit.\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     */\n    function replace(range, newText) {\n        return { range, newText };\n    }\n    TextEdit.replace = replace;\n    /**\n     * Creates an insert text edit.\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     */\n    function insert(position, newText) {\n        return { range: { start: position, end: position }, newText };\n    }\n    TextEdit.insert = insert;\n    /**\n     * Creates a delete text edit.\n     * @param range The range of text to be deleted.\n     */\n    function del(range) {\n        return { range, newText: '' };\n    }\n    TextEdit.del = del;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate)\n            && Is.string(candidate.newText)\n            && Range.is(candidate.range);\n    }\n    TextEdit.is = is;\n})(TextEdit || (TextEdit = {}));\nexport var ChangeAnnotation;\n(function (ChangeAnnotation) {\n    function create(label, needsConfirmation, description) {\n        const result = { label };\n        if (needsConfirmation !== undefined) {\n            result.needsConfirmation = needsConfirmation;\n        }\n        if (description !== undefined) {\n            result.description = description;\n        }\n        return result;\n    }\n    ChangeAnnotation.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.label) &&\n            (Is.boolean(candidate.needsConfirmation) || candidate.needsConfirmation === undefined) &&\n            (Is.string(candidate.description) || candidate.description === undefined);\n    }\n    ChangeAnnotation.is = is;\n})(ChangeAnnotation || (ChangeAnnotation = {}));\nexport var ChangeAnnotationIdentifier;\n(function (ChangeAnnotationIdentifier) {\n    function is(value) {\n        const candidate = value;\n        return Is.string(candidate);\n    }\n    ChangeAnnotationIdentifier.is = is;\n})(ChangeAnnotationIdentifier || (ChangeAnnotationIdentifier = {}));\nexport var AnnotatedTextEdit;\n(function (AnnotatedTextEdit) {\n    /**\n     * Creates an annotated replace text edit.\n     *\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     * @param annotation The annotation.\n     */\n    function replace(range, newText, annotation) {\n        return { range, newText, annotationId: annotation };\n    }\n    AnnotatedTextEdit.replace = replace;\n    /**\n     * Creates an annotated insert text edit.\n     *\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     * @param annotation The annotation.\n     */\n    function insert(position, newText, annotation) {\n        return { range: { start: position, end: position }, newText, annotationId: annotation };\n    }\n    AnnotatedTextEdit.insert = insert;\n    /**\n     * Creates an annotated delete text edit.\n     *\n     * @param range The range of text to be deleted.\n     * @param annotation The annotation.\n     */\n    function del(range, annotation) {\n        return { range, newText: '', annotationId: annotation };\n    }\n    AnnotatedTextEdit.del = del;\n    function is(value) {\n        const candidate = value;\n        return TextEdit.is(candidate) && (ChangeAnnotation.is(candidate.annotationId) || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    AnnotatedTextEdit.is = is;\n})(AnnotatedTextEdit || (AnnotatedTextEdit = {}));\n/**\n * The TextDocumentEdit namespace provides helper function to create\n * an edit that manipulates a text document.\n */\nexport var TextDocumentEdit;\n(function (TextDocumentEdit) {\n    /**\n     * Creates a new `TextDocumentEdit`\n     */\n    function create(textDocument, edits) {\n        return { textDocument, edits };\n    }\n    TextDocumentEdit.create = create;\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate)\n            && OptionalVersionedTextDocumentIdentifier.is(candidate.textDocument)\n            && Array.isArray(candidate.edits);\n    }\n    TextDocumentEdit.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\nexport var CreateFile;\n(function (CreateFile) {\n    function create(uri, options, annotation) {\n        let result = {\n            kind: 'create',\n            uri\n        };\n        if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    CreateFile.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.kind === 'create' && Is.string(candidate.uri) && (candidate.options === undefined ||\n            ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    CreateFile.is = is;\n})(CreateFile || (CreateFile = {}));\nexport var RenameFile;\n(function (RenameFile) {\n    function create(oldUri, newUri, options, annotation) {\n        let result = {\n            kind: 'rename',\n            oldUri,\n            newUri\n        };\n        if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    RenameFile.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) && (candidate.options === undefined ||\n            ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    RenameFile.is = is;\n})(RenameFile || (RenameFile = {}));\nexport var DeleteFile;\n(function (DeleteFile) {\n    function create(uri, options, annotation) {\n        let result = {\n            kind: 'delete',\n            uri\n        };\n        if (options !== undefined && (options.recursive !== undefined || options.ignoreIfNotExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    DeleteFile.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) && (candidate.options === undefined ||\n            ((candidate.options.recursive === undefined || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === undefined || Is.boolean(candidate.options.ignoreIfNotExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    DeleteFile.is = is;\n})(DeleteFile || (DeleteFile = {}));\nexport var WorkspaceEdit;\n(function (WorkspaceEdit) {\n    function is(value) {\n        let candidate = value;\n        return candidate &&\n            (candidate.changes !== undefined || candidate.documentChanges !== undefined) &&\n            (candidate.documentChanges === undefined || candidate.documentChanges.every((change) => {\n                if (Is.string(change.kind)) {\n                    return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\n                }\n                else {\n                    return TextDocumentEdit.is(change);\n                }\n            }));\n    }\n    WorkspaceEdit.is = is;\n})(WorkspaceEdit || (WorkspaceEdit = {}));\nclass TextEditChangeImpl {\n    constructor(edits, changeAnnotations) {\n        this.edits = edits;\n        this.changeAnnotations = changeAnnotations;\n    }\n    insert(position, newText, annotation) {\n        let edit;\n        let id;\n        if (annotation === undefined) {\n            edit = TextEdit.insert(position, newText);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.insert(position, newText, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.insert(position, newText, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    replace(range, newText, annotation) {\n        let edit;\n        let id;\n        if (annotation === undefined) {\n            edit = TextEdit.replace(range, newText);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.replace(range, newText, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.replace(range, newText, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    delete(range, annotation) {\n        let edit;\n        let id;\n        if (annotation === undefined) {\n            edit = TextEdit.del(range);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.del(range, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.del(range, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    add(edit) {\n        this.edits.push(edit);\n    }\n    all() {\n        return this.edits;\n    }\n    clear() {\n        this.edits.splice(0, this.edits.length);\n    }\n    assertChangeAnnotations(value) {\n        if (value === undefined) {\n            throw new Error(`Text edit change is not configured to manage change annotations.`);\n        }\n    }\n}\n/**\n * A helper class\n */\nclass ChangeAnnotations {\n    constructor(annotations) {\n        this._annotations = annotations === undefined ? Object.create(null) : annotations;\n        this._counter = 0;\n        this._size = 0;\n    }\n    all() {\n        return this._annotations;\n    }\n    get size() {\n        return this._size;\n    }\n    manage(idOrAnnotation, annotation) {\n        let id;\n        if (ChangeAnnotationIdentifier.is(idOrAnnotation)) {\n            id = idOrAnnotation;\n        }\n        else {\n            id = this.nextId();\n            annotation = idOrAnnotation;\n        }\n        if (this._annotations[id] !== undefined) {\n            throw new Error(`Id ${id} is already in use.`);\n        }\n        if (annotation === undefined) {\n            throw new Error(`No annotation provided for id ${id}`);\n        }\n        this._annotations[id] = annotation;\n        this._size++;\n        return id;\n    }\n    nextId() {\n        this._counter++;\n        return this._counter.toString();\n    }\n}\n/**\n * A workspace change helps constructing changes to a workspace.\n */\nexport class WorkspaceChange {\n    constructor(workspaceEdit) {\n        this._textEditChanges = Object.create(null);\n        if (workspaceEdit !== undefined) {\n            this._workspaceEdit = workspaceEdit;\n            if (workspaceEdit.documentChanges) {\n                this._changeAnnotations = new ChangeAnnotations(workspaceEdit.changeAnnotations);\n                workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n                workspaceEdit.documentChanges.forEach((change) => {\n                    if (TextDocumentEdit.is(change)) {\n                        const textEditChange = new TextEditChangeImpl(change.edits, this._changeAnnotations);\n                        this._textEditChanges[change.textDocument.uri] = textEditChange;\n                    }\n                });\n            }\n            else if (workspaceEdit.changes) {\n                Object.keys(workspaceEdit.changes).forEach((key) => {\n                    const textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\n                    this._textEditChanges[key] = textEditChange;\n                });\n            }\n        }\n        else {\n            this._workspaceEdit = {};\n        }\n    }\n    /**\n     * Returns the underlying {@link WorkspaceEdit} literal\n     * use to be returned from a workspace edit operation like rename.\n     */\n    get edit() {\n        this.initDocumentChanges();\n        if (this._changeAnnotations !== undefined) {\n            if (this._changeAnnotations.size === 0) {\n                this._workspaceEdit.changeAnnotations = undefined;\n            }\n            else {\n                this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n            }\n        }\n        return this._workspaceEdit;\n    }\n    getTextEditChange(key) {\n        if (OptionalVersionedTextDocumentIdentifier.is(key)) {\n            this.initDocumentChanges();\n            if (this._workspaceEdit.documentChanges === undefined) {\n                throw new Error('Workspace edit is not configured for document changes.');\n            }\n            const textDocument = { uri: key.uri, version: key.version };\n            let result = this._textEditChanges[textDocument.uri];\n            if (!result) {\n                const edits = [];\n                const textDocumentEdit = {\n                    textDocument,\n                    edits\n                };\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\n                result = new TextEditChangeImpl(edits, this._changeAnnotations);\n                this._textEditChanges[textDocument.uri] = result;\n            }\n            return result;\n        }\n        else {\n            this.initChanges();\n            if (this._workspaceEdit.changes === undefined) {\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\n            }\n            let result = this._textEditChanges[key];\n            if (!result) {\n                let edits = [];\n                this._workspaceEdit.changes[key] = edits;\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[key] = result;\n            }\n            return result;\n        }\n    }\n    initDocumentChanges() {\n        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n            this._changeAnnotations = new ChangeAnnotations();\n            this._workspaceEdit.documentChanges = [];\n            this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n        }\n    }\n    initChanges() {\n        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n            this._workspaceEdit.changes = Object.create(null);\n        }\n    }\n    createFile(uri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        let annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        let operation;\n        let id;\n        if (annotation === undefined) {\n            operation = CreateFile.create(uri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = CreateFile.create(uri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    renameFile(oldUri, newUri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        let annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        let operation;\n        let id;\n        if (annotation === undefined) {\n            operation = RenameFile.create(oldUri, newUri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = RenameFile.create(oldUri, newUri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    deleteFile(uri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        let annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        let operation;\n        let id;\n        if (annotation === undefined) {\n            operation = DeleteFile.create(uri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = DeleteFile.create(uri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n}\n/**\n * The TextDocumentIdentifier namespace provides helper functions to work with\n * {@link TextDocumentIdentifier} literals.\n */\nexport var TextDocumentIdentifier;\n(function (TextDocumentIdentifier) {\n    /**\n     * Creates a new TextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     */\n    function create(uri) {\n        return { uri };\n    }\n    TextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link TextDocumentIdentifier} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri);\n    }\n    TextDocumentIdentifier.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\n/**\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\n * {@link VersionedTextDocumentIdentifier} literals.\n */\nexport var VersionedTextDocumentIdentifier;\n(function (VersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new VersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param version The document's version.\n     */\n    function create(uri, version) {\n        return { uri, version };\n    }\n    VersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link VersionedTextDocumentIdentifier} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.integer(candidate.version);\n    }\n    VersionedTextDocumentIdentifier.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\n/**\n * The OptionalVersionedTextDocumentIdentifier namespace provides helper functions to work with\n * {@link OptionalVersionedTextDocumentIdentifier} literals.\n */\nexport var OptionalVersionedTextDocumentIdentifier;\n(function (OptionalVersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new OptionalVersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param version The document's version.\n     */\n    function create(uri, version) {\n        return { uri, version };\n    }\n    OptionalVersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link OptionalVersionedTextDocumentIdentifier} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.integer(candidate.version));\n    }\n    OptionalVersionedTextDocumentIdentifier.is = is;\n})(OptionalVersionedTextDocumentIdentifier || (OptionalVersionedTextDocumentIdentifier = {}));\n/**\n * The TextDocumentItem namespace provides helper functions to work with\n * {@link TextDocumentItem} literals.\n */\nexport var TextDocumentItem;\n(function (TextDocumentItem) {\n    /**\n     * Creates a new TextDocumentItem literal.\n     * @param uri The document's uri.\n     * @param languageId The document's language identifier.\n     * @param version The document's version number.\n     * @param text The document's text.\n     */\n    function create(uri, languageId, version, text) {\n        return { uri, languageId, version, text };\n    }\n    TextDocumentItem.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link TextDocumentItem} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.integer(candidate.version) && Is.string(candidate.text);\n    }\n    TextDocumentItem.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\n/**\n * Describes the content type that a client supports in various\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n *\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\n * are reserved for internal usage.\n */\nexport var MarkupKind;\n(function (MarkupKind) {\n    /**\n     * Plain text is supported as a content format\n     */\n    MarkupKind.PlainText = 'plaintext';\n    /**\n     * Markdown is supported as a content format\n     */\n    MarkupKind.Markdown = 'markdown';\n    /**\n     * Checks whether the given value is a value of the {@link MarkupKind} type.\n     */\n    function is(value) {\n        const candidate = value;\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\n    }\n    MarkupKind.is = is;\n})(MarkupKind || (MarkupKind = {}));\nexport var MarkupContent;\n(function (MarkupContent) {\n    /**\n     * Checks whether the given value conforms to the {@link MarkupContent} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\n    }\n    MarkupContent.is = is;\n})(MarkupContent || (MarkupContent = {}));\n/**\n * The kind of a completion entry.\n */\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind.Text = 1;\n    CompletionItemKind.Method = 2;\n    CompletionItemKind.Function = 3;\n    CompletionItemKind.Constructor = 4;\n    CompletionItemKind.Field = 5;\n    CompletionItemKind.Variable = 6;\n    CompletionItemKind.Class = 7;\n    CompletionItemKind.Interface = 8;\n    CompletionItemKind.Module = 9;\n    CompletionItemKind.Property = 10;\n    CompletionItemKind.Unit = 11;\n    CompletionItemKind.Value = 12;\n    CompletionItemKind.Enum = 13;\n    CompletionItemKind.Keyword = 14;\n    CompletionItemKind.Snippet = 15;\n    CompletionItemKind.Color = 16;\n    CompletionItemKind.File = 17;\n    CompletionItemKind.Reference = 18;\n    CompletionItemKind.Folder = 19;\n    CompletionItemKind.EnumMember = 20;\n    CompletionItemKind.Constant = 21;\n    CompletionItemKind.Struct = 22;\n    CompletionItemKind.Event = 23;\n    CompletionItemKind.Operator = 24;\n    CompletionItemKind.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\n/**\n * Defines whether the insert text in a completion item should be interpreted as\n * plain text or a snippet.\n */\nexport var InsertTextFormat;\n(function (InsertTextFormat) {\n    /**\n     * The primary text to be inserted is treated as a plain string.\n     */\n    InsertTextFormat.PlainText = 1;\n    /**\n     * The primary text to be inserted is treated as a snippet.\n     *\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\n     * the end of the snippet. Placeholders with equal identifiers are linked,\n     * that is typing in one will update others too.\n     *\n     * See also: https://microsoft.github.io/language-server-protocol/specifications/specification-current/#snippet_syntax\n     */\n    InsertTextFormat.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\n/**\n * Completion item tags are extra annotations that tweak the rendering of a completion\n * item.\n *\n * @since 3.15.0\n */\nexport var CompletionItemTag;\n(function (CompletionItemTag) {\n    /**\n     * Render a completion as obsolete, usually using a strike-out.\n     */\n    CompletionItemTag.Deprecated = 1;\n})(CompletionItemTag || (CompletionItemTag = {}));\n/**\n * The InsertReplaceEdit namespace provides functions to deal with insert / replace edits.\n *\n * @since 3.16.0\n */\nexport var InsertReplaceEdit;\n(function (InsertReplaceEdit) {\n    /**\n     * Creates a new insert / replace edit\n     */\n    function create(newText, insert, replace) {\n        return { newText, insert, replace };\n    }\n    InsertReplaceEdit.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link InsertReplaceEdit} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return candidate && Is.string(candidate.newText) && Range.is(candidate.insert) && Range.is(candidate.replace);\n    }\n    InsertReplaceEdit.is = is;\n})(InsertReplaceEdit || (InsertReplaceEdit = {}));\n/**\n * How whitespace and indentation is handled during completion\n * item insertion.\n *\n * @since 3.16.0\n */\nexport var InsertTextMode;\n(function (InsertTextMode) {\n    /**\n     * The insertion or replace strings is taken as it is. If the\n     * value is multi line the lines below the cursor will be\n     * inserted using the indentation defined in the string value.\n     * The client will not apply any kind of adjustments to the\n     * string.\n     */\n    InsertTextMode.asIs = 1;\n    /**\n     * The editor adjusts leading whitespace of new lines so that\n     * they match the indentation up to the cursor of the line for\n     * which the item is accepted.\n     *\n     * Consider a line like this: <2tabs><cursor><3tabs>foo. Accepting a\n     * multi line completion item is indented using 2 tabs and all\n     * following lines inserted will be indented using 2 tabs as well.\n     */\n    InsertTextMode.adjustIndentation = 2;\n})(InsertTextMode || (InsertTextMode = {}));\nexport var CompletionItemLabelDetails;\n(function (CompletionItemLabelDetails) {\n    function is(value) {\n        const candidate = value;\n        return candidate && (Is.string(candidate.detail) || candidate.detail === undefined) &&\n            (Is.string(candidate.description) || candidate.description === undefined);\n    }\n    CompletionItemLabelDetails.is = is;\n})(CompletionItemLabelDetails || (CompletionItemLabelDetails = {}));\n/**\n * The CompletionItem namespace provides functions to deal with\n * completion items.\n */\nexport var CompletionItem;\n(function (CompletionItem) {\n    /**\n     * Create a completion item and seed it with a label.\n     * @param label The completion item's label\n     */\n    function create(label) {\n        return { label };\n    }\n    CompletionItem.create = create;\n})(CompletionItem || (CompletionItem = {}));\n/**\n * The CompletionList namespace provides functions to deal with\n * completion lists.\n */\nexport var CompletionList;\n(function (CompletionList) {\n    /**\n     * Creates a new completion list.\n     *\n     * @param items The completion items.\n     * @param isIncomplete The list is not complete.\n     */\n    function create(items, isIncomplete) {\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\n    }\n    CompletionList.create = create;\n})(CompletionList || (CompletionList = {}));\nexport var MarkedString;\n(function (MarkedString) {\n    /**\n     * Creates a marked string from plain text.\n     *\n     * @param plainText The plain text.\n     */\n    function fromPlainText(plainText) {\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&'); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    }\n    MarkedString.fromPlainText = fromPlainText;\n    /**\n     * Checks whether the given value conforms to the {@link MarkedString} type.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\n    }\n    MarkedString.is = is;\n})(MarkedString || (MarkedString = {}));\nexport var Hover;\n(function (Hover) {\n    /**\n     * Checks whether the given value conforms to the {@link Hover} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\n            MarkedString.is(candidate.contents) ||\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === undefined || Range.is(value.range));\n    }\n    Hover.is = is;\n})(Hover || (Hover = {}));\n/**\n * The ParameterInformation namespace provides helper functions to work with\n * {@link ParameterInformation} literals.\n */\nexport var ParameterInformation;\n(function (ParameterInformation) {\n    /**\n     * Creates a new parameter information literal.\n     *\n     * @param label A label string.\n     * @param documentation A doc string.\n     */\n    function create(label, documentation) {\n        return documentation ? { label, documentation } : { label };\n    }\n    ParameterInformation.create = create;\n})(ParameterInformation || (ParameterInformation = {}));\n/**\n * The SignatureInformation namespace provides helper functions to work with\n * {@link SignatureInformation} literals.\n */\nexport var SignatureInformation;\n(function (SignatureInformation) {\n    function create(label, documentation, ...parameters) {\n        let result = { label };\n        if (Is.defined(documentation)) {\n            result.documentation = documentation;\n        }\n        if (Is.defined(parameters)) {\n            result.parameters = parameters;\n        }\n        else {\n            result.parameters = [];\n        }\n        return result;\n    }\n    SignatureInformation.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrence.\n     */\n    DocumentHighlightKind.Text = 1;\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind.Read = 2;\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * DocumentHighlight namespace to provide helper functions to work with\n * {@link DocumentHighlight} literals.\n */\nexport var DocumentHighlight;\n(function (DocumentHighlight) {\n    /**\n     * Create a DocumentHighlight object.\n     * @param range The range the highlight applies to.\n     * @param kind The highlight kind\n     */\n    function create(range, kind) {\n        let result = { range };\n        if (Is.number(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    DocumentHighlight.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n    SymbolKind.File = 1;\n    SymbolKind.Module = 2;\n    SymbolKind.Namespace = 3;\n    SymbolKind.Package = 4;\n    SymbolKind.Class = 5;\n    SymbolKind.Method = 6;\n    SymbolKind.Property = 7;\n    SymbolKind.Field = 8;\n    SymbolKind.Constructor = 9;\n    SymbolKind.Enum = 10;\n    SymbolKind.Interface = 11;\n    SymbolKind.Function = 12;\n    SymbolKind.Variable = 13;\n    SymbolKind.Constant = 14;\n    SymbolKind.String = 15;\n    SymbolKind.Number = 16;\n    SymbolKind.Boolean = 17;\n    SymbolKind.Array = 18;\n    SymbolKind.Object = 19;\n    SymbolKind.Key = 20;\n    SymbolKind.Null = 21;\n    SymbolKind.EnumMember = 22;\n    SymbolKind.Struct = 23;\n    SymbolKind.Event = 24;\n    SymbolKind.Operator = 25;\n    SymbolKind.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\n/**\n * Symbol tags are extra annotations that tweak the rendering of a symbol.\n *\n * @since 3.16\n */\nexport var SymbolTag;\n(function (SymbolTag) {\n    /**\n     * Render a symbol as obsolete, usually using a strike-out.\n     */\n    SymbolTag.Deprecated = 1;\n})(SymbolTag || (SymbolTag = {}));\nexport var SymbolInformation;\n(function (SymbolInformation) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the location of the symbol.\n     * @param uri The resource of the location of symbol.\n     * @param containerName The name of the symbol containing the symbol.\n     */\n    function create(name, kind, range, uri, containerName) {\n        let result = {\n            name,\n            kind,\n            location: { uri, range }\n        };\n        if (containerName) {\n            result.containerName = containerName;\n        }\n        return result;\n    }\n    SymbolInformation.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\nexport var WorkspaceSymbol;\n(function (WorkspaceSymbol) {\n    /**\n     * Create a new workspace symbol.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param uri The resource of the location of the symbol.\n     * @param range An options range of the location.\n     * @returns A WorkspaceSymbol.\n     */\n    function create(name, kind, uri, range) {\n        return range !== undefined\n            ? { name, kind, location: { uri, range } }\n            : { name, kind, location: { uri } };\n    }\n    WorkspaceSymbol.create = create;\n})(WorkspaceSymbol || (WorkspaceSymbol = {}));\nexport var DocumentSymbol;\n(function (DocumentSymbol) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param detail The detail of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the symbol.\n     * @param selectionRange The selectionRange of the symbol.\n     * @param children Children of the symbol.\n     */\n    function create(name, detail, kind, range, selectionRange, children) {\n        let result = {\n            name,\n            detail,\n            kind,\n            range,\n            selectionRange\n        };\n        if (children !== undefined) {\n            result.children = children;\n        }\n        return result;\n    }\n    DocumentSymbol.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link DocumentSymbol} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return candidate &&\n            Is.string(candidate.name) && Is.number(candidate.kind) &&\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\n            (candidate.detail === undefined || Is.string(candidate.detail)) &&\n            (candidate.deprecated === undefined || Is.boolean(candidate.deprecated)) &&\n            (candidate.children === undefined || Array.isArray(candidate.children)) &&\n            (candidate.tags === undefined || Array.isArray(candidate.tags));\n    }\n    DocumentSymbol.is = is;\n})(DocumentSymbol || (DocumentSymbol = {}));\n/**\n * A set of predefined code action kinds\n */\nexport var CodeActionKind;\n(function (CodeActionKind) {\n    /**\n     * Empty kind.\n     */\n    CodeActionKind.Empty = '';\n    /**\n     * Base kind for quickfix actions: 'quickfix'\n     */\n    CodeActionKind.QuickFix = 'quickfix';\n    /**\n     * Base kind for refactoring actions: 'refactor'\n     */\n    CodeActionKind.Refactor = 'refactor';\n    /**\n     * Base kind for refactoring extraction actions: 'refactor.extract'\n     *\n     * Example extract actions:\n     *\n     * - Extract method\n     * - Extract function\n     * - Extract variable\n     * - Extract interface from class\n     * - ...\n     */\n    CodeActionKind.RefactorExtract = 'refactor.extract';\n    /**\n     * Base kind for refactoring inline actions: 'refactor.inline'\n     *\n     * Example inline actions:\n     *\n     * - Inline function\n     * - Inline variable\n     * - Inline constant\n     * - ...\n     */\n    CodeActionKind.RefactorInline = 'refactor.inline';\n    /**\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\n     *\n     * Example rewrite actions:\n     *\n     * - Convert JavaScript function to class\n     * - Add or remove parameter\n     * - Encapsulate field\n     * - Make method static\n     * - Move method to base class\n     * - ...\n     */\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\n    /**\n     * Base kind for source actions: `source`\n     *\n     * Source code actions apply to the entire file.\n     */\n    CodeActionKind.Source = 'source';\n    /**\n     * Base kind for an organize imports source action: `source.organizeImports`\n     */\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\n    /**\n     * Base kind for auto-fix source actions: `source.fixAll`.\n     *\n     * Fix all actions automatically fix errors that have a clear fix that do not require user input.\n     * They should not suppress errors or perform unsafe fixes such as generating new types or classes.\n     *\n     * @since 3.15.0\n     */\n    CodeActionKind.SourceFixAll = 'source.fixAll';\n})(CodeActionKind || (CodeActionKind = {}));\n/**\n * The reason why code actions were requested.\n *\n * @since 3.17.0\n */\nexport var CodeActionTriggerKind;\n(function (CodeActionTriggerKind) {\n    /**\n     * Code actions were explicitly requested by the user or by an extension.\n     */\n    CodeActionTriggerKind.Invoked = 1;\n    /**\n     * Code actions were requested automatically.\n     *\n     * This typically happens when current selection in a file changes, but can\n     * also be triggered when file content changes.\n     */\n    CodeActionTriggerKind.Automatic = 2;\n})(CodeActionTriggerKind || (CodeActionTriggerKind = {}));\n/**\n * The CodeActionContext namespace provides helper functions to work with\n * {@link CodeActionContext} literals.\n */\nexport var CodeActionContext;\n(function (CodeActionContext) {\n    /**\n     * Creates a new CodeActionContext literal.\n     */\n    function create(diagnostics, only, triggerKind) {\n        let result = { diagnostics };\n        if (only !== undefined && only !== null) {\n            result.only = only;\n        }\n        if (triggerKind !== undefined && triggerKind !== null) {\n            result.triggerKind = triggerKind;\n        }\n        return result;\n    }\n    CodeActionContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link CodeActionContext} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is)\n            && (candidate.only === undefined || Is.typedArray(candidate.only, Is.string))\n            && (candidate.triggerKind === undefined || candidate.triggerKind === CodeActionTriggerKind.Invoked || candidate.triggerKind === CodeActionTriggerKind.Automatic);\n    }\n    CodeActionContext.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\nexport var CodeAction;\n(function (CodeAction) {\n    function create(title, kindOrCommandOrEdit, kind) {\n        let result = { title };\n        let checkKind = true;\n        if (typeof kindOrCommandOrEdit === 'string') {\n            checkKind = false;\n            result.kind = kindOrCommandOrEdit;\n        }\n        else if (Command.is(kindOrCommandOrEdit)) {\n            result.command = kindOrCommandOrEdit;\n        }\n        else {\n            result.edit = kindOrCommandOrEdit;\n        }\n        if (checkKind && kind !== undefined) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    CodeAction.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && Is.string(candidate.title) &&\n            (candidate.diagnostics === undefined || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\n            (candidate.kind === undefined || Is.string(candidate.kind)) &&\n            (candidate.edit !== undefined || candidate.command !== undefined) &&\n            (candidate.command === undefined || Command.is(candidate.command)) &&\n            (candidate.isPreferred === undefined || Is.boolean(candidate.isPreferred)) &&\n            (candidate.edit === undefined || WorkspaceEdit.is(candidate.edit));\n    }\n    CodeAction.is = is;\n})(CodeAction || (CodeAction = {}));\n/**\n * The CodeLens namespace provides helper functions to work with\n * {@link CodeLens} literals.\n */\nexport var CodeLens;\n(function (CodeLens) {\n    /**\n     * Creates a new CodeLens literal.\n     */\n    function create(range, data) {\n        let result = { range };\n        if (Is.defined(data)) {\n            result.data = data;\n        }\n        return result;\n    }\n    CodeLens.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link CodeLens} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n    }\n    CodeLens.is = is;\n})(CodeLens || (CodeLens = {}));\n/**\n * The FormattingOptions namespace provides helper functions to work with\n * {@link FormattingOptions} literals.\n */\nexport var FormattingOptions;\n(function (FormattingOptions) {\n    /**\n     * Creates a new FormattingOptions literal.\n     */\n    function create(tabSize, insertSpaces) {\n        return { tabSize, insertSpaces };\n    }\n    FormattingOptions.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link FormattingOptions} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.uinteger(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n    }\n    FormattingOptions.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\n/**\n * The DocumentLink namespace provides helper functions to work with\n * {@link DocumentLink} literals.\n */\nexport var DocumentLink;\n(function (DocumentLink) {\n    /**\n     * Creates a new DocumentLink literal.\n     */\n    function create(range, target, data) {\n        return { range, target, data };\n    }\n    DocumentLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link DocumentLink} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n    }\n    DocumentLink.is = is;\n})(DocumentLink || (DocumentLink = {}));\n/**\n * The SelectionRange namespace provides helper function to work with\n * SelectionRange literals.\n */\nexport var SelectionRange;\n(function (SelectionRange) {\n    /**\n     * Creates a new SelectionRange\n     * @param range the range.\n     * @param parent an optional parent.\n     */\n    function create(range, parent) {\n        return { range, parent };\n    }\n    SelectionRange.create = create;\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.range) && (candidate.parent === undefined || SelectionRange.is(candidate.parent));\n    }\n    SelectionRange.is = is;\n})(SelectionRange || (SelectionRange = {}));\n/**\n * A set of predefined token types. This set is not fixed\n * an clients can specify additional token types via the\n * corresponding client capabilities.\n *\n * @since 3.16.0\n */\nexport var SemanticTokenTypes;\n(function (SemanticTokenTypes) {\n    SemanticTokenTypes[\"namespace\"] = \"namespace\";\n    /**\n     * Represents a generic type. Acts as a fallback for types which can't be mapped to\n     * a specific type like class or enum.\n     */\n    SemanticTokenTypes[\"type\"] = \"type\";\n    SemanticTokenTypes[\"class\"] = \"class\";\n    SemanticTokenTypes[\"enum\"] = \"enum\";\n    SemanticTokenTypes[\"interface\"] = \"interface\";\n    SemanticTokenTypes[\"struct\"] = \"struct\";\n    SemanticTokenTypes[\"typeParameter\"] = \"typeParameter\";\n    SemanticTokenTypes[\"parameter\"] = \"parameter\";\n    SemanticTokenTypes[\"variable\"] = \"variable\";\n    SemanticTokenTypes[\"property\"] = \"property\";\n    SemanticTokenTypes[\"enumMember\"] = \"enumMember\";\n    SemanticTokenTypes[\"event\"] = \"event\";\n    SemanticTokenTypes[\"function\"] = \"function\";\n    SemanticTokenTypes[\"method\"] = \"method\";\n    SemanticTokenTypes[\"macro\"] = \"macro\";\n    SemanticTokenTypes[\"keyword\"] = \"keyword\";\n    SemanticTokenTypes[\"modifier\"] = \"modifier\";\n    SemanticTokenTypes[\"comment\"] = \"comment\";\n    SemanticTokenTypes[\"string\"] = \"string\";\n    SemanticTokenTypes[\"number\"] = \"number\";\n    SemanticTokenTypes[\"regexp\"] = \"regexp\";\n    SemanticTokenTypes[\"operator\"] = \"operator\";\n    /**\n     * @since 3.17.0\n     */\n    SemanticTokenTypes[\"decorator\"] = \"decorator\";\n})(SemanticTokenTypes || (SemanticTokenTypes = {}));\n/**\n * A set of predefined token modifiers. This set is not fixed\n * an clients can specify additional token types via the\n * corresponding client capabilities.\n *\n * @since 3.16.0\n */\nexport var SemanticTokenModifiers;\n(function (SemanticTokenModifiers) {\n    SemanticTokenModifiers[\"declaration\"] = \"declaration\";\n    SemanticTokenModifiers[\"definition\"] = \"definition\";\n    SemanticTokenModifiers[\"readonly\"] = \"readonly\";\n    SemanticTokenModifiers[\"static\"] = \"static\";\n    SemanticTokenModifiers[\"deprecated\"] = \"deprecated\";\n    SemanticTokenModifiers[\"abstract\"] = \"abstract\";\n    SemanticTokenModifiers[\"async\"] = \"async\";\n    SemanticTokenModifiers[\"modification\"] = \"modification\";\n    SemanticTokenModifiers[\"documentation\"] = \"documentation\";\n    SemanticTokenModifiers[\"defaultLibrary\"] = \"defaultLibrary\";\n})(SemanticTokenModifiers || (SemanticTokenModifiers = {}));\n/**\n * @since 3.16.0\n */\nexport var SemanticTokens;\n(function (SemanticTokens) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && (candidate.resultId === undefined || typeof candidate.resultId === 'string') &&\n            Array.isArray(candidate.data) && (candidate.data.length === 0 || typeof candidate.data[0] === 'number');\n    }\n    SemanticTokens.is = is;\n})(SemanticTokens || (SemanticTokens = {}));\n/**\n * The InlineValueText namespace provides functions to deal with InlineValueTexts.\n *\n * @since 3.17.0\n */\nexport var InlineValueText;\n(function (InlineValueText) {\n    /**\n     * Creates a new InlineValueText literal.\n     */\n    function create(range, text) {\n        return { range, text };\n    }\n    InlineValueText.create = create;\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range) && Is.string(candidate.text);\n    }\n    InlineValueText.is = is;\n})(InlineValueText || (InlineValueText = {}));\n/**\n * The InlineValueVariableLookup namespace provides functions to deal with InlineValueVariableLookups.\n *\n * @since 3.17.0\n */\nexport var InlineValueVariableLookup;\n(function (InlineValueVariableLookup) {\n    /**\n     * Creates a new InlineValueText literal.\n     */\n    function create(range, variableName, caseSensitiveLookup) {\n        return { range, variableName, caseSensitiveLookup };\n    }\n    InlineValueVariableLookup.create = create;\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range) && Is.boolean(candidate.caseSensitiveLookup)\n            && (Is.string(candidate.variableName) || candidate.variableName === undefined);\n    }\n    InlineValueVariableLookup.is = is;\n})(InlineValueVariableLookup || (InlineValueVariableLookup = {}));\n/**\n * The InlineValueEvaluatableExpression namespace provides functions to deal with InlineValueEvaluatableExpression.\n *\n * @since 3.17.0\n */\nexport var InlineValueEvaluatableExpression;\n(function (InlineValueEvaluatableExpression) {\n    /**\n     * Creates a new InlineValueEvaluatableExpression literal.\n     */\n    function create(range, expression) {\n        return { range, expression };\n    }\n    InlineValueEvaluatableExpression.create = create;\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range)\n            && (Is.string(candidate.expression) || candidate.expression === undefined);\n    }\n    InlineValueEvaluatableExpression.is = is;\n})(InlineValueEvaluatableExpression || (InlineValueEvaluatableExpression = {}));\n/**\n * The InlineValueContext namespace provides helper functions to work with\n * {@link InlineValueContext} literals.\n *\n * @since 3.17.0\n */\nexport var InlineValueContext;\n(function (InlineValueContext) {\n    /**\n     * Creates a new InlineValueContext literal.\n     */\n    function create(frameId, stoppedLocation) {\n        return { frameId, stoppedLocation };\n    }\n    InlineValueContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link InlineValueContext} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.defined(candidate) && Range.is(value.stoppedLocation);\n    }\n    InlineValueContext.is = is;\n})(InlineValueContext || (InlineValueContext = {}));\n/**\n * Inlay hint kinds.\n *\n * @since 3.17.0\n */\nexport var InlayHintKind;\n(function (InlayHintKind) {\n    /**\n     * An inlay hint that for a type annotation.\n     */\n    InlayHintKind.Type = 1;\n    /**\n     * An inlay hint that is for a parameter.\n     */\n    InlayHintKind.Parameter = 2;\n    function is(value) {\n        return value === 1 || value === 2;\n    }\n    InlayHintKind.is = is;\n})(InlayHintKind || (InlayHintKind = {}));\nexport var InlayHintLabelPart;\n(function (InlayHintLabelPart) {\n    function create(value) {\n        return { value };\n    }\n    InlayHintLabelPart.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate)\n            && (candidate.tooltip === undefined || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip))\n            && (candidate.location === undefined || Location.is(candidate.location))\n            && (candidate.command === undefined || Command.is(candidate.command));\n    }\n    InlayHintLabelPart.is = is;\n})(InlayHintLabelPart || (InlayHintLabelPart = {}));\nexport var InlayHint;\n(function (InlayHint) {\n    function create(position, label, kind) {\n        const result = { position, label };\n        if (kind !== undefined) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    InlayHint.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Position.is(candidate.position)\n            && (Is.string(candidate.label) || Is.typedArray(candidate.label, InlayHintLabelPart.is))\n            && (candidate.kind === undefined || InlayHintKind.is(candidate.kind))\n            && (candidate.textEdits === undefined) || Is.typedArray(candidate.textEdits, TextEdit.is)\n            && (candidate.tooltip === undefined || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip))\n            && (candidate.paddingLeft === undefined || Is.boolean(candidate.paddingLeft))\n            && (candidate.paddingRight === undefined || Is.boolean(candidate.paddingRight));\n    }\n    InlayHint.is = is;\n})(InlayHint || (InlayHint = {}));\nexport var StringValue;\n(function (StringValue) {\n    function createSnippet(value) {\n        return { kind: 'snippet', value };\n    }\n    StringValue.createSnippet = createSnippet;\n})(StringValue || (StringValue = {}));\nexport var InlineCompletionItem;\n(function (InlineCompletionItem) {\n    function create(insertText, filterText, range, command) {\n        return { insertText, filterText, range, command };\n    }\n    InlineCompletionItem.create = create;\n})(InlineCompletionItem || (InlineCompletionItem = {}));\nexport var InlineCompletionList;\n(function (InlineCompletionList) {\n    function create(items) {\n        return { items };\n    }\n    InlineCompletionList.create = create;\n})(InlineCompletionList || (InlineCompletionList = {}));\n/**\n * Describes how an {@link InlineCompletionItemProvider inline completion provider} was triggered.\n *\n * @since 3.18.0\n * @proposed\n */\nexport var InlineCompletionTriggerKind;\n(function (InlineCompletionTriggerKind) {\n    /**\n     * Completion was triggered explicitly by a user gesture.\n     */\n    InlineCompletionTriggerKind.Invoked = 0;\n    /**\n     * Completion was triggered automatically while editing.\n     */\n    InlineCompletionTriggerKind.Automatic = 1;\n})(InlineCompletionTriggerKind || (InlineCompletionTriggerKind = {}));\nexport var SelectedCompletionInfo;\n(function (SelectedCompletionInfo) {\n    function create(range, text) {\n        return { range, text };\n    }\n    SelectedCompletionInfo.create = create;\n})(SelectedCompletionInfo || (SelectedCompletionInfo = {}));\nexport var InlineCompletionContext;\n(function (InlineCompletionContext) {\n    function create(triggerKind, selectedCompletionInfo) {\n        return { triggerKind, selectedCompletionInfo };\n    }\n    InlineCompletionContext.create = create;\n})(InlineCompletionContext || (InlineCompletionContext = {}));\nexport var WorkspaceFolder;\n(function (WorkspaceFolder) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && URI.is(candidate.uri) && Is.string(candidate.name);\n    }\n    WorkspaceFolder.is = is;\n})(WorkspaceFolder || (WorkspaceFolder = {}));\nexport const EOL = ['\\n', '\\r\\n', '\\r'];\n/**\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n */\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new ITextDocument literal from the given uri and content.\n     * @param uri The document's uri.\n     * @param languageId The document's language Id.\n     * @param version The document's version.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link ITextDocument} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.uinteger(candidate.lineCount)\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n    }\n    TextDocument.is = is;\n    function applyEdits(document, edits) {\n        let text = document.getText();\n        let sortedEdits = mergeSort(edits, (a, b) => {\n            let diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return diff;\n        });\n        let lastModifiedOffset = text.length;\n        for (let i = sortedEdits.length - 1; i >= 0; i--) {\n            let e = sortedEdits[i];\n            let startOffset = document.offsetAt(e.range.start);\n            let endOffset = document.offsetAt(e.range.end);\n            if (endOffset <= lastModifiedOffset) {\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n            }\n            else {\n                throw new Error('Overlapping edit');\n            }\n            lastModifiedOffset = startOffset;\n        }\n        return text;\n    }\n    TextDocument.applyEdits = applyEdits;\n    function mergeSort(data, compare) {\n        if (data.length <= 1) {\n            // sorted\n            return data;\n        }\n        const p = (data.length / 2) | 0;\n        const left = data.slice(0, p);\n        const right = data.slice(p);\n        mergeSort(left, compare);\n        mergeSort(right, compare);\n        let leftIdx = 0;\n        let rightIdx = 0;\n        let i = 0;\n        while (leftIdx < left.length && rightIdx < right.length) {\n            let ret = compare(left[leftIdx], right[rightIdx]);\n            if (ret <= 0) {\n                // smaller_equal -> take left to preserve order\n                data[i++] = left[leftIdx++];\n            }\n            else {\n                // greater -> take right\n                data[i++] = right[rightIdx++];\n            }\n        }\n        while (leftIdx < left.length) {\n            data[i++] = left[leftIdx++];\n        }\n        while (rightIdx < right.length) {\n            data[i++] = right[rightIdx++];\n        }\n        return data;\n    }\n})(TextDocument || (TextDocument = {}));\n/**\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n */\nclass FullTextDocument {\n    constructor(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = undefined;\n    }\n    get uri() {\n        return this._uri;\n    }\n    get languageId() {\n        return this._languageId;\n    }\n    get version() {\n        return this._version;\n    }\n    getText(range) {\n        if (range) {\n            let start = this.offsetAt(range.start);\n            let end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    }\n    update(event, version) {\n        this._content = event.text;\n        this._version = version;\n        this._lineOffsets = undefined;\n    }\n    getLineOffsets() {\n        if (this._lineOffsets === undefined) {\n            let lineOffsets = [];\n            let text = this._content;\n            let isLineStart = true;\n            for (let i = 0; i < text.length; i++) {\n                if (isLineStart) {\n                    lineOffsets.push(i);\n                    isLineStart = false;\n                }\n                let ch = text.charAt(i);\n                isLineStart = (ch === '\\r' || ch === '\\n');\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                    i++;\n                }\n            }\n            if (isLineStart && text.length > 0) {\n                lineOffsets.push(text.length);\n            }\n            this._lineOffsets = lineOffsets;\n        }\n        return this._lineOffsets;\n    }\n    positionAt(offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        let lineOffsets = this.getLineOffsets();\n        let low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return Position.create(0, offset);\n        }\n        while (low < high) {\n            let mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        let line = low - 1;\n        return Position.create(line, offset - lineOffsets[line]);\n    }\n    offsetAt(position) {\n        let lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        let lineOffset = lineOffsets[position.line];\n        let nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n    }\n    get lineCount() {\n        return this.getLineOffsets().length;\n    }\n}\nvar Is;\n(function (Is) {\n    const toString = Object.prototype.toString;\n    function defined(value) {\n        return typeof value !== 'undefined';\n    }\n    Is.defined = defined;\n    function undefined(value) {\n        return typeof value === 'undefined';\n    }\n    Is.undefined = undefined;\n    function boolean(value) {\n        return value === true || value === false;\n    }\n    Is.boolean = boolean;\n    function string(value) {\n        return toString.call(value) === '[object String]';\n    }\n    Is.string = string;\n    function number(value) {\n        return toString.call(value) === '[object Number]';\n    }\n    Is.number = number;\n    function numberRange(value, min, max) {\n        return toString.call(value) === '[object Number]' && min <= value && value <= max;\n    }\n    Is.numberRange = numberRange;\n    function integer(value) {\n        return toString.call(value) === '[object Number]' && -2147483648 <= value && value <= 2147483647;\n    }\n    Is.integer = integer;\n    function uinteger(value) {\n        return toString.call(value) === '[object Number]' && 0 <= value && value <= 2147483647;\n    }\n    Is.uinteger = uinteger;\n    function func(value) {\n        return toString.call(value) === '[object Function]';\n    }\n    Is.func = func;\n    function objectLiteral(value) {\n        // Strictly speaking class instances pass this check as well. Since the LSP\n        // doesn't use classes we ignore this for now. If we do we need to add something\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\n        return value !== null && typeof value === 'object';\n    }\n    Is.objectLiteral = objectLiteral;\n    function typedArray(value, check) {\n        return Array.isArray(value) && value.every(check);\n    }\n    Is.typedArray = typedArray;\n})(Is || (Is = {}));\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Position } from 'vscode-languageserver-types';\nimport { tokenToRange } from '../utils/cst-utils.js';\nexport class CstNodeBuilder {\n    constructor() {\n        this.nodeStack = [];\n    }\n    get current() {\n        var _a;\n        return (_a = this.nodeStack[this.nodeStack.length - 1]) !== null && _a !== void 0 ? _a : this.rootNode;\n    }\n    buildRootNode(input) {\n        this.rootNode = new RootCstNodeImpl(input);\n        this.rootNode.root = this.rootNode;\n        this.nodeStack = [this.rootNode];\n        return this.rootNode;\n    }\n    buildCompositeNode(feature) {\n        const compositeNode = new CompositeCstNodeImpl();\n        compositeNode.grammarSource = feature;\n        compositeNode.root = this.rootNode;\n        this.current.content.push(compositeNode);\n        this.nodeStack.push(compositeNode);\n        return compositeNode;\n    }\n    buildLeafNode(token, feature) {\n        const leafNode = new LeafCstNodeImpl(token.startOffset, token.image.length, tokenToRange(token), token.tokenType, !feature);\n        leafNode.grammarSource = feature;\n        leafNode.root = this.rootNode;\n        this.current.content.push(leafNode);\n        return leafNode;\n    }\n    removeNode(node) {\n        const parent = node.container;\n        if (parent) {\n            const index = parent.content.indexOf(node);\n            if (index >= 0) {\n                parent.content.splice(index, 1);\n            }\n        }\n    }\n    addHiddenNodes(tokens) {\n        const nodes = [];\n        for (const token of tokens) {\n            const leafNode = new LeafCstNodeImpl(token.startOffset, token.image.length, tokenToRange(token), token.tokenType, true);\n            leafNode.root = this.rootNode;\n            nodes.push(leafNode);\n        }\n        let current = this.current;\n        let added = false;\n        // If we are within a composite node, we add the hidden nodes to the content\n        if (current.content.length > 0) {\n            current.content.push(...nodes);\n            return;\n        }\n        // Otherwise we are at a newly created node\n        // Instead of adding the hidden nodes here, we search for the first parent node with content\n        while (current.container) {\n            const index = current.container.content.indexOf(current);\n            if (index > 0) {\n                // Add the hidden nodes before the current node\n                current.container.content.splice(index, 0, ...nodes);\n                added = true;\n                break;\n            }\n            current = current.container;\n        }\n        // If we arrive at the root node, we add the hidden nodes at the beginning\n        // This is the case if the hidden nodes are the first nodes in the tree\n        if (!added) {\n            this.rootNode.content.unshift(...nodes);\n        }\n    }\n    construct(item) {\n        const current = this.current;\n        // The specified item could be a datatype ($type is symbol) or a fragment ($type is undefined)\n        // Only if the $type is a string, we actually assign the element\n        if (typeof item.$type === 'string') {\n            this.current.astNode = item;\n        }\n        item.$cstNode = current;\n        const node = this.nodeStack.pop();\n        // Empty composite nodes are not valid\n        // Simply remove the node from the tree\n        if ((node === null || node === void 0 ? void 0 : node.content.length) === 0) {\n            this.removeNode(node);\n        }\n    }\n}\nexport class AbstractCstNode {\n    /** @deprecated use `container` instead. */\n    get parent() {\n        return this.container;\n    }\n    /** @deprecated use `grammarSource` instead. */\n    get feature() {\n        return this.grammarSource;\n    }\n    get hidden() {\n        return false;\n    }\n    get astNode() {\n        var _a, _b;\n        const node = typeof ((_a = this._astNode) === null || _a === void 0 ? void 0 : _a.$type) === 'string' ? this._astNode : (_b = this.container) === null || _b === void 0 ? void 0 : _b.astNode;\n        if (!node) {\n            throw new Error('This node has no associated AST element');\n        }\n        return node;\n    }\n    set astNode(value) {\n        this._astNode = value;\n    }\n    /** @deprecated use `astNode` instead. */\n    get element() {\n        return this.astNode;\n    }\n    get text() {\n        return this.root.fullText.substring(this.offset, this.end);\n    }\n}\nexport class LeafCstNodeImpl extends AbstractCstNode {\n    get offset() {\n        return this._offset;\n    }\n    get length() {\n        return this._length;\n    }\n    get end() {\n        return this._offset + this._length;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    get tokenType() {\n        return this._tokenType;\n    }\n    get range() {\n        return this._range;\n    }\n    constructor(offset, length, range, tokenType, hidden = false) {\n        super();\n        this._hidden = hidden;\n        this._offset = offset;\n        this._tokenType = tokenType;\n        this._length = length;\n        this._range = range;\n    }\n}\nexport class CompositeCstNodeImpl extends AbstractCstNode {\n    constructor() {\n        super(...arguments);\n        this.content = new CstNodeContainer(this);\n    }\n    /** @deprecated use `content` instead. */\n    get children() {\n        return this.content;\n    }\n    get offset() {\n        var _a, _b;\n        return (_b = (_a = this.firstNonHiddenNode) === null || _a === void 0 ? void 0 : _a.offset) !== null && _b !== void 0 ? _b : 0;\n    }\n    get length() {\n        return this.end - this.offset;\n    }\n    get end() {\n        var _a, _b;\n        return (_b = (_a = this.lastNonHiddenNode) === null || _a === void 0 ? void 0 : _a.end) !== null && _b !== void 0 ? _b : 0;\n    }\n    get range() {\n        const firstNode = this.firstNonHiddenNode;\n        const lastNode = this.lastNonHiddenNode;\n        if (firstNode && lastNode) {\n            if (this._rangeCache === undefined) {\n                const { range: firstRange } = firstNode;\n                const { range: lastRange } = lastNode;\n                this._rangeCache = { start: firstRange.start, end: lastRange.end.line < firstRange.start.line ? firstRange.start : lastRange.end };\n            }\n            return this._rangeCache;\n        }\n        else {\n            return { start: Position.create(0, 0), end: Position.create(0, 0) };\n        }\n    }\n    get firstNonHiddenNode() {\n        for (const child of this.content) {\n            if (!child.hidden) {\n                return child;\n            }\n        }\n        return this.content[0];\n    }\n    get lastNonHiddenNode() {\n        for (let i = this.content.length - 1; i >= 0; i--) {\n            const child = this.content[i];\n            if (!child.hidden) {\n                return child;\n            }\n        }\n        return this.content[this.content.length - 1];\n    }\n}\nclass CstNodeContainer extends Array {\n    constructor(parent) {\n        super();\n        this.parent = parent;\n        Object.setPrototypeOf(this, CstNodeContainer.prototype);\n    }\n    push(...items) {\n        this.addParents(items);\n        return super.push(...items);\n    }\n    unshift(...items) {\n        this.addParents(items);\n        return super.unshift(...items);\n    }\n    splice(start, count, ...items) {\n        this.addParents(items);\n        return super.splice(start, count, ...items);\n    }\n    addParents(items) {\n        for (const item of items) {\n            item.container = this.parent;\n        }\n    }\n}\nexport class RootCstNodeImpl extends CompositeCstNodeImpl {\n    get text() {\n        return this._text.substring(this.offset, this.end);\n    }\n    get fullText() {\n        return this._text;\n    }\n    constructor(input) {\n        super();\n        this._text = '';\n        this._text = input !== null && input !== void 0 ? input : '';\n    }\n}\n//# sourceMappingURL=cst-node-builder.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { defaultParserErrorProvider, EmbeddedActionsParser, LLkLookaheadStrategy } from 'chevrotain';\nimport { LLStarLookaheadStrategy } from 'chevrotain-allstar';\nimport { isAssignment, isCrossReference, isKeyword } from '../languages/generated/ast.js';\nimport { getExplicitRuleType, isDataTypeRule } from '../utils/grammar-utils.js';\nimport { assignMandatoryProperties, getContainerOfType, linkContentToContainer } from '../utils/ast-utils.js';\nimport { CstNodeBuilder } from './cst-node-builder.js';\nexport const DatatypeSymbol = Symbol('Datatype');\nfunction isDataTypeNode(node) {\n    return node.$type === DatatypeSymbol;\n}\nconst ruleSuffix = '\\u200B';\nconst withRuleSuffix = (name) => name.endsWith(ruleSuffix) ? name : name + ruleSuffix;\nexport class AbstractLangiumParser {\n    constructor(services) {\n        this._unorderedGroups = new Map();\n        this.allRules = new Map();\n        this.lexer = services.parser.Lexer;\n        const tokens = this.lexer.definition;\n        const production = services.LanguageMetaData.mode === 'production';\n        this.wrapper = new ChevrotainWrapper(tokens, Object.assign(Object.assign({}, services.parser.ParserConfig), { skipValidations: production, errorMessageProvider: services.parser.ParserErrorMessageProvider }));\n    }\n    alternatives(idx, choices) {\n        this.wrapper.wrapOr(idx, choices);\n    }\n    optional(idx, callback) {\n        this.wrapper.wrapOption(idx, callback);\n    }\n    many(idx, callback) {\n        this.wrapper.wrapMany(idx, callback);\n    }\n    atLeastOne(idx, callback) {\n        this.wrapper.wrapAtLeastOne(idx, callback);\n    }\n    getRule(name) {\n        return this.allRules.get(name);\n    }\n    isRecording() {\n        return this.wrapper.IS_RECORDING;\n    }\n    get unorderedGroups() {\n        return this._unorderedGroups;\n    }\n    getRuleStack() {\n        return this.wrapper.RULE_STACK;\n    }\n    finalize() {\n        this.wrapper.wrapSelfAnalysis();\n    }\n}\nexport class LangiumParser extends AbstractLangiumParser {\n    get current() {\n        return this.stack[this.stack.length - 1];\n    }\n    constructor(services) {\n        super(services);\n        this.nodeBuilder = new CstNodeBuilder();\n        this.stack = [];\n        this.assignmentMap = new Map();\n        this.linker = services.references.Linker;\n        this.converter = services.parser.ValueConverter;\n        this.astReflection = services.shared.AstReflection;\n    }\n    rule(rule, impl) {\n        const type = this.computeRuleType(rule);\n        const ruleMethod = this.wrapper.DEFINE_RULE(withRuleSuffix(rule.name), this.startImplementation(type, impl).bind(this));\n        this.allRules.set(rule.name, ruleMethod);\n        if (rule.entry) {\n            this.mainRule = ruleMethod;\n        }\n        return ruleMethod;\n    }\n    computeRuleType(rule) {\n        if (rule.fragment) {\n            return undefined;\n        }\n        else if (isDataTypeRule(rule)) {\n            return DatatypeSymbol;\n        }\n        else {\n            const explicit = getExplicitRuleType(rule);\n            return explicit !== null && explicit !== void 0 ? explicit : rule.name;\n        }\n    }\n    parse(input, options = {}) {\n        this.nodeBuilder.buildRootNode(input);\n        const lexerResult = this.lexerResult = this.lexer.tokenize(input);\n        this.wrapper.input = lexerResult.tokens;\n        const ruleMethod = options.rule ? this.allRules.get(options.rule) : this.mainRule;\n        if (!ruleMethod) {\n            throw new Error(options.rule ? `No rule found with name '${options.rule}'` : 'No main rule available.');\n        }\n        const result = ruleMethod.call(this.wrapper, {});\n        this.nodeBuilder.addHiddenNodes(lexerResult.hidden);\n        this.unorderedGroups.clear();\n        this.lexerResult = undefined;\n        return {\n            value: result,\n            lexerErrors: lexerResult.errors,\n            lexerReport: lexerResult.report,\n            parserErrors: this.wrapper.errors\n        };\n    }\n    startImplementation($type, implementation) {\n        return (args) => {\n            // Only create a new AST node in case the calling rule is not a fragment rule\n            const createNode = !this.isRecording() && $type !== undefined;\n            if (createNode) {\n                const node = { $type };\n                this.stack.push(node);\n                if ($type === DatatypeSymbol) {\n                    node.value = '';\n                }\n            }\n            let result;\n            try {\n                result = implementation(args);\n            }\n            catch (err) {\n                result = undefined;\n            }\n            if (result === undefined && createNode) {\n                result = this.construct();\n            }\n            return result;\n        };\n    }\n    extractHiddenTokens(token) {\n        const hiddenTokens = this.lexerResult.hidden;\n        if (!hiddenTokens.length) {\n            return [];\n        }\n        const offset = token.startOffset;\n        for (let i = 0; i < hiddenTokens.length; i++) {\n            const token = hiddenTokens[i];\n            if (token.startOffset > offset) {\n                return hiddenTokens.splice(0, i);\n            }\n        }\n        return hiddenTokens.splice(0, hiddenTokens.length);\n    }\n    consume(idx, tokenType, feature) {\n        const token = this.wrapper.wrapConsume(idx, tokenType);\n        if (!this.isRecording() && this.isValidToken(token)) {\n            const hiddenTokens = this.extractHiddenTokens(token);\n            this.nodeBuilder.addHiddenNodes(hiddenTokens);\n            const leafNode = this.nodeBuilder.buildLeafNode(token, feature);\n            const { assignment, isCrossRef } = this.getAssignment(feature);\n            const current = this.current;\n            if (assignment) {\n                const convertedValue = isKeyword(feature) ? token.image : this.converter.convert(token.image, leafNode);\n                this.assign(assignment.operator, assignment.feature, convertedValue, leafNode, isCrossRef);\n            }\n            else if (isDataTypeNode(current)) {\n                let text = token.image;\n                if (!isKeyword(feature)) {\n                    text = this.converter.convert(text, leafNode).toString();\n                }\n                current.value += text;\n            }\n        }\n    }\n    /**\n     * Most consumed parser tokens are valid. However there are two cases in which they are not valid:\n     *\n     * 1. They were inserted during error recovery by the parser. These tokens don't really exist and should not be further processed\n     * 2. They contain invalid token ranges. This might include the special EOF token, or other tokens produced by invalid token builders.\n     */\n    isValidToken(token) {\n        return !token.isInsertedInRecovery && !isNaN(token.startOffset) && typeof token.endOffset === 'number' && !isNaN(token.endOffset);\n    }\n    subrule(idx, rule, fragment, feature, args) {\n        let cstNode;\n        if (!this.isRecording() && !fragment) {\n            // We only want to create a new CST node if the subrule actually creates a new AST node.\n            // In other cases like calls of fragment rules the current CST/AST is populated further.\n            // Note that skipping this initialization and leaving cstNode unassigned also skips the subrule assignment later on.\n            // This is intended, as fragment rules only enrich the current AST node\n            cstNode = this.nodeBuilder.buildCompositeNode(feature);\n        }\n        const subruleResult = this.wrapper.wrapSubrule(idx, rule, args);\n        if (!this.isRecording() && cstNode && cstNode.length > 0) {\n            this.performSubruleAssignment(subruleResult, feature, cstNode);\n        }\n    }\n    performSubruleAssignment(result, feature, cstNode) {\n        const { assignment, isCrossRef } = this.getAssignment(feature);\n        if (assignment) {\n            this.assign(assignment.operator, assignment.feature, result, cstNode, isCrossRef);\n        }\n        else if (!assignment) {\n            // If we call a subrule without an assignment we either:\n            // 1. append the result of the subrule (data type rule)\n            // 2. override the current object with the newly parsed object\n            // If the current element is an AST node and the result of the subrule\n            // is a data type rule, we can safely discard the results.\n            const current = this.current;\n            if (isDataTypeNode(current)) {\n                current.value += result.toString();\n            }\n            else if (typeof result === 'object' && result) {\n                const object = this.assignWithoutOverride(result, current);\n                const newItem = object;\n                this.stack.pop();\n                this.stack.push(newItem);\n            }\n        }\n    }\n    action($type, action) {\n        if (!this.isRecording()) {\n            let last = this.current;\n            if (action.feature && action.operator) {\n                last = this.construct();\n                this.nodeBuilder.removeNode(last.$cstNode);\n                const node = this.nodeBuilder.buildCompositeNode(action);\n                node.content.push(last.$cstNode);\n                const newItem = { $type };\n                this.stack.push(newItem);\n                this.assign(action.operator, action.feature, last, last.$cstNode, false);\n            }\n            else {\n                last.$type = $type;\n            }\n        }\n    }\n    construct() {\n        if (this.isRecording()) {\n            return undefined;\n        }\n        const obj = this.current;\n        linkContentToContainer(obj);\n        this.nodeBuilder.construct(obj);\n        this.stack.pop();\n        if (isDataTypeNode(obj)) {\n            return this.converter.convert(obj.value, obj.$cstNode);\n        }\n        else {\n            assignMandatoryProperties(this.astReflection, obj);\n        }\n        return obj;\n    }\n    getAssignment(feature) {\n        if (!this.assignmentMap.has(feature)) {\n            const assignment = getContainerOfType(feature, isAssignment);\n            this.assignmentMap.set(feature, {\n                assignment: assignment,\n                isCrossRef: assignment ? isCrossReference(assignment.terminal) : false\n            });\n        }\n        return this.assignmentMap.get(feature);\n    }\n    assign(operator, feature, value, cstNode, isCrossRef) {\n        const obj = this.current;\n        let item;\n        if (isCrossRef && typeof value === 'string') {\n            item = this.linker.buildReference(obj, feature, cstNode, value);\n        }\n        else {\n            item = value;\n        }\n        switch (operator) {\n            case '=': {\n                obj[feature] = item;\n                break;\n            }\n            case '?=': {\n                obj[feature] = true;\n                break;\n            }\n            case '+=': {\n                if (!Array.isArray(obj[feature])) {\n                    obj[feature] = [];\n                }\n                obj[feature].push(item);\n            }\n        }\n    }\n    assignWithoutOverride(target, source) {\n        for (const [name, existingValue] of Object.entries(source)) {\n            const newValue = target[name];\n            if (newValue === undefined) {\n                target[name] = existingValue;\n            }\n            else if (Array.isArray(newValue) && Array.isArray(existingValue)) {\n                existingValue.push(...newValue);\n                target[name] = existingValue;\n            }\n        }\n        // The target was parsed from a unassigned subrule\n        // After the subrule construction, it received a cst node\n        // This CST node will later be overriden by the cst node builder\n        // To prevent references to stale AST nodes in the CST,\n        // we need to remove the reference here\n        const targetCstNode = target.$cstNode;\n        if (targetCstNode) {\n            targetCstNode.astNode = undefined;\n            target.$cstNode = undefined;\n        }\n        return target;\n    }\n    get definitionErrors() {\n        return this.wrapper.definitionErrors;\n    }\n}\nexport class AbstractParserErrorMessageProvider {\n    buildMismatchTokenMessage(options) {\n        return defaultParserErrorProvider.buildMismatchTokenMessage(options);\n    }\n    buildNotAllInputParsedMessage(options) {\n        return defaultParserErrorProvider.buildNotAllInputParsedMessage(options);\n    }\n    buildNoViableAltMessage(options) {\n        return defaultParserErrorProvider.buildNoViableAltMessage(options);\n    }\n    buildEarlyExitMessage(options) {\n        return defaultParserErrorProvider.buildEarlyExitMessage(options);\n    }\n}\nexport class LangiumParserErrorMessageProvider extends AbstractParserErrorMessageProvider {\n    buildMismatchTokenMessage({ expected, actual }) {\n        const expectedMsg = expected.LABEL\n            ? '`' + expected.LABEL + '`'\n            : expected.name.endsWith(':KW')\n                ? `keyword '${expected.name.substring(0, expected.name.length - 3)}'`\n                : `token of type '${expected.name}'`;\n        return `Expecting ${expectedMsg} but found \\`${actual.image}\\`.`;\n    }\n    buildNotAllInputParsedMessage({ firstRedundant }) {\n        return `Expecting end of file but found \\`${firstRedundant.image}\\`.`;\n    }\n}\nexport class LangiumCompletionParser extends AbstractLangiumParser {\n    constructor() {\n        super(...arguments);\n        this.tokens = [];\n        this.elementStack = [];\n        this.lastElementStack = [];\n        this.nextTokenIndex = 0;\n        this.stackSize = 0;\n    }\n    action() {\n        // NOOP\n    }\n    construct() {\n        // NOOP\n        return undefined;\n    }\n    parse(input) {\n        this.resetState();\n        const tokens = this.lexer.tokenize(input, { mode: 'partial' });\n        this.tokens = tokens.tokens;\n        this.wrapper.input = [...this.tokens];\n        this.mainRule.call(this.wrapper, {});\n        this.unorderedGroups.clear();\n        return {\n            tokens: this.tokens,\n            elementStack: [...this.lastElementStack],\n            tokenIndex: this.nextTokenIndex\n        };\n    }\n    rule(rule, impl) {\n        const ruleMethod = this.wrapper.DEFINE_RULE(withRuleSuffix(rule.name), this.startImplementation(impl).bind(this));\n        this.allRules.set(rule.name, ruleMethod);\n        if (rule.entry) {\n            this.mainRule = ruleMethod;\n        }\n        return ruleMethod;\n    }\n    resetState() {\n        this.elementStack = [];\n        this.lastElementStack = [];\n        this.nextTokenIndex = 0;\n        this.stackSize = 0;\n    }\n    startImplementation(implementation) {\n        return (args) => {\n            const size = this.keepStackSize();\n            try {\n                implementation(args);\n            }\n            finally {\n                this.resetStackSize(size);\n            }\n        };\n    }\n    removeUnexpectedElements() {\n        this.elementStack.splice(this.stackSize);\n    }\n    keepStackSize() {\n        const size = this.elementStack.length;\n        this.stackSize = size;\n        return size;\n    }\n    resetStackSize(size) {\n        this.removeUnexpectedElements();\n        this.stackSize = size;\n    }\n    consume(idx, tokenType, feature) {\n        this.wrapper.wrapConsume(idx, tokenType);\n        if (!this.isRecording()) {\n            this.lastElementStack = [...this.elementStack, feature];\n            this.nextTokenIndex = this.currIdx + 1;\n        }\n    }\n    subrule(idx, rule, fragment, feature, args) {\n        this.before(feature);\n        this.wrapper.wrapSubrule(idx, rule, args);\n        this.after(feature);\n    }\n    before(element) {\n        if (!this.isRecording()) {\n            this.elementStack.push(element);\n        }\n    }\n    after(element) {\n        if (!this.isRecording()) {\n            const index = this.elementStack.lastIndexOf(element);\n            if (index >= 0) {\n                this.elementStack.splice(index);\n            }\n        }\n    }\n    get currIdx() {\n        return this.wrapper.currIdx;\n    }\n}\nconst defaultConfig = {\n    recoveryEnabled: true,\n    nodeLocationTracking: 'full',\n    skipValidations: true,\n    errorMessageProvider: new LangiumParserErrorMessageProvider()\n};\n/**\n * This class wraps the embedded actions parser of chevrotain and exposes protected methods.\n * This way, we can build the `LangiumParser` as a composition.\n */\nclass ChevrotainWrapper extends EmbeddedActionsParser {\n    constructor(tokens, config) {\n        const useDefaultLookahead = config && 'maxLookahead' in config;\n        super(tokens, Object.assign(Object.assign(Object.assign({}, defaultConfig), { lookaheadStrategy: useDefaultLookahead\n                ? new LLkLookaheadStrategy({ maxLookahead: config.maxLookahead })\n                : new LLStarLookaheadStrategy({\n                    // If validations are skipped, don't log the lookahead warnings\n                    logging: config.skipValidations ? () => { } : undefined\n                }) }), config));\n    }\n    get IS_RECORDING() {\n        return this.RECORDING_PHASE;\n    }\n    DEFINE_RULE(name, impl) {\n        return this.RULE(name, impl);\n    }\n    wrapSelfAnalysis() {\n        this.performSelfAnalysis();\n    }\n    wrapConsume(idx, tokenType) {\n        return this.consume(idx, tokenType);\n    }\n    wrapSubrule(idx, rule, args) {\n        return this.subrule(idx, rule, {\n            ARGS: [args]\n        });\n    }\n    wrapOr(idx, choices) {\n        this.or(idx, choices);\n    }\n    wrapOption(idx, callback) {\n        this.option(idx, callback);\n    }\n    wrapMany(idx, callback) {\n        this.many(idx, callback);\n    }\n    wrapAtLeastOne(idx, callback) {\n        this.atLeastOne(idx, callback);\n    }\n}\n//# sourceMappingURL=langium-parser.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { EMPTY_ALT, EOF } from 'chevrotain';\nimport { isAction, isAlternatives, isEndOfFile, isAssignment, isConjunction, isCrossReference, isDisjunction, isGroup, isKeyword, isNegation, isParameterReference, isParserRule, isRuleCall, isTerminalRule, isUnorderedGroup, isBooleanLiteral } from '../languages/generated/ast.js';\nimport { assertUnreachable, ErrorWithLocation } from '../utils/errors.js';\nimport { stream } from '../utils/stream.js';\nimport { findNameAssignment, getAllReachableRules, getTypeName } from '../utils/grammar-utils.js';\nexport function createParser(grammar, parser, tokens) {\n    const parserContext = {\n        parser,\n        tokens,\n        ruleNames: new Map()\n    };\n    buildRules(parserContext, grammar);\n    return parser;\n}\nfunction buildRules(parserContext, grammar) {\n    const reachable = getAllReachableRules(grammar, false);\n    const parserRules = stream(grammar.rules).filter(isParserRule).filter(rule => reachable.has(rule));\n    for (const rule of parserRules) {\n        const ctx = Object.assign(Object.assign({}, parserContext), { consume: 1, optional: 1, subrule: 1, many: 1, or: 1 });\n        parserContext.parser.rule(rule, buildElement(ctx, rule.definition));\n    }\n}\nfunction buildElement(ctx, element, ignoreGuard = false) {\n    let method;\n    if (isKeyword(element)) {\n        method = buildKeyword(ctx, element);\n    }\n    else if (isAction(element)) {\n        method = buildAction(ctx, element);\n    }\n    else if (isAssignment(element)) {\n        method = buildElement(ctx, element.terminal);\n    }\n    else if (isCrossReference(element)) {\n        method = buildCrossReference(ctx, element);\n    }\n    else if (isRuleCall(element)) {\n        method = buildRuleCall(ctx, element);\n    }\n    else if (isAlternatives(element)) {\n        method = buildAlternatives(ctx, element);\n    }\n    else if (isUnorderedGroup(element)) {\n        method = buildUnorderedGroup(ctx, element);\n    }\n    else if (isGroup(element)) {\n        method = buildGroup(ctx, element);\n    }\n    else if (isEndOfFile(element)) {\n        const idx = ctx.consume++;\n        method = () => ctx.parser.consume(idx, EOF, element);\n    }\n    else {\n        throw new ErrorWithLocation(element.$cstNode, `Unexpected element type: ${element.$type}`);\n    }\n    return wrap(ctx, ignoreGuard ? undefined : getGuardCondition(element), method, element.cardinality);\n}\nfunction buildAction(ctx, action) {\n    const actionType = getTypeName(action);\n    return () => ctx.parser.action(actionType, action);\n}\nfunction buildRuleCall(ctx, ruleCall) {\n    const rule = ruleCall.rule.ref;\n    if (isParserRule(rule)) {\n        const idx = ctx.subrule++;\n        const fragment = rule.fragment;\n        const predicate = ruleCall.arguments.length > 0 ? buildRuleCallPredicate(rule, ruleCall.arguments) : () => ({});\n        return (args) => ctx.parser.subrule(idx, getRule(ctx, rule), fragment, ruleCall, predicate(args));\n    }\n    else if (isTerminalRule(rule)) {\n        const idx = ctx.consume++;\n        const method = getToken(ctx, rule.name);\n        return () => ctx.parser.consume(idx, method, ruleCall);\n    }\n    else if (!rule) {\n        throw new ErrorWithLocation(ruleCall.$cstNode, `Undefined rule: ${ruleCall.rule.$refText}`);\n    }\n    else {\n        assertUnreachable(rule);\n    }\n}\nfunction buildRuleCallPredicate(rule, namedArgs) {\n    const predicates = namedArgs.map(e => buildPredicate(e.value));\n    return (args) => {\n        const ruleArgs = {};\n        for (let i = 0; i < predicates.length; i++) {\n            const ruleTarget = rule.parameters[i];\n            const predicate = predicates[i];\n            ruleArgs[ruleTarget.name] = predicate(args);\n        }\n        return ruleArgs;\n    };\n}\nfunction buildPredicate(condition) {\n    if (isDisjunction(condition)) {\n        const left = buildPredicate(condition.left);\n        const right = buildPredicate(condition.right);\n        return (args) => (left(args) || right(args));\n    }\n    else if (isConjunction(condition)) {\n        const left = buildPredicate(condition.left);\n        const right = buildPredicate(condition.right);\n        return (args) => (left(args) && right(args));\n    }\n    else if (isNegation(condition)) {\n        const value = buildPredicate(condition.value);\n        return (args) => !value(args);\n    }\n    else if (isParameterReference(condition)) {\n        const name = condition.parameter.ref.name;\n        return (args) => args !== undefined && args[name] === true;\n    }\n    else if (isBooleanLiteral(condition)) {\n        const value = Boolean(condition.true);\n        return () => value;\n    }\n    assertUnreachable(condition);\n}\nfunction buildAlternatives(ctx, alternatives) {\n    if (alternatives.elements.length === 1) {\n        return buildElement(ctx, alternatives.elements[0]);\n    }\n    else {\n        const methods = [];\n        for (const element of alternatives.elements) {\n            const predicatedMethod = {\n                // Since we handle the guard condition in the alternative already\n                // We can ignore the group guard condition inside\n                ALT: buildElement(ctx, element, true)\n            };\n            const guard = getGuardCondition(element);\n            if (guard) {\n                predicatedMethod.GATE = buildPredicate(guard);\n            }\n            methods.push(predicatedMethod);\n        }\n        const idx = ctx.or++;\n        return (args) => ctx.parser.alternatives(idx, methods.map(method => {\n            const alt = {\n                ALT: () => method.ALT(args)\n            };\n            const gate = method.GATE;\n            if (gate) {\n                alt.GATE = () => gate(args);\n            }\n            return alt;\n        }));\n    }\n}\nfunction buildUnorderedGroup(ctx, group) {\n    if (group.elements.length === 1) {\n        return buildElement(ctx, group.elements[0]);\n    }\n    const methods = [];\n    for (const element of group.elements) {\n        const predicatedMethod = {\n            // Since we handle the guard condition in the alternative already\n            // We can ignore the group guard condition inside\n            ALT: buildElement(ctx, element, true)\n        };\n        const guard = getGuardCondition(element);\n        if (guard) {\n            predicatedMethod.GATE = buildPredicate(guard);\n        }\n        methods.push(predicatedMethod);\n    }\n    const orIdx = ctx.or++;\n    const idFunc = (groupIdx, lParser) => {\n        const stackId = lParser.getRuleStack().join('-');\n        return `uGroup_${groupIdx}_${stackId}`;\n    };\n    const alternatives = (args) => ctx.parser.alternatives(orIdx, methods.map((method, idx) => {\n        const alt = { ALT: () => true };\n        const parser = ctx.parser;\n        alt.ALT = () => {\n            method.ALT(args);\n            if (!parser.isRecording()) {\n                const key = idFunc(orIdx, parser);\n                if (!parser.unorderedGroups.get(key)) {\n                    // init after clear state\n                    parser.unorderedGroups.set(key, []);\n                }\n                const groupState = parser.unorderedGroups.get(key);\n                if (typeof (groupState === null || groupState === void 0 ? void 0 : groupState[idx]) === 'undefined') {\n                    // Not accessed yet\n                    groupState[idx] = true;\n                }\n            }\n        };\n        const gate = method.GATE;\n        if (gate) {\n            alt.GATE = () => gate(args);\n        }\n        else {\n            alt.GATE = () => {\n                const trackedAlternatives = parser.unorderedGroups.get(idFunc(orIdx, parser));\n                const allow = !(trackedAlternatives === null || trackedAlternatives === void 0 ? void 0 : trackedAlternatives[idx]);\n                return allow;\n            };\n        }\n        return alt;\n    }));\n    const wrapped = wrap(ctx, getGuardCondition(group), alternatives, '*');\n    return (args) => {\n        wrapped(args);\n        if (!ctx.parser.isRecording()) {\n            ctx.parser.unorderedGroups.delete(idFunc(orIdx, ctx.parser));\n        }\n    };\n}\nfunction buildGroup(ctx, group) {\n    const methods = group.elements.map(e => buildElement(ctx, e));\n    return (args) => methods.forEach(method => method(args));\n}\nfunction getGuardCondition(element) {\n    if (isGroup(element)) {\n        return element.guardCondition;\n    }\n    return undefined;\n}\nfunction buildCrossReference(ctx, crossRef, terminal = crossRef.terminal) {\n    if (!terminal) {\n        if (!crossRef.type.ref) {\n            throw new Error('Could not resolve reference to type: ' + crossRef.type.$refText);\n        }\n        const assignment = findNameAssignment(crossRef.type.ref);\n        const assignTerminal = assignment === null || assignment === void 0 ? void 0 : assignment.terminal;\n        if (!assignTerminal) {\n            throw new Error('Could not find name assignment for type: ' + getTypeName(crossRef.type.ref));\n        }\n        return buildCrossReference(ctx, crossRef, assignTerminal);\n    }\n    else if (isRuleCall(terminal) && isParserRule(terminal.rule.ref)) {\n        // The terminal is a data type rule here. Everything else will result in a validation error.\n        const rule = terminal.rule.ref;\n        const idx = ctx.subrule++;\n        return (args) => ctx.parser.subrule(idx, getRule(ctx, rule), false, crossRef, args);\n    }\n    else if (isRuleCall(terminal) && isTerminalRule(terminal.rule.ref)) {\n        const idx = ctx.consume++;\n        const terminalRule = getToken(ctx, terminal.rule.ref.name);\n        return () => ctx.parser.consume(idx, terminalRule, crossRef);\n    }\n    else if (isKeyword(terminal)) {\n        const idx = ctx.consume++;\n        const keyword = getToken(ctx, terminal.value);\n        return () => ctx.parser.consume(idx, keyword, crossRef);\n    }\n    else {\n        throw new Error('Could not build cross reference parser');\n    }\n}\nfunction buildKeyword(ctx, keyword) {\n    const idx = ctx.consume++;\n    const token = ctx.tokens[keyword.value];\n    if (!token) {\n        throw new Error('Could not find token for keyword: ' + keyword.value);\n    }\n    return () => ctx.parser.consume(idx, token, keyword);\n}\nfunction wrap(ctx, guard, method, cardinality) {\n    const gate = guard && buildPredicate(guard);\n    if (!cardinality) {\n        if (gate) {\n            const idx = ctx.or++;\n            return (args) => ctx.parser.alternatives(idx, [\n                {\n                    ALT: () => method(args),\n                    GATE: () => gate(args)\n                },\n                {\n                    ALT: EMPTY_ALT(),\n                    GATE: () => !gate(args)\n                }\n            ]);\n        }\n        else {\n            return method;\n        }\n    }\n    if (cardinality === '*') {\n        const idx = ctx.many++;\n        return (args) => ctx.parser.many(idx, {\n            DEF: () => method(args),\n            GATE: gate ? () => gate(args) : undefined\n        });\n    }\n    else if (cardinality === '+') {\n        const idx = ctx.many++;\n        if (gate) {\n            const orIdx = ctx.or++;\n            // In the case of a guard condition for the `+` group\n            // We combine it with an empty alternative\n            // If the condition returns true, it needs to parse at least a single iteration\n            // If its false, it is not allowed to parse anything\n            return (args) => ctx.parser.alternatives(orIdx, [\n                {\n                    ALT: () => ctx.parser.atLeastOne(idx, {\n                        DEF: () => method(args)\n                    }),\n                    GATE: () => gate(args)\n                },\n                {\n                    ALT: EMPTY_ALT(),\n                    GATE: () => !gate(args)\n                }\n            ]);\n        }\n        else {\n            return (args) => ctx.parser.atLeastOne(idx, {\n                DEF: () => method(args),\n            });\n        }\n    }\n    else if (cardinality === '?') {\n        const idx = ctx.optional++;\n        return (args) => ctx.parser.optional(idx, {\n            DEF: () => method(args),\n            GATE: gate ? () => gate(args) : undefined\n        });\n    }\n    else {\n        assertUnreachable(cardinality);\n    }\n}\nfunction getRule(ctx, element) {\n    const name = getRuleName(ctx, element);\n    const rule = ctx.parser.getRule(name);\n    if (!rule)\n        throw new Error(`Rule \"${name}\" not found.\"`);\n    return rule;\n}\nfunction getRuleName(ctx, element) {\n    if (isParserRule(element)) {\n        return element.name;\n    }\n    else if (ctx.ruleNames.has(element)) {\n        return ctx.ruleNames.get(element);\n    }\n    else {\n        let item = element;\n        let parent = item.$container;\n        let ruleName = element.$type;\n        while (!isParserRule(parent)) {\n            if (isGroup(parent) || isAlternatives(parent) || isUnorderedGroup(parent)) {\n                const index = parent.elements.indexOf(item);\n                ruleName = index.toString() + ':' + ruleName;\n            }\n            item = parent;\n            parent = parent.$container;\n        }\n        const rule = parent;\n        ruleName = rule.name + ':' + ruleName;\n        ctx.ruleNames.set(element, ruleName);\n        return ruleName;\n    }\n}\nfunction getToken(ctx, name) {\n    const token = ctx.tokens[name];\n    if (!token)\n        throw new Error(`Token \"${name}\" not found.\"`);\n    return token;\n}\n//# sourceMappingURL=parser-builder-base.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { LangiumParser } from './langium-parser.js';\nimport { createParser } from './parser-builder-base.js';\n/**\n * Create and finalize a Langium parser. The parser rules are derived from the grammar, which is\n * available at `services.Grammar`.\n */\nexport function createLangiumParser(services) {\n    const parser = prepareLangiumParser(services);\n    parser.finalize();\n    return parser;\n}\n/**\n * Create a Langium parser without finalizing it. This is used to extract more detailed error\n * information when the parser is initially validated.\n */\nexport function prepareLangiumParser(services) {\n    const grammar = services.Grammar;\n    const lexer = services.parser.Lexer;\n    const parser = new LangiumParser(services);\n    return createParser(grammar, parser, lexer.definition);\n}\n//# sourceMappingURL=langium-parser-builder.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken, CancellationTokenSource } from '../utils/cancellation.js';\n/**\n * Delays the execution of the current code to the next tick of the event loop.\n * Don't call this method directly in a tight loop to prevent too many promises from being created.\n */\nexport function delayNextTick() {\n    return new Promise(resolve => {\n        // In case we are running in a non-node environment, `setImmediate` isn't available.\n        // Using `setTimeout` of the browser API accomplishes the same result.\n        if (typeof setImmediate === 'undefined') {\n            setTimeout(resolve, 0);\n        }\n        else {\n            setImmediate(resolve);\n        }\n    });\n}\nlet lastTick = 0;\nlet globalInterruptionPeriod = 10;\n/**\n * Reset the global interruption period and create a cancellation token source.\n */\nexport function startCancelableOperation() {\n    lastTick = performance.now();\n    return new CancellationTokenSource();\n}\n/**\n * Change the period duration for `interruptAndCheck` to the given number of milliseconds.\n * The default value is 10ms.\n */\nexport function setInterruptionPeriod(period) {\n    globalInterruptionPeriod = period;\n}\n/**\n * This symbol may be thrown in an asynchronous context by any Langium service that receives\n * a `CancellationToken`. This means that the promise returned by such a service is rejected with\n * this symbol as rejection reason.\n */\nexport const OperationCancelled = Symbol('OperationCancelled');\n/**\n * Use this in a `catch` block to check whether the thrown object indicates that the operation\n * has been cancelled.\n */\nexport function isOperationCancelled(err) {\n    return err === OperationCancelled;\n}\n/**\n * This function does two things:\n *  1. Check the elapsed time since the last call to this function or to `startCancelableOperation`. If the predefined\n *     period (configured with `setInterruptionPeriod`) is exceeded, execution is delayed with `delayNextTick`.\n *  2. If the predefined period is not met yet or execution is resumed after an interruption, the given cancellation\n *     token is checked, and if cancellation is requested, `OperationCanceled` is thrown.\n *\n * All services in Langium that receive a `CancellationToken` may potentially call this function, so the\n * `CancellationToken` must be caught (with an `async` try-catch block or a `catch` callback attached to\n * the promise) to avoid that event being exposed as an error.\n */\nexport async function interruptAndCheck(token) {\n    if (token === CancellationToken.None) {\n        // Early exit in case cancellation was disabled by the caller\n        return;\n    }\n    const current = performance.now();\n    if (current - lastTick >= globalInterruptionPeriod) {\n        lastTick = current;\n        await delayNextTick();\n        // prevent calling delayNextTick every iteration of loop\n        // where delayNextTick takes up the majority or all of the\n        // globalInterruptionPeriod itself\n        lastTick = performance.now();\n    }\n    if (token.isCancellationRequested) {\n        throw OperationCancelled;\n    }\n}\n/**\n * Simple implementation of the deferred pattern.\n * An object that exposes a promise and functions to resolve and reject it.\n */\nexport class Deferred {\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = (arg) => {\n                resolve(arg);\n                return this;\n            };\n            this.reject = (err) => {\n                reject(err);\n                return this;\n            };\n        });\n    }\n}\n//# sourceMappingURL=promise-utils.js.map","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nclass FullTextDocument {\n    constructor(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = undefined;\n    }\n    get uri() {\n        return this._uri;\n    }\n    get languageId() {\n        return this._languageId;\n    }\n    get version() {\n        return this._version;\n    }\n    getText(range) {\n        if (range) {\n            const start = this.offsetAt(range.start);\n            const end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    }\n    update(changes, version) {\n        for (const change of changes) {\n            if (FullTextDocument.isIncremental(change)) {\n                // makes sure start is before end\n                const range = getWellformedRange(change.range);\n                // update content\n                const startOffset = this.offsetAt(range.start);\n                const endOffset = this.offsetAt(range.end);\n                this._content = this._content.substring(0, startOffset) + change.text + this._content.substring(endOffset, this._content.length);\n                // update the offsets\n                const startLine = Math.max(range.start.line, 0);\n                const endLine = Math.max(range.end.line, 0);\n                let lineOffsets = this._lineOffsets;\n                const addedLineOffsets = computeLineOffsets(change.text, false, startOffset);\n                if (endLine - startLine === addedLineOffsets.length) {\n                    for (let i = 0, len = addedLineOffsets.length; i < len; i++) {\n                        lineOffsets[i + startLine + 1] = addedLineOffsets[i];\n                    }\n                }\n                else {\n                    if (addedLineOffsets.length < 10000) {\n                        lineOffsets.splice(startLine + 1, endLine - startLine, ...addedLineOffsets);\n                    }\n                    else { // avoid too many arguments for splice\n                        this._lineOffsets = lineOffsets = lineOffsets.slice(0, startLine + 1).concat(addedLineOffsets, lineOffsets.slice(endLine + 1));\n                    }\n                }\n                const diff = change.text.length - (endOffset - startOffset);\n                if (diff !== 0) {\n                    for (let i = startLine + 1 + addedLineOffsets.length, len = lineOffsets.length; i < len; i++) {\n                        lineOffsets[i] = lineOffsets[i] + diff;\n                    }\n                }\n            }\n            else if (FullTextDocument.isFull(change)) {\n                this._content = change.text;\n                this._lineOffsets = undefined;\n            }\n            else {\n                throw new Error('Unknown change event received');\n            }\n        }\n        this._version = version;\n    }\n    getLineOffsets() {\n        if (this._lineOffsets === undefined) {\n            this._lineOffsets = computeLineOffsets(this._content, true);\n        }\n        return this._lineOffsets;\n    }\n    positionAt(offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        const lineOffsets = this.getLineOffsets();\n        let low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return { line: 0, character: offset };\n        }\n        while (low < high) {\n            const mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        const line = low - 1;\n        offset = this.ensureBeforeEOL(offset, lineOffsets[line]);\n        return { line, character: offset - lineOffsets[line] };\n    }\n    offsetAt(position) {\n        const lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        const lineOffset = lineOffsets[position.line];\n        if (position.character <= 0) {\n            return lineOffset;\n        }\n        const nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        const offset = Math.min(lineOffset + position.character, nextLineOffset);\n        return this.ensureBeforeEOL(offset, lineOffset);\n    }\n    ensureBeforeEOL(offset, lineOffset) {\n        while (offset > lineOffset && isEOL(this._content.charCodeAt(offset - 1))) {\n            offset--;\n        }\n        return offset;\n    }\n    get lineCount() {\n        return this.getLineOffsets().length;\n    }\n    static isIncremental(event) {\n        const candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range !== undefined &&\n            (candidate.rangeLength === undefined || typeof candidate.rangeLength === 'number');\n    }\n    static isFull(event) {\n        const candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range === undefined && candidate.rangeLength === undefined;\n    }\n}\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new text document.\n     *\n     * @param uri The document's uri.\n     * @param languageId  The document's language Id.\n     * @param version The document's initial version number.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Updates a TextDocument by modifying its content.\n     *\n     * @param document the document to update. Only documents created by TextDocument.create are valid inputs.\n     * @param changes the changes to apply to the document.\n     * @param version the changes version for the document.\n     * @returns The updated TextDocument. Note: That's the same document instance passed in as first parameter.\n     *\n     */\n    function update(document, changes, version) {\n        if (document instanceof FullTextDocument) {\n            document.update(changes, version);\n            return document;\n        }\n        else {\n            throw new Error('TextDocument.update: document must be created by TextDocument.create');\n        }\n    }\n    TextDocument.update = update;\n    function applyEdits(document, edits) {\n        const text = document.getText();\n        const sortedEdits = mergeSort(edits.map(getWellformedEdit), (a, b) => {\n            const diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return diff;\n        });\n        let lastModifiedOffset = 0;\n        const spans = [];\n        for (const e of sortedEdits) {\n            const startOffset = document.offsetAt(e.range.start);\n            if (startOffset < lastModifiedOffset) {\n                throw new Error('Overlapping edit');\n            }\n            else if (startOffset > lastModifiedOffset) {\n                spans.push(text.substring(lastModifiedOffset, startOffset));\n            }\n            if (e.newText.length) {\n                spans.push(e.newText);\n            }\n            lastModifiedOffset = document.offsetAt(e.range.end);\n        }\n        spans.push(text.substr(lastModifiedOffset));\n        return spans.join('');\n    }\n    TextDocument.applyEdits = applyEdits;\n})(TextDocument || (TextDocument = {}));\nfunction mergeSort(data, compare) {\n    if (data.length <= 1) {\n        // sorted\n        return data;\n    }\n    const p = (data.length / 2) | 0;\n    const left = data.slice(0, p);\n    const right = data.slice(p);\n    mergeSort(left, compare);\n    mergeSort(right, compare);\n    let leftIdx = 0;\n    let rightIdx = 0;\n    let i = 0;\n    while (leftIdx < left.length && rightIdx < right.length) {\n        const ret = compare(left[leftIdx], right[rightIdx]);\n        if (ret <= 0) {\n            // smaller_equal -> take left to preserve order\n            data[i++] = left[leftIdx++];\n        }\n        else {\n            // greater -> take right\n            data[i++] = right[rightIdx++];\n        }\n    }\n    while (leftIdx < left.length) {\n        data[i++] = left[leftIdx++];\n    }\n    while (rightIdx < right.length) {\n        data[i++] = right[rightIdx++];\n    }\n    return data;\n}\nfunction computeLineOffsets(text, isAtLineStart, textOffset = 0) {\n    const result = isAtLineStart ? [textOffset] : [];\n    for (let i = 0; i < text.length; i++) {\n        const ch = text.charCodeAt(i);\n        if (isEOL(ch)) {\n            if (ch === 13 /* CharCode.CarriageReturn */ && i + 1 < text.length && text.charCodeAt(i + 1) === 10 /* CharCode.LineFeed */) {\n                i++;\n            }\n            result.push(textOffset + i + 1);\n        }\n    }\n    return result;\n}\nfunction isEOL(char) {\n    return char === 13 /* CharCode.CarriageReturn */ || char === 10 /* CharCode.LineFeed */;\n}\nfunction getWellformedRange(range) {\n    const start = range.start;\n    const end = range.end;\n    if (start.line > end.line || (start.line === end.line && start.character > end.character)) {\n        return { start: end, end: start };\n    }\n    return range;\n}\nfunction getWellformedEdit(textEdit) {\n    const range = getWellformedRange(textEdit.range);\n    if (range !== textEdit.range) {\n        return { newText: textEdit.newText, range };\n    }\n    return textEdit;\n}\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\n/**\n * Re-export 'TextDocument' from 'vscode-languageserver-textdocument' for convenience,\n *  including both type _and_ symbol (namespace), as we here and there also refer to the symbol,\n *  the overhead is very small, just a few kilobytes.\n * Everything else of that package (at the time contributing) is also defined\n *  in 'vscode-languageserver-protocol' or 'vscode-languageserver-types'.\n */\nexport { TextDocument } from 'vscode-languageserver-textdocument';\nimport { TextDocument } from './documents.js';\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { stream } from '../utils/stream.js';\nimport { URI } from '../utils/uri-utils.js';\n/**\n * A document is subject to several phases that are run in predefined order. Any state value implies that\n * smaller state values are finished as well.\n */\nexport var DocumentState;\n(function (DocumentState) {\n    /**\n     * The text content has changed and needs to be parsed again. The AST held by this outdated\n     * document instance is no longer valid.\n     */\n    DocumentState[DocumentState[\"Changed\"] = 0] = \"Changed\";\n    /**\n     * An AST has been created from the text content. The document structure can be traversed,\n     * but cross-references cannot be resolved yet. If necessary, the structure can be manipulated\n     * at this stage as a preprocessing step.\n     */\n    DocumentState[DocumentState[\"Parsed\"] = 1] = \"Parsed\";\n    /**\n     * The `IndexManager` service has processed AST nodes of this document. This means the\n     * exported symbols are available in the global scope and can be resolved from other documents.\n     */\n    DocumentState[DocumentState[\"IndexedContent\"] = 2] = \"IndexedContent\";\n    /**\n     * The `ScopeComputation` service has processed this document. This means the local symbols\n     * are stored in a MultiMap so they can be looked up by the `ScopeProvider` service.\n     * Once a document has reached this state, you may follow every reference - it will lazily\n     * resolve its `ref` property and yield either the target AST node or `undefined` in case\n     * the target is not in scope.\n     */\n    DocumentState[DocumentState[\"ComputedScopes\"] = 3] = \"ComputedScopes\";\n    /**\n     * The `Linker` service has processed this document. All outgoing references have been\n     * resolved or marked as erroneous.\n     */\n    DocumentState[DocumentState[\"Linked\"] = 4] = \"Linked\";\n    /**\n     * The `IndexManager` service has processed AST node references of this document. This is\n     * necessary to determine which documents are affected by a change in one of the workspace\n     * documents.\n     */\n    DocumentState[DocumentState[\"IndexedReferences\"] = 5] = \"IndexedReferences\";\n    /**\n     * The `DocumentValidator` service has processed this document. The language server listens\n     * to the results of this phase and sends diagnostics to the client.\n     */\n    DocumentState[DocumentState[\"Validated\"] = 6] = \"Validated\";\n})(DocumentState || (DocumentState = {}));\nexport class DefaultLangiumDocumentFactory {\n    constructor(services) {\n        this.serviceRegistry = services.ServiceRegistry;\n        this.textDocuments = services.workspace.TextDocuments;\n        this.fileSystemProvider = services.workspace.FileSystemProvider;\n    }\n    async fromUri(uri, cancellationToken = CancellationToken.None) {\n        const content = await this.fileSystemProvider.readFile(uri);\n        return this.createAsync(uri, content, cancellationToken);\n    }\n    fromTextDocument(textDocument, uri, token) {\n        uri = uri !== null && uri !== void 0 ? uri : URI.parse(textDocument.uri);\n        if (CancellationToken.is(token)) {\n            return this.createAsync(uri, textDocument, token);\n        }\n        else {\n            return this.create(uri, textDocument, token);\n        }\n    }\n    fromString(text, uri, token) {\n        if (CancellationToken.is(token)) {\n            return this.createAsync(uri, text, token);\n        }\n        else {\n            return this.create(uri, text, token);\n        }\n    }\n    fromModel(model, uri) {\n        return this.create(uri, { $model: model });\n    }\n    create(uri, content, options) {\n        if (typeof content === 'string') {\n            const parseResult = this.parse(uri, content, options);\n            return this.createLangiumDocument(parseResult, uri, undefined, content);\n        }\n        else if ('$model' in content) {\n            const parseResult = { value: content.$model, parserErrors: [], lexerErrors: [] };\n            return this.createLangiumDocument(parseResult, uri);\n        }\n        else {\n            const parseResult = this.parse(uri, content.getText(), options);\n            return this.createLangiumDocument(parseResult, uri, content);\n        }\n    }\n    async createAsync(uri, content, cancelToken) {\n        if (typeof content === 'string') {\n            const parseResult = await this.parseAsync(uri, content, cancelToken);\n            return this.createLangiumDocument(parseResult, uri, undefined, content);\n        }\n        else {\n            const parseResult = await this.parseAsync(uri, content.getText(), cancelToken);\n            return this.createLangiumDocument(parseResult, uri, content);\n        }\n    }\n    /**\n     * Create a LangiumDocument from a given parse result.\n     *\n     * A TextDocument is created on demand if it is not provided as argument here. Usually this\n     * should not be necessary because the main purpose of the TextDocument is to convert between\n     * text ranges and offsets, which is done solely in LSP request handling.\n     *\n     * With the introduction of {@link update} below this method is supposed to be mainly called\n     * during workspace initialization and on addition/recognition of new files, while changes in\n     * existing documents are processed via {@link update}.\n     */\n    createLangiumDocument(parseResult, uri, textDocument, text) {\n        let document;\n        if (textDocument) {\n            document = {\n                parseResult,\n                uri,\n                state: DocumentState.Parsed,\n                references: [],\n                textDocument\n            };\n        }\n        else {\n            const textDocumentGetter = this.createTextDocumentGetter(uri, text);\n            document = {\n                parseResult,\n                uri,\n                state: DocumentState.Parsed,\n                references: [],\n                get textDocument() {\n                    return textDocumentGetter();\n                }\n            };\n        }\n        parseResult.value.$document = document;\n        return document;\n    }\n    async update(document, cancellationToken) {\n        var _a, _b;\n        // The CST full text property contains the original text that was used to create the AST.\n        const oldText = (_a = document.parseResult.value.$cstNode) === null || _a === void 0 ? void 0 : _a.root.fullText;\n        const textDocument = (_b = this.textDocuments) === null || _b === void 0 ? void 0 : _b.get(document.uri.toString());\n        const text = textDocument ? textDocument.getText() : await this.fileSystemProvider.readFile(document.uri);\n        if (textDocument) {\n            Object.defineProperty(document, 'textDocument', {\n                value: textDocument\n            });\n        }\n        else {\n            const textDocumentGetter = this.createTextDocumentGetter(document.uri, text);\n            Object.defineProperty(document, 'textDocument', {\n                get: textDocumentGetter\n            });\n        }\n        // Some of these documents can be pretty large, so parsing them again can be quite expensive.\n        // Therefore, we only parse if the text has actually changed.\n        if (oldText !== text) {\n            document.parseResult = await this.parseAsync(document.uri, text, cancellationToken);\n            document.parseResult.value.$document = document;\n        }\n        document.state = DocumentState.Parsed;\n        return document;\n    }\n    parse(uri, text, options) {\n        const services = this.serviceRegistry.getServices(uri);\n        return services.parser.LangiumParser.parse(text, options);\n    }\n    parseAsync(uri, text, cancellationToken) {\n        const services = this.serviceRegistry.getServices(uri);\n        return services.parser.AsyncParser.parse(text, cancellationToken);\n    }\n    createTextDocumentGetter(uri, text) {\n        const serviceRegistry = this.serviceRegistry;\n        let textDoc = undefined;\n        return () => {\n            return textDoc !== null && textDoc !== void 0 ? textDoc : (textDoc = TextDocument.create(uri.toString(), serviceRegistry.getServices(uri).LanguageMetaData.languageId, 0, text !== null && text !== void 0 ? text : ''));\n        };\n    }\n}\nexport class DefaultLangiumDocuments {\n    constructor(services) {\n        this.documentMap = new Map();\n        this.langiumDocumentFactory = services.workspace.LangiumDocumentFactory;\n        this.serviceRegistry = services.ServiceRegistry;\n    }\n    get all() {\n        return stream(this.documentMap.values());\n    }\n    addDocument(document) {\n        const uriString = document.uri.toString();\n        if (this.documentMap.has(uriString)) {\n            throw new Error(`A document with the URI '${uriString}' is already present.`);\n        }\n        this.documentMap.set(uriString, document);\n    }\n    getDocument(uri) {\n        const uriString = uri.toString();\n        return this.documentMap.get(uriString);\n    }\n    async getOrCreateDocument(uri, cancellationToken) {\n        let document = this.getDocument(uri);\n        if (document) {\n            return document;\n        }\n        document = await this.langiumDocumentFactory.fromUri(uri, cancellationToken);\n        this.addDocument(document);\n        return document;\n    }\n    createDocument(uri, text, cancellationToken) {\n        if (cancellationToken) {\n            return this.langiumDocumentFactory.fromString(text, uri, cancellationToken).then(document => {\n                this.addDocument(document);\n                return document;\n            });\n        }\n        else {\n            const document = this.langiumDocumentFactory.fromString(text, uri);\n            this.addDocument(document);\n            return document;\n        }\n    }\n    hasDocument(uri) {\n        return this.documentMap.has(uri.toString());\n    }\n    invalidateDocument(uri) {\n        const uriString = uri.toString();\n        const langiumDoc = this.documentMap.get(uriString);\n        if (langiumDoc) {\n            const linker = this.serviceRegistry.getServices(uri).references.Linker;\n            linker.unlink(langiumDoc);\n            langiumDoc.state = DocumentState.Changed;\n            langiumDoc.precomputedScopes = undefined;\n            langiumDoc.diagnostics = undefined;\n        }\n        return langiumDoc;\n    }\n    deleteDocument(uri) {\n        const uriString = uri.toString();\n        const langiumDoc = this.documentMap.get(uriString);\n        if (langiumDoc) {\n            langiumDoc.state = DocumentState.Changed;\n            this.documentMap.delete(uriString);\n        }\n        return langiumDoc;\n    }\n}\n//# sourceMappingURL=documents.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { isAstNode, isAstNodeDescription, isLinkingError } from '../syntax-tree.js';\nimport { findRootNode, streamAst, streamReferences } from '../utils/ast-utils.js';\nimport { interruptAndCheck } from '../utils/promise-utils.js';\nimport { DocumentState } from '../workspace/documents.js';\nconst ref_resolving = Symbol('ref_resolving');\nexport class DefaultLinker {\n    constructor(services) {\n        this.reflection = services.shared.AstReflection;\n        this.langiumDocuments = () => services.shared.workspace.LangiumDocuments;\n        this.scopeProvider = services.references.ScopeProvider;\n        this.astNodeLocator = services.workspace.AstNodeLocator;\n    }\n    async link(document, cancelToken = CancellationToken.None) {\n        for (const node of streamAst(document.parseResult.value)) {\n            await interruptAndCheck(cancelToken);\n            streamReferences(node).forEach(ref => this.doLink(ref, document));\n        }\n    }\n    doLink(refInfo, document) {\n        var _a;\n        const ref = refInfo.reference;\n        // The reference may already have been resolved lazily by accessing its `ref` property.\n        if (ref._ref === undefined) {\n            ref._ref = ref_resolving;\n            try {\n                const description = this.getCandidate(refInfo);\n                if (isLinkingError(description)) {\n                    ref._ref = description;\n                }\n                else {\n                    ref._nodeDescription = description;\n                    if (this.langiumDocuments().hasDocument(description.documentUri)) {\n                        // The target document is already loaded\n                        const linkedNode = this.loadAstNode(description);\n                        ref._ref = linkedNode !== null && linkedNode !== void 0 ? linkedNode : this.createLinkingError(refInfo, description);\n                    }\n                    else {\n                        // Try to load the target AST node later using the already provided description\n                        ref._ref = undefined;\n                    }\n                }\n            }\n            catch (err) {\n                console.error(`An error occurred while resolving reference to '${ref.$refText}':`, err);\n                const errorMessage = (_a = err.message) !== null && _a !== void 0 ? _a : String(err);\n                ref._ref = Object.assign(Object.assign({}, refInfo), { message: `An error occurred while resolving reference to '${ref.$refText}': ${errorMessage}` });\n            }\n            // Add the reference to the document's array of references\n            // Only add if the reference has been not been resolved earlier\n            // Otherwise we end up with duplicates\n            // See also implementation of `buildReference`\n            document.references.push(ref);\n        }\n    }\n    unlink(document) {\n        for (const ref of document.references) {\n            delete ref._ref;\n            delete ref._nodeDescription;\n        }\n        document.references = [];\n    }\n    getCandidate(refInfo) {\n        const scope = this.scopeProvider.getScope(refInfo);\n        const description = scope.getElement(refInfo.reference.$refText);\n        return description !== null && description !== void 0 ? description : this.createLinkingError(refInfo);\n    }\n    buildReference(node, property, refNode, refText) {\n        // See behavior description in doc of Linker, update that on changes in here.\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const linker = this;\n        const reference = {\n            $refNode: refNode,\n            $refText: refText,\n            get ref() {\n                var _a;\n                if (isAstNode(this._ref)) {\n                    // Most frequent case: the target is already resolved.\n                    return this._ref;\n                }\n                else if (isAstNodeDescription(this._nodeDescription)) {\n                    // A candidate has been found before, but it is not loaded yet.\n                    const linkedNode = linker.loadAstNode(this._nodeDescription);\n                    this._ref = linkedNode !== null && linkedNode !== void 0 ? linkedNode : linker.createLinkingError({ reference, container: node, property }, this._nodeDescription);\n                }\n                else if (this._ref === undefined) {\n                    // The reference has not been linked yet, so do that now.\n                    this._ref = ref_resolving;\n                    const document = findRootNode(node).$document;\n                    const refData = linker.getLinkedNode({ reference, container: node, property });\n                    if (refData.error && document && document.state < DocumentState.ComputedScopes) {\n                        // Document scope is not ready, don't set `this._ref` so linker can retry later.\n                        return this._ref = undefined;\n                    }\n                    this._ref = (_a = refData.node) !== null && _a !== void 0 ? _a : refData.error;\n                    this._nodeDescription = refData.descr;\n                    document === null || document === void 0 ? void 0 : document.references.push(this);\n                }\n                else if (this._ref === ref_resolving) {\n                    throw new Error(`Cyclic reference resolution detected: ${linker.astNodeLocator.getAstNodePath(node)}/${property} (symbol '${refText}')`);\n                }\n                return isAstNode(this._ref) ? this._ref : undefined;\n            },\n            get $nodeDescription() {\n                return this._nodeDescription;\n            },\n            get error() {\n                return isLinkingError(this._ref) ? this._ref : undefined;\n            }\n        };\n        return reference;\n    }\n    getLinkedNode(refInfo) {\n        var _a;\n        try {\n            const description = this.getCandidate(refInfo);\n            if (isLinkingError(description)) {\n                return { error: description };\n            }\n            const linkedNode = this.loadAstNode(description);\n            if (linkedNode) {\n                return { node: linkedNode, descr: description };\n            }\n            else {\n                return {\n                    descr: description,\n                    error: this.createLinkingError(refInfo, description)\n                };\n            }\n        }\n        catch (err) {\n            console.error(`An error occurred while resolving reference to '${refInfo.reference.$refText}':`, err);\n            const errorMessage = (_a = err.message) !== null && _a !== void 0 ? _a : String(err);\n            return {\n                error: Object.assign(Object.assign({}, refInfo), { message: `An error occurred while resolving reference to '${refInfo.reference.$refText}': ${errorMessage}` })\n            };\n        }\n    }\n    loadAstNode(nodeDescription) {\n        if (nodeDescription.node) {\n            return nodeDescription.node;\n        }\n        const doc = this.langiumDocuments().getDocument(nodeDescription.documentUri);\n        if (!doc) {\n            return undefined;\n        }\n        return this.astNodeLocator.getAstNode(doc.parseResult.value, nodeDescription.path);\n    }\n    createLinkingError(refInfo, targetDescription) {\n        // Check whether the document is sufficiently processed by the DocumentBuilder. If not, this is a hint for a bug\n        // in the language implementation.\n        const document = findRootNode(refInfo.container).$document;\n        if (document && document.state < DocumentState.ComputedScopes) {\n            console.warn(`Attempted reference resolution before document reached ComputedScopes state (${document.uri}).`);\n        }\n        const referenceType = this.reflection.getReferenceType(refInfo);\n        return Object.assign(Object.assign({}, refInfo), { message: `Could not resolve reference to ${referenceType} named '${refInfo.reference.$refText}'.`, targetDescription });\n    }\n}\n//# sourceMappingURL=linker.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { findNodeForProperty } from '../utils/grammar-utils.js';\nexport function isNamed(node) {\n    return typeof node.name === 'string';\n}\nexport class DefaultNameProvider {\n    getName(node) {\n        if (isNamed(node)) {\n            return node.name;\n        }\n        return undefined;\n    }\n    getNameNode(node) {\n        return findNodeForProperty(node.$cstNode, 'name');\n    }\n}\n//# sourceMappingURL=name-provider.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { URI, Utils } from 'vscode-uri';\nexport { URI };\nexport var UriUtils;\n(function (UriUtils) {\n    UriUtils.basename = Utils.basename;\n    UriUtils.dirname = Utils.dirname;\n    UriUtils.extname = Utils.extname;\n    UriUtils.joinPath = Utils.joinPath;\n    UriUtils.resolvePath = Utils.resolvePath;\n    function equals(a, b) {\n        return (a === null || a === void 0 ? void 0 : a.toString()) === (b === null || b === void 0 ? void 0 : b.toString());\n    }\n    UriUtils.equals = equals;\n    function relative(from, to) {\n        const fromPath = typeof from === 'string' ? from : from.path;\n        const toPath = typeof to === 'string' ? to : to.path;\n        const fromParts = fromPath.split('/').filter(e => e.length > 0);\n        const toParts = toPath.split('/').filter(e => e.length > 0);\n        let i = 0;\n        for (; i < fromParts.length; i++) {\n            if (fromParts[i] !== toParts[i]) {\n                break;\n            }\n        }\n        const backPart = '../'.repeat(fromParts.length - i);\n        const toPart = toParts.slice(i).join('/');\n        return backPart + toPart;\n    }\n    UriUtils.relative = relative;\n    function normalize(uri) {\n        return URI.parse(uri.toString()).toString();\n    }\n    UriUtils.normalize = normalize;\n})(UriUtils || (UriUtils = {}));\n//# sourceMappingURL=uri-utils.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { findAssignment } from '../utils/grammar-utils.js';\nimport { isReference } from '../syntax-tree.js';\nimport { getDocument } from '../utils/ast-utils.js';\nimport { isChildNode, toDocumentSegment } from '../utils/cst-utils.js';\nimport { stream } from '../utils/stream.js';\nimport { UriUtils } from '../utils/uri-utils.js';\nexport class DefaultReferences {\n    constructor(services) {\n        this.nameProvider = services.references.NameProvider;\n        this.index = services.shared.workspace.IndexManager;\n        this.nodeLocator = services.workspace.AstNodeLocator;\n    }\n    findDeclaration(sourceCstNode) {\n        if (sourceCstNode) {\n            const assignment = findAssignment(sourceCstNode);\n            const nodeElem = sourceCstNode.astNode;\n            if (assignment && nodeElem) {\n                const reference = nodeElem[assignment.feature];\n                if (isReference(reference)) {\n                    return reference.ref;\n                }\n                else if (Array.isArray(reference)) {\n                    for (const ref of reference) {\n                        if (isReference(ref) && ref.$refNode\n                            && ref.$refNode.offset <= sourceCstNode.offset\n                            && ref.$refNode.end >= sourceCstNode.end) {\n                            return ref.ref;\n                        }\n                    }\n                }\n            }\n            if (nodeElem) {\n                const nameNode = this.nameProvider.getNameNode(nodeElem);\n                // Only return the targeted node in case the targeted cst node is the name node or part of it\n                if (nameNode && (nameNode === sourceCstNode || isChildNode(sourceCstNode, nameNode))) {\n                    return nodeElem;\n                }\n            }\n        }\n        return undefined;\n    }\n    findDeclarationNode(sourceCstNode) {\n        const astNode = this.findDeclaration(sourceCstNode);\n        if (astNode === null || astNode === void 0 ? void 0 : astNode.$cstNode) {\n            const targetNode = this.nameProvider.getNameNode(astNode);\n            return targetNode !== null && targetNode !== void 0 ? targetNode : astNode.$cstNode;\n        }\n        return undefined;\n    }\n    findReferences(targetNode, options) {\n        const refs = [];\n        if (options.includeDeclaration) {\n            const ref = this.getReferenceToSelf(targetNode);\n            if (ref) {\n                refs.push(ref);\n            }\n        }\n        let indexReferences = this.index.findAllReferences(targetNode, this.nodeLocator.getAstNodePath(targetNode));\n        if (options.documentUri) {\n            indexReferences = indexReferences.filter(ref => UriUtils.equals(ref.sourceUri, options.documentUri));\n        }\n        refs.push(...indexReferences);\n        return stream(refs);\n    }\n    getReferenceToSelf(targetNode) {\n        const nameNode = this.nameProvider.getNameNode(targetNode);\n        if (nameNode) {\n            const doc = getDocument(targetNode);\n            const path = this.nodeLocator.getAstNodePath(targetNode);\n            return {\n                sourceUri: doc.uri,\n                sourcePath: path,\n                targetUri: doc.uri,\n                targetPath: path,\n                segment: toDocumentSegment(nameNode),\n                local: true\n            };\n        }\n        return undefined;\n    }\n}\n//# sourceMappingURL=references.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Reduction, stream } from './stream.js';\n/**\n * A multimap is a variation of a Map that has potentially multiple values for every key.\n */\nexport class MultiMap {\n    constructor(elements) {\n        this.map = new Map();\n        if (elements) {\n            for (const [key, value] of elements) {\n                this.add(key, value);\n            }\n        }\n    }\n    /**\n     * The total number of values in the multimap.\n     */\n    get size() {\n        return Reduction.sum(stream(this.map.values()).map(a => a.length));\n    }\n    /**\n     * Clear all entries in the multimap.\n     */\n    clear() {\n        this.map.clear();\n    }\n    /**\n     * Operates differently depending on whether a `value` is given:\n     *  * With a value, this method deletes the specific key / value pair from the multimap.\n     *  * Without a value, all values associated with the given key are deleted.\n     *\n     * @returns `true` if a value existed and has been removed, or `false` if the specified\n     *     key / value does not exist.\n     */\n    delete(key, value) {\n        if (value === undefined) {\n            return this.map.delete(key);\n        }\n        else {\n            const values = this.map.get(key);\n            if (values) {\n                const index = values.indexOf(value);\n                if (index >= 0) {\n                    if (values.length === 1) {\n                        this.map.delete(key);\n                    }\n                    else {\n                        values.splice(index, 1);\n                    }\n                    return true;\n                }\n            }\n            return false;\n        }\n    }\n    /**\n     * Returns an array of all values associated with the given key. If no value exists,\n     * an empty array is returned.\n     *\n     * _Note:_ The returned array is assumed not to be modified. Use the `set` method to add a\n     * value and `delete` to remove a value from the multimap.\n     */\n    get(key) {\n        var _a;\n        return (_a = this.map.get(key)) !== null && _a !== void 0 ? _a : [];\n    }\n    /**\n     * Operates differently depending on whether a `value` is given:\n     *  * With a value, this method returns `true` if the specific key / value pair is present in the multimap.\n     *  * Without a value, this method returns `true` if the given key is present in the multimap.\n     */\n    has(key, value) {\n        if (value === undefined) {\n            return this.map.has(key);\n        }\n        else {\n            const values = this.map.get(key);\n            if (values) {\n                return values.indexOf(value) >= 0;\n            }\n            return false;\n        }\n    }\n    /**\n     * Add the given key / value pair to the multimap.\n     */\n    add(key, value) {\n        if (this.map.has(key)) {\n            this.map.get(key).push(value);\n        }\n        else {\n            this.map.set(key, [value]);\n        }\n        return this;\n    }\n    /**\n     * Add the given set of key / value pairs to the multimap.\n     */\n    addAll(key, values) {\n        if (this.map.has(key)) {\n            this.map.get(key).push(...values);\n        }\n        else {\n            this.map.set(key, Array.from(values));\n        }\n        return this;\n    }\n    /**\n     * Invokes the given callback function for every key / value pair in the multimap.\n     */\n    forEach(callbackfn) {\n        this.map.forEach((array, key) => array.forEach(value => callbackfn(value, key, this)));\n    }\n    /**\n     * Returns an iterator of key, value pairs for every entry in the map.\n     */\n    [Symbol.iterator]() {\n        return this.entries().iterator();\n    }\n    /**\n     * Returns a stream of key, value pairs for every entry in the map.\n     */\n    entries() {\n        return stream(this.map.entries())\n            .flatMap(([key, array]) => array.map(value => [key, value]));\n    }\n    /**\n     * Returns a stream of keys in the map.\n     */\n    keys() {\n        return stream(this.map.keys());\n    }\n    /**\n     * Returns a stream of values in the map.\n     */\n    values() {\n        return stream(this.map.values()).flat();\n    }\n    /**\n     * Returns a stream of key, value set pairs for every key in the map.\n     */\n    entriesGroupedByKey() {\n        return stream(this.map.entries());\n    }\n}\nexport class BiMap {\n    get size() {\n        return this.map.size;\n    }\n    constructor(elements) {\n        this.map = new Map();\n        this.inverse = new Map();\n        if (elements) {\n            for (const [key, value] of elements) {\n                this.set(key, value);\n            }\n        }\n    }\n    clear() {\n        this.map.clear();\n        this.inverse.clear();\n    }\n    set(key, value) {\n        this.map.set(key, value);\n        this.inverse.set(value, key);\n        return this;\n    }\n    get(key) {\n        return this.map.get(key);\n    }\n    getKey(value) {\n        return this.inverse.get(value);\n    }\n    delete(key) {\n        const value = this.map.get(key);\n        if (value !== undefined) {\n            this.map.delete(key);\n            this.inverse.delete(value);\n            return true;\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=collections.js.map","/******************************************************************************\n * Copyright 2021-2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { streamAllContents, streamContents } from '../utils/ast-utils.js';\nimport { MultiMap } from '../utils/collections.js';\nimport { interruptAndCheck } from '../utils/promise-utils.js';\n/**\n * The default scope computation creates and collectes descriptions of the AST nodes to be exported into the\n * _global_ scope from the given document. By default those are the document's root AST node and its directly\n * contained child nodes.\n *\n * Besides, it gathers all AST nodes that have a name (according to the `NameProvider` service) and includes them\n * in the local scope of their particular container nodes. As a result, for every cross-reference in the AST,\n * target elements from the same level (siblings) and further up towards the root (parents and siblings of parents)\n * are visible. Elements being nested inside lower levels (children, children of siblings and parents' siblings)\n * are _invisible_ by default, but that can be changed by customizing this service.\n */\nexport class DefaultScopeComputation {\n    constructor(services) {\n        this.nameProvider = services.references.NameProvider;\n        this.descriptions = services.workspace.AstNodeDescriptionProvider;\n    }\n    async computeExports(document, cancelToken = CancellationToken.None) {\n        return this.computeExportsForNode(document.parseResult.value, document, undefined, cancelToken);\n    }\n    /**\n     * Creates {@link AstNodeDescription AstNodeDescriptions} for the given {@link AstNode parentNode} and its children.\n     * The list of children to be considered is determined by the function parameter {@link children}.\n     * By default only the direct children of {@link parentNode} are visited, nested nodes are not exported.\n     *\n     * @param parentNode AST node to be exported, i.e., of which an {@link AstNodeDescription} shall be added to the returned list.\n     * @param document The document containing the AST node to be exported.\n     * @param children A function called with {@link parentNode} as single argument and returning an {@link Iterable} supplying the children to be visited, which must be directly or transitively contained in {@link parentNode}.\n     * @param cancelToken Indicates when to cancel the current operation.\n     * @throws `OperationCancelled` if a user action occurs during execution.\n     * @returns A list of {@link AstNodeDescription AstNodeDescriptions} to be published to index.\n     */\n    async computeExportsForNode(parentNode, document, children = streamContents, cancelToken = CancellationToken.None) {\n        const exports = [];\n        this.exportNode(parentNode, exports, document);\n        for (const node of children(parentNode)) {\n            await interruptAndCheck(cancelToken);\n            this.exportNode(node, exports, document);\n        }\n        return exports;\n    }\n    /**\n     * Add a single node to the list of exports if it has a name. Override this method to change how\n     * symbols are exported, e.g. by modifying their exported name.\n     */\n    exportNode(node, exports, document) {\n        const name = this.nameProvider.getName(node);\n        if (name) {\n            exports.push(this.descriptions.createDescription(node, name, document));\n        }\n    }\n    async computeLocalScopes(document, cancelToken = CancellationToken.None) {\n        const rootNode = document.parseResult.value;\n        const scopes = new MultiMap();\n        // Here we navigate the full AST - local scopes shall be available in the whole document\n        for (const node of streamAllContents(rootNode)) {\n            await interruptAndCheck(cancelToken);\n            this.processNode(node, document, scopes);\n        }\n        return scopes;\n    }\n    /**\n     * Process a single node during scopes computation. The default implementation makes the node visible\n     * in the subtree of its container (if the node has a name). Override this method to change this,\n     * e.g. by increasing the visibility to a higher level in the AST.\n     */\n    processNode(node, document, scopes) {\n        const container = node.$container;\n        if (container) {\n            const name = this.nameProvider.getName(node);\n            if (name) {\n                scopes.add(container, this.descriptions.createDescription(node, name, document));\n            }\n        }\n    }\n}\n//# sourceMappingURL=scope-computation.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { EMPTY_STREAM, stream } from '../utils/stream.js';\n/**\n * The default scope implementation is based on a `Stream`. It has an optional _outer scope_ describing\n * the next level of elements, which are queried when a target element is not found in the stream provided\n * to this scope.\n */\nexport class StreamScope {\n    constructor(elements, outerScope, options) {\n        var _a;\n        this.elements = elements;\n        this.outerScope = outerScope;\n        this.caseInsensitive = (_a = options === null || options === void 0 ? void 0 : options.caseInsensitive) !== null && _a !== void 0 ? _a : false;\n    }\n    getAllElements() {\n        if (this.outerScope) {\n            return this.elements.concat(this.outerScope.getAllElements());\n        }\n        else {\n            return this.elements;\n        }\n    }\n    getElement(name) {\n        const local = this.caseInsensitive\n            ? this.elements.find(e => e.name.toLowerCase() === name.toLowerCase())\n            : this.elements.find(e => e.name === name);\n        if (local) {\n            return local;\n        }\n        if (this.outerScope) {\n            return this.outerScope.getElement(name);\n        }\n        return undefined;\n    }\n}\nexport class MapScope {\n    constructor(elements, outerScope, options) {\n        var _a;\n        this.elements = new Map();\n        this.caseInsensitive = (_a = options === null || options === void 0 ? void 0 : options.caseInsensitive) !== null && _a !== void 0 ? _a : false;\n        for (const element of elements) {\n            const name = this.caseInsensitive\n                ? element.name.toLowerCase()\n                : element.name;\n            this.elements.set(name, element);\n        }\n        this.outerScope = outerScope;\n    }\n    getElement(name) {\n        const localName = this.caseInsensitive ? name.toLowerCase() : name;\n        const local = this.elements.get(localName);\n        if (local) {\n            return local;\n        }\n        if (this.outerScope) {\n            return this.outerScope.getElement(name);\n        }\n        return undefined;\n    }\n    getAllElements() {\n        let elementStream = stream(this.elements.values());\n        if (this.outerScope) {\n            elementStream = elementStream.concat(this.outerScope.getAllElements());\n        }\n        return elementStream;\n    }\n}\nexport const EMPTY_SCOPE = {\n    getElement() {\n        return undefined;\n    },\n    getAllElements() {\n        return EMPTY_STREAM;\n    }\n};\n//# sourceMappingURL=scope.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class DisposableCache {\n    constructor() {\n        this.toDispose = [];\n        this.isDisposed = false;\n    }\n    onDispose(disposable) {\n        this.toDispose.push(disposable);\n    }\n    dispose() {\n        this.throwIfDisposed();\n        this.clear();\n        this.isDisposed = true;\n        this.toDispose.forEach(disposable => disposable.dispose());\n    }\n    throwIfDisposed() {\n        if (this.isDisposed) {\n            throw new Error('This cache has already been disposed');\n        }\n    }\n}\nexport class SimpleCache extends DisposableCache {\n    constructor() {\n        super(...arguments);\n        this.cache = new Map();\n    }\n    has(key) {\n        this.throwIfDisposed();\n        return this.cache.has(key);\n    }\n    set(key, value) {\n        this.throwIfDisposed();\n        this.cache.set(key, value);\n    }\n    get(key, provider) {\n        this.throwIfDisposed();\n        if (this.cache.has(key)) {\n            return this.cache.get(key);\n        }\n        else if (provider) {\n            const value = provider();\n            this.cache.set(key, value);\n            return value;\n        }\n        else {\n            return undefined;\n        }\n    }\n    delete(key) {\n        this.throwIfDisposed();\n        return this.cache.delete(key);\n    }\n    clear() {\n        this.throwIfDisposed();\n        this.cache.clear();\n    }\n}\nexport class ContextCache extends DisposableCache {\n    constructor(converter) {\n        super();\n        this.cache = new Map();\n        this.converter = converter !== null && converter !== void 0 ? converter : (value => value);\n    }\n    has(contextKey, key) {\n        this.throwIfDisposed();\n        return this.cacheForContext(contextKey).has(key);\n    }\n    set(contextKey, key, value) {\n        this.throwIfDisposed();\n        this.cacheForContext(contextKey).set(key, value);\n    }\n    get(contextKey, key, provider) {\n        this.throwIfDisposed();\n        const contextCache = this.cacheForContext(contextKey);\n        if (contextCache.has(key)) {\n            return contextCache.get(key);\n        }\n        else if (provider) {\n            const value = provider();\n            contextCache.set(key, value);\n            return value;\n        }\n        else {\n            return undefined;\n        }\n    }\n    delete(contextKey, key) {\n        this.throwIfDisposed();\n        return this.cacheForContext(contextKey).delete(key);\n    }\n    clear(contextKey) {\n        this.throwIfDisposed();\n        if (contextKey) {\n            const mapKey = this.converter(contextKey);\n            this.cache.delete(mapKey);\n        }\n        else {\n            this.cache.clear();\n        }\n    }\n    cacheForContext(contextKey) {\n        const mapKey = this.converter(contextKey);\n        let documentCache = this.cache.get(mapKey);\n        if (!documentCache) {\n            documentCache = new Map();\n            this.cache.set(mapKey, documentCache);\n        }\n        return documentCache;\n    }\n}\n/**\n * Every key/value pair in this cache is scoped to a document.\n * If this document is changed or deleted, all associated key/value pairs are deleted.\n */\nexport class DocumentCache extends ContextCache {\n    /**\n     * Creates a new document cache.\n     *\n     * @param sharedServices Service container instance to hook into document lifecycle events.\n     * @param state Optional document state on which the cache should evict.\n     * If not provided, the cache will evict on `DocumentBuilder#onUpdate`.\n     * *Deleted* documents are considered in both cases.\n     *\n     * Providing a state here will use `DocumentBuilder#onDocumentPhase` instead,\n     * which triggers on all documents that have been affected by this change, assuming that the\n     * state is `DocumentState.Linked` or a later state.\n     */\n    constructor(sharedServices, state) {\n        super(uri => uri.toString());\n        if (state) {\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onDocumentPhase(state, document => {\n                this.clear(document.uri.toString());\n            }));\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onUpdate((_changed, deleted) => {\n                for (const uri of deleted) { // react only on deleted documents\n                    this.clear(uri);\n                }\n            }));\n        }\n        else {\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onUpdate((changed, deleted) => {\n                const allUris = changed.concat(deleted); // react on both changed and deleted documents\n                for (const uri of allUris) {\n                    this.clear(uri);\n                }\n            }));\n        }\n    }\n}\n/**\n * Every key/value pair in this cache is scoped to the whole workspace.\n * If any document in the workspace is added, changed or deleted, the whole cache is evicted.\n */\nexport class WorkspaceCache extends SimpleCache {\n    /**\n     * Creates a new workspace cache.\n     *\n     * @param sharedServices Service container instance to hook into document lifecycle events.\n     * @param state Optional document state on which the cache should evict.\n     * If not provided, the cache will evict on `DocumentBuilder#onUpdate`.\n     * *Deleted* documents are considered in both cases.\n     */\n    constructor(sharedServices, state) {\n        super();\n        if (state) {\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onBuildPhase(state, () => {\n                this.clear();\n            }));\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onUpdate((_changed, deleted) => {\n                if (deleted.length > 0) { // react only on deleted documents\n                    this.clear();\n                }\n            }));\n        }\n        else {\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onUpdate(() => {\n                this.clear();\n            }));\n        }\n    }\n}\n//# sourceMappingURL=caching.js.map","/******************************************************************************\n * Copyright 2021-2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { MapScope, StreamScope } from './scope.js';\nimport { getDocument } from '../utils/ast-utils.js';\nimport { stream } from '../utils/stream.js';\nimport { WorkspaceCache } from '../utils/caching.js';\nexport class DefaultScopeProvider {\n    constructor(services) {\n        this.reflection = services.shared.AstReflection;\n        this.nameProvider = services.references.NameProvider;\n        this.descriptions = services.workspace.AstNodeDescriptionProvider;\n        this.indexManager = services.shared.workspace.IndexManager;\n        this.globalScopeCache = new WorkspaceCache(services.shared);\n    }\n    getScope(context) {\n        const scopes = [];\n        const referenceType = this.reflection.getReferenceType(context);\n        const precomputed = getDocument(context.container).precomputedScopes;\n        if (precomputed) {\n            let currentNode = context.container;\n            do {\n                const allDescriptions = precomputed.get(currentNode);\n                if (allDescriptions.length > 0) {\n                    scopes.push(stream(allDescriptions).filter(desc => this.reflection.isSubtype(desc.type, referenceType)));\n                }\n                currentNode = currentNode.$container;\n            } while (currentNode);\n        }\n        let result = this.getGlobalScope(referenceType, context);\n        for (let i = scopes.length - 1; i >= 0; i--) {\n            result = this.createScope(scopes[i], result);\n        }\n        return result;\n    }\n    /**\n     * Create a scope for the given collection of AST node descriptions.\n     */\n    createScope(elements, outerScope, options) {\n        return new StreamScope(stream(elements), outerScope, options);\n    }\n    /**\n     * Create a scope for the given collection of AST nodes, which need to be transformed into respective\n     * descriptions first. This is done using the `NameProvider` and `AstNodeDescriptionProvider` services.\n     */\n    createScopeForNodes(elements, outerScope, options) {\n        const s = stream(elements).map(e => {\n            const name = this.nameProvider.getName(e);\n            if (name) {\n                return this.descriptions.createDescription(e, name);\n            }\n            return undefined;\n        }).nonNullable();\n        return new StreamScope(s, outerScope, options);\n    }\n    /**\n     * Create a global scope filtered for the given reference type.\n     */\n    getGlobalScope(referenceType, _context) {\n        return this.globalScopeCache.get(referenceType, () => new MapScope(this.indexManager.allElements(referenceType)));\n    }\n}\n//# sourceMappingURL=scope-provider.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { URI } from 'vscode-uri';\nimport { isAstNode, isReference } from '../syntax-tree.js';\nimport { getDocument } from '../utils/ast-utils.js';\nimport { findNodesForProperty } from '../utils/grammar-utils.js';\nexport function isAstNodeWithComment(node) {\n    return typeof node.$comment === 'string';\n}\nfunction isIntermediateReference(obj) {\n    return typeof obj === 'object' && !!obj && ('$ref' in obj || '$error' in obj);\n}\nexport class DefaultJsonSerializer {\n    constructor(services) {\n        /** The set of AstNode properties to be ignored by the serializer. */\n        this.ignoreProperties = new Set(['$container', '$containerProperty', '$containerIndex', '$document', '$cstNode']);\n        this.langiumDocuments = services.shared.workspace.LangiumDocuments;\n        this.astNodeLocator = services.workspace.AstNodeLocator;\n        this.nameProvider = services.references.NameProvider;\n        this.commentProvider = services.documentation.CommentProvider;\n    }\n    serialize(node, options) {\n        const serializeOptions = options !== null && options !== void 0 ? options : {};\n        const specificReplacer = options === null || options === void 0 ? void 0 : options.replacer;\n        const defaultReplacer = (key, value) => this.replacer(key, value, serializeOptions);\n        const replacer = specificReplacer ? (key, value) => specificReplacer(key, value, defaultReplacer) : defaultReplacer;\n        try {\n            this.currentDocument = getDocument(node);\n            return JSON.stringify(node, replacer, options === null || options === void 0 ? void 0 : options.space);\n        }\n        finally {\n            this.currentDocument = undefined;\n        }\n    }\n    deserialize(content, options) {\n        const deserializeOptions = options !== null && options !== void 0 ? options : {};\n        const root = JSON.parse(content);\n        this.linkNode(root, root, deserializeOptions);\n        return root;\n    }\n    replacer(key, value, { refText, sourceText, textRegions, comments, uriConverter }) {\n        var _a, _b, _c, _d;\n        if (this.ignoreProperties.has(key)) {\n            return undefined;\n        }\n        else if (isReference(value)) {\n            const refValue = value.ref;\n            const $refText = refText ? value.$refText : undefined;\n            if (refValue) {\n                const targetDocument = getDocument(refValue);\n                let targetUri = '';\n                if (this.currentDocument && this.currentDocument !== targetDocument) {\n                    if (uriConverter) {\n                        targetUri = uriConverter(targetDocument.uri, value);\n                    }\n                    else {\n                        targetUri = targetDocument.uri.toString();\n                    }\n                }\n                const targetPath = this.astNodeLocator.getAstNodePath(refValue);\n                return {\n                    $ref: `${targetUri}#${targetPath}`,\n                    $refText\n                };\n            }\n            else {\n                return {\n                    $error: (_b = (_a = value.error) === null || _a === void 0 ? void 0 : _a.message) !== null && _b !== void 0 ? _b : 'Could not resolve reference',\n                    $refText\n                };\n            }\n        }\n        else if (isAstNode(value)) {\n            let astNode = undefined;\n            if (textRegions) {\n                astNode = this.addAstNodeRegionWithAssignmentsTo(Object.assign({}, value));\n                if ((!key || value.$document) && (astNode === null || astNode === void 0 ? void 0 : astNode.$textRegion)) {\n                    // The document URI is added to the root node of the resulting JSON tree\n                    astNode.$textRegion.documentURI = (_c = this.currentDocument) === null || _c === void 0 ? void 0 : _c.uri.toString();\n                }\n            }\n            if (sourceText && !key) {\n                astNode !== null && astNode !== void 0 ? astNode : (astNode = Object.assign({}, value));\n                astNode.$sourceText = (_d = value.$cstNode) === null || _d === void 0 ? void 0 : _d.text;\n            }\n            if (comments) {\n                astNode !== null && astNode !== void 0 ? astNode : (astNode = Object.assign({}, value));\n                const comment = this.commentProvider.getComment(value);\n                if (comment) {\n                    astNode.$comment = comment.replace(/\\r/g, '');\n                }\n            }\n            return astNode !== null && astNode !== void 0 ? astNode : value;\n        }\n        else {\n            return value;\n        }\n    }\n    addAstNodeRegionWithAssignmentsTo(node) {\n        const createDocumentSegment = cstNode => ({\n            offset: cstNode.offset,\n            end: cstNode.end,\n            length: cstNode.length,\n            range: cstNode.range,\n        });\n        if (node.$cstNode) {\n            const textRegion = node.$textRegion = createDocumentSegment(node.$cstNode);\n            const assignments = textRegion.assignments = {};\n            Object.keys(node).filter(key => !key.startsWith('$')).forEach(key => {\n                const propertyAssignments = findNodesForProperty(node.$cstNode, key).map(createDocumentSegment);\n                if (propertyAssignments.length !== 0) {\n                    assignments[key] = propertyAssignments;\n                }\n            });\n            return node;\n        }\n        return undefined;\n    }\n    linkNode(node, root, options, container, containerProperty, containerIndex) {\n        for (const [propertyName, item] of Object.entries(node)) {\n            if (Array.isArray(item)) {\n                for (let index = 0; index < item.length; index++) {\n                    const element = item[index];\n                    if (isIntermediateReference(element)) {\n                        item[index] = this.reviveReference(node, propertyName, root, element, options);\n                    }\n                    else if (isAstNode(element)) {\n                        this.linkNode(element, root, options, node, propertyName, index);\n                    }\n                }\n            }\n            else if (isIntermediateReference(item)) {\n                node[propertyName] = this.reviveReference(node, propertyName, root, item, options);\n            }\n            else if (isAstNode(item)) {\n                this.linkNode(item, root, options, node, propertyName);\n            }\n        }\n        const mutable = node;\n        mutable.$container = container;\n        mutable.$containerProperty = containerProperty;\n        mutable.$containerIndex = containerIndex;\n    }\n    reviveReference(container, property, root, reference, options) {\n        let refText = reference.$refText;\n        let error = reference.$error;\n        if (reference.$ref) {\n            const ref = this.getRefNode(root, reference.$ref, options.uriConverter);\n            if (isAstNode(ref)) {\n                if (!refText) {\n                    refText = this.nameProvider.getName(ref);\n                }\n                return {\n                    $refText: refText !== null && refText !== void 0 ? refText : '',\n                    ref\n                };\n            }\n            else {\n                error = ref;\n            }\n        }\n        if (error) {\n            const ref = {\n                $refText: refText !== null && refText !== void 0 ? refText : ''\n            };\n            ref.error = {\n                container,\n                property,\n                message: error,\n                reference: ref\n            };\n            return ref;\n        }\n        else {\n            return undefined;\n        }\n    }\n    getRefNode(root, uri, uriConverter) {\n        try {\n            const fragmentIndex = uri.indexOf('#');\n            if (fragmentIndex === 0) {\n                const node = this.astNodeLocator.getAstNode(root, uri.substring(1));\n                if (!node) {\n                    return 'Could not resolve path: ' + uri;\n                }\n                return node;\n            }\n            if (fragmentIndex < 0) {\n                const documentUri = uriConverter ? uriConverter(uri) : URI.parse(uri);\n                const document = this.langiumDocuments.getDocument(documentUri);\n                if (!document) {\n                    return 'Could not find document for URI: ' + uri;\n                }\n                return document.parseResult.value;\n            }\n            const documentUri = uriConverter ? uriConverter(uri.substring(0, fragmentIndex)) : URI.parse(uri.substring(0, fragmentIndex));\n            const document = this.langiumDocuments.getDocument(documentUri);\n            if (!document) {\n                return 'Could not find document for URI: ' + uri;\n            }\n            if (fragmentIndex === uri.length - 1) {\n                return document.parseResult.value;\n            }\n            const node = this.astNodeLocator.getAstNode(document.parseResult.value, uri.substring(fragmentIndex + 1));\n            if (!node) {\n                return 'Could not resolve URI: ' + uri;\n            }\n            return node;\n        }\n        catch (err) {\n            return String(err);\n        }\n    }\n}\n//# sourceMappingURL=json-serializer.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { UriUtils } from './utils/uri-utils.js';\n/**\n * Generic registry for Langium services, but capable of being used with extending service sets as well (such as the lsp-complete LangiumCoreServices set)\n */\nexport class DefaultServiceRegistry {\n    /**\n     * @deprecated Use the new `fileExtensionMap` (or `languageIdMap`) property instead.\n     */\n    get map() {\n        return this.fileExtensionMap;\n    }\n    constructor(services) {\n        this.languageIdMap = new Map();\n        this.fileExtensionMap = new Map();\n        this.textDocuments = services === null || services === void 0 ? void 0 : services.workspace.TextDocuments;\n    }\n    register(language) {\n        const data = language.LanguageMetaData;\n        for (const ext of data.fileExtensions) {\n            if (this.fileExtensionMap.has(ext)) {\n                console.warn(`The file extension ${ext} is used by multiple languages. It is now assigned to '${data.languageId}'.`);\n            }\n            this.fileExtensionMap.set(ext, language);\n        }\n        this.languageIdMap.set(data.languageId, language);\n        if (this.languageIdMap.size === 1) {\n            this.singleton = language;\n        }\n        else {\n            this.singleton = undefined;\n        }\n    }\n    getServices(uri) {\n        var _a, _b;\n        if (this.singleton !== undefined) {\n            return this.singleton;\n        }\n        if (this.languageIdMap.size === 0) {\n            throw new Error('The service registry is empty. Use `register` to register the services of a language.');\n        }\n        const languageId = (_b = (_a = this.textDocuments) === null || _a === void 0 ? void 0 : _a.get(uri)) === null || _b === void 0 ? void 0 : _b.languageId;\n        if (languageId !== undefined) {\n            const services = this.languageIdMap.get(languageId);\n            if (services) {\n                return services;\n            }\n        }\n        const ext = UriUtils.extname(uri);\n        const services = this.fileExtensionMap.get(ext);\n        if (!services) {\n            if (languageId) {\n                throw new Error(`The service registry contains no services for the extension '${ext}' for language '${languageId}'.`);\n            }\n            else {\n                throw new Error(`The service registry contains no services for the extension '${ext}'.`);\n            }\n        }\n        return services;\n    }\n    hasServices(uri) {\n        try {\n            this.getServices(uri);\n            return true;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n    get all() {\n        return Array.from(this.languageIdMap.values());\n    }\n}\n//# sourceMappingURL=service-registry.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { assertUnreachable } from '../index.js';\nimport { MultiMap } from '../utils/collections.js';\nimport { isOperationCancelled } from '../utils/promise-utils.js';\nimport { stream } from '../utils/stream.js';\n/**\n * Create DiagnosticData for a given diagnostic code. The result can be put into the `data` field of a DiagnosticInfo.\n */\nexport function diagnosticData(code) {\n    return { code };\n}\nexport var ValidationCategory;\n(function (ValidationCategory) {\n    ValidationCategory.all = ['fast', 'slow', 'built-in'];\n})(ValidationCategory || (ValidationCategory = {}));\n/**\n * Manages a set of `ValidationCheck`s to be applied when documents are validated.\n */\nexport class ValidationRegistry {\n    constructor(services) {\n        this.entries = new MultiMap();\n        this.entriesBefore = [];\n        this.entriesAfter = [];\n        this.reflection = services.shared.AstReflection;\n    }\n    /**\n     * Register a set of validation checks. Each value in the record can be either a single validation check (i.e. a function)\n     * or an array of validation checks.\n     *\n     * @param checksRecord Set of validation checks to register.\n     * @param category Optional category for the validation checks (defaults to `'fast'`).\n     * @param thisObj Optional object to be used as `this` when calling the validation check functions.\n     */\n    register(checksRecord, thisObj = this, category = 'fast') {\n        if (category === 'built-in') {\n            throw new Error(\"The 'built-in' category is reserved for lexer, parser, and linker errors.\");\n        }\n        for (const [type, ch] of Object.entries(checksRecord)) {\n            const callbacks = ch;\n            if (Array.isArray(callbacks)) {\n                for (const check of callbacks) {\n                    const entry = {\n                        check: this.wrapValidationException(check, thisObj),\n                        category\n                    };\n                    this.addEntry(type, entry);\n                }\n            }\n            else if (typeof callbacks === 'function') {\n                const entry = {\n                    check: this.wrapValidationException(callbacks, thisObj),\n                    category\n                };\n                this.addEntry(type, entry);\n            }\n            else {\n                assertUnreachable(callbacks);\n            }\n        }\n    }\n    wrapValidationException(check, thisObj) {\n        return async (node, accept, cancelToken) => {\n            await this.handleException(() => check.call(thisObj, node, accept, cancelToken), 'An error occurred during validation', accept, node);\n        };\n    }\n    async handleException(functionality, messageContext, accept, node) {\n        try {\n            await functionality();\n        }\n        catch (err) {\n            if (isOperationCancelled(err)) {\n                throw err;\n            }\n            console.error(`${messageContext}:`, err);\n            if (err instanceof Error && err.stack) {\n                console.error(err.stack);\n            }\n            const messageDetails = err instanceof Error ? err.message : String(err);\n            accept('error', `${messageContext}: ${messageDetails}`, { node });\n        }\n    }\n    addEntry(type, entry) {\n        if (type === 'AstNode') {\n            this.entries.add('AstNode', entry);\n            return;\n        }\n        for (const subtype of this.reflection.getAllSubTypes(type)) {\n            this.entries.add(subtype, entry);\n        }\n    }\n    getChecks(type, categories) {\n        let checks = stream(this.entries.get(type))\n            .concat(this.entries.get('AstNode'));\n        if (categories) {\n            checks = checks.filter(entry => categories.includes(entry.category));\n        }\n        return checks.map(entry => entry.check);\n    }\n    /**\n     * Register logic which will be executed once before validating all the nodes of an AST/Langium document.\n     * This helps to prepare or initialize some information which are required or reusable for the following checks on the AstNodes.\n     *\n     * As an example, for validating unique fully-qualified names of nodes in the AST,\n     * here the map for mapping names to nodes could be established.\n     * During the usual checks on the nodes, they are put into this map with their name.\n     *\n     * Note that this approach makes validations stateful, which is relevant e.g. when cancelling the validation.\n     * Therefore it is recommended to clear stored information\n     * _before_ validating an AST to validate each AST unaffected from other ASTs\n     * AND _after_ validating the AST to free memory by information which are no longer used.\n     *\n     * @param checkBefore a set-up function which will be called once before actually validating an AST\n     * @param thisObj Optional object to be used as `this` when calling the validation check functions.\n     */\n    registerBeforeDocument(checkBefore, thisObj = this) {\n        this.entriesBefore.push(this.wrapPreparationException(checkBefore, 'An error occurred during set-up of the validation', thisObj));\n    }\n    /**\n     * Register logic which will be executed once after validating all the nodes of an AST/Langium document.\n     * This helps to finally evaluate information which are collected during the checks on the AstNodes.\n     *\n     * As an example, for validating unique fully-qualified names of nodes in the AST,\n     * here the map with all the collected nodes and their names is checked\n     * and validation hints are created for all nodes with the same name.\n     *\n     * Note that this approach makes validations stateful, which is relevant e.g. when cancelling the validation.\n     * Therefore it is recommended to clear stored information\n     * _before_ validating an AST to validate each AST unaffected from other ASTs\n     * AND _after_ validating the AST to free memory by information which are no longer used.\n     *\n     * @param checkBefore a set-up function which will be called once before actually validating an AST\n     * @param thisObj Optional object to be used as `this` when calling the validation check functions.\n     */\n    registerAfterDocument(checkAfter, thisObj = this) {\n        this.entriesAfter.push(this.wrapPreparationException(checkAfter, 'An error occurred during tear-down of the validation', thisObj));\n    }\n    wrapPreparationException(check, messageContext, thisObj) {\n        return async (rootNode, accept, categories, cancelToken) => {\n            await this.handleException(() => check.call(thisObj, rootNode, accept, categories, cancelToken), messageContext, accept, rootNode);\n        };\n    }\n    get checksBefore() {\n        return this.entriesBefore;\n    }\n    get checksAfter() {\n        return this.entriesAfter;\n    }\n}\n//# sourceMappingURL=validation-registry.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { findNodeForKeyword, findNodeForProperty } from '../utils/grammar-utils.js';\nimport { streamAst } from '../utils/ast-utils.js';\nimport { tokenToRange } from '../utils/cst-utils.js';\nimport { interruptAndCheck, isOperationCancelled } from '../utils/promise-utils.js';\nimport { diagnosticData } from './validation-registry.js';\nexport class DefaultDocumentValidator {\n    constructor(services) {\n        this.validationRegistry = services.validation.ValidationRegistry;\n        this.metadata = services.LanguageMetaData;\n    }\n    async validateDocument(document, options = {}, cancelToken = CancellationToken.None) {\n        const parseResult = document.parseResult;\n        const diagnostics = [];\n        await interruptAndCheck(cancelToken);\n        if (!options.categories || options.categories.includes('built-in')) {\n            this.processLexingErrors(parseResult, diagnostics, options);\n            if (options.stopAfterLexingErrors && diagnostics.some(d => { var _a; return ((_a = d.data) === null || _a === void 0 ? void 0 : _a.code) === DocumentValidator.LexingError; })) {\n                return diagnostics;\n            }\n            this.processParsingErrors(parseResult, diagnostics, options);\n            if (options.stopAfterParsingErrors && diagnostics.some(d => { var _a; return ((_a = d.data) === null || _a === void 0 ? void 0 : _a.code) === DocumentValidator.ParsingError; })) {\n                return diagnostics;\n            }\n            this.processLinkingErrors(document, diagnostics, options);\n            if (options.stopAfterLinkingErrors && diagnostics.some(d => { var _a; return ((_a = d.data) === null || _a === void 0 ? void 0 : _a.code) === DocumentValidator.LinkingError; })) {\n                return diagnostics;\n            }\n        }\n        // Process custom validations\n        try {\n            diagnostics.push(...await this.validateAst(parseResult.value, options, cancelToken));\n        }\n        catch (err) {\n            if (isOperationCancelled(err)) {\n                throw err;\n            }\n            console.error('An error occurred during validation:', err);\n        }\n        await interruptAndCheck(cancelToken);\n        return diagnostics;\n    }\n    processLexingErrors(parseResult, diagnostics, _options) {\n        var _a, _b, _c;\n        const lexerDiagnostics = [...parseResult.lexerErrors, ...(_b = (_a = parseResult.lexerReport) === null || _a === void 0 ? void 0 : _a.diagnostics) !== null && _b !== void 0 ? _b : []];\n        for (const lexerDiagnostic of lexerDiagnostics) {\n            const severity = (_c = lexerDiagnostic.severity) !== null && _c !== void 0 ? _c : 'error';\n            const diagnostic = {\n                severity: toDiagnosticSeverity(severity),\n                range: {\n                    start: {\n                        line: lexerDiagnostic.line - 1,\n                        character: lexerDiagnostic.column - 1\n                    },\n                    end: {\n                        line: lexerDiagnostic.line - 1,\n                        character: lexerDiagnostic.column + lexerDiagnostic.length - 1\n                    }\n                },\n                message: lexerDiagnostic.message,\n                data: toDiagnosticData(severity),\n                source: this.getSource()\n            };\n            diagnostics.push(diagnostic);\n        }\n    }\n    processParsingErrors(parseResult, diagnostics, _options) {\n        for (const parserError of parseResult.parserErrors) {\n            let range = undefined;\n            // We can run into the chevrotain error recovery here\n            // The token contained in the parser error might be automatically inserted\n            // In this case every position value will be `NaN`\n            if (isNaN(parserError.token.startOffset)) {\n                // Some special parser error types contain a `previousToken`\n                // We can simply append our diagnostic to that token\n                if ('previousToken' in parserError) {\n                    const token = parserError.previousToken;\n                    if (!isNaN(token.startOffset)) {\n                        const position = { line: token.endLine - 1, character: token.endColumn };\n                        range = { start: position, end: position };\n                    }\n                    else {\n                        // No valid prev token. Might be empty document or containing only hidden tokens.\n                        // Point to document start\n                        const position = { line: 0, character: 0 };\n                        range = { start: position, end: position };\n                    }\n                }\n            }\n            else {\n                range = tokenToRange(parserError.token);\n            }\n            if (range) {\n                const diagnostic = {\n                    severity: toDiagnosticSeverity('error'),\n                    range,\n                    message: parserError.message,\n                    data: diagnosticData(DocumentValidator.ParsingError),\n                    source: this.getSource()\n                };\n                diagnostics.push(diagnostic);\n            }\n        }\n    }\n    processLinkingErrors(document, diagnostics, _options) {\n        for (const reference of document.references) {\n            const linkingError = reference.error;\n            if (linkingError) {\n                const info = {\n                    node: linkingError.container,\n                    property: linkingError.property,\n                    index: linkingError.index,\n                    data: {\n                        code: DocumentValidator.LinkingError,\n                        containerType: linkingError.container.$type,\n                        property: linkingError.property,\n                        refText: linkingError.reference.$refText\n                    }\n                };\n                diagnostics.push(this.toDiagnostic('error', linkingError.message, info));\n            }\n        }\n    }\n    async validateAst(rootNode, options, cancelToken = CancellationToken.None) {\n        const validationItems = [];\n        const acceptor = (severity, message, info) => {\n            validationItems.push(this.toDiagnostic(severity, message, info));\n        };\n        await this.validateAstBefore(rootNode, options, acceptor, cancelToken);\n        await this.validateAstNodes(rootNode, options, acceptor, cancelToken);\n        await this.validateAstAfter(rootNode, options, acceptor, cancelToken);\n        return validationItems;\n    }\n    async validateAstBefore(rootNode, options, acceptor, cancelToken = CancellationToken.None) {\n        var _a;\n        const checksBefore = this.validationRegistry.checksBefore;\n        for (const checkBefore of checksBefore) {\n            await interruptAndCheck(cancelToken);\n            await checkBefore(rootNode, acceptor, (_a = options.categories) !== null && _a !== void 0 ? _a : [], cancelToken);\n        }\n    }\n    async validateAstNodes(rootNode, options, acceptor, cancelToken = CancellationToken.None) {\n        await Promise.all(streamAst(rootNode).map(async (node) => {\n            await interruptAndCheck(cancelToken);\n            const checks = this.validationRegistry.getChecks(node.$type, options.categories);\n            for (const check of checks) {\n                await check(node, acceptor, cancelToken);\n            }\n        }));\n    }\n    async validateAstAfter(rootNode, options, acceptor, cancelToken = CancellationToken.None) {\n        var _a;\n        const checksAfter = this.validationRegistry.checksAfter;\n        for (const checkAfter of checksAfter) {\n            await interruptAndCheck(cancelToken);\n            await checkAfter(rootNode, acceptor, (_a = options.categories) !== null && _a !== void 0 ? _a : [], cancelToken);\n        }\n    }\n    toDiagnostic(severity, message, info) {\n        return {\n            message,\n            range: getDiagnosticRange(info),\n            severity: toDiagnosticSeverity(severity),\n            code: info.code,\n            codeDescription: info.codeDescription,\n            tags: info.tags,\n            relatedInformation: info.relatedInformation,\n            data: info.data,\n            source: this.getSource()\n        };\n    }\n    getSource() {\n        return this.metadata.languageId;\n    }\n}\nexport function getDiagnosticRange(info) {\n    if (info.range) {\n        return info.range;\n    }\n    let cstNode;\n    if (typeof info.property === 'string') {\n        cstNode = findNodeForProperty(info.node.$cstNode, info.property, info.index);\n    }\n    else if (typeof info.keyword === 'string') {\n        cstNode = findNodeForKeyword(info.node.$cstNode, info.keyword, info.index);\n    }\n    cstNode !== null && cstNode !== void 0 ? cstNode : (cstNode = info.node.$cstNode);\n    if (!cstNode) {\n        return {\n            start: { line: 0, character: 0 },\n            end: { line: 0, character: 0 }\n        };\n    }\n    return cstNode.range;\n}\n/**\n * Transforms the diagnostic severity from the {@link LexingDiagnosticSeverity} format to LSP's `DiagnosticSeverity` format.\n *\n * @param severity The lexing diagnostic severity\n * @returns Diagnostic severity according to `vscode-languageserver-types/lib/esm/main.js#DiagnosticSeverity`\n */\nexport function toDiagnosticSeverity(severity) {\n    switch (severity) {\n        case 'error':\n            return 1;\n        case 'warning':\n            return 2;\n        case 'info':\n            return 3;\n        case 'hint':\n            return 4;\n        default:\n            throw new Error('Invalid diagnostic severity: ' + severity);\n    }\n}\nexport function toDiagnosticData(severity) {\n    switch (severity) {\n        case 'error':\n            return diagnosticData(DocumentValidator.LexingError);\n        case 'warning':\n            return diagnosticData(DocumentValidator.LexingWarning);\n        case 'info':\n            return diagnosticData(DocumentValidator.LexingInfo);\n        case 'hint':\n            return diagnosticData(DocumentValidator.LexingHint);\n        default:\n            throw new Error('Invalid diagnostic severity: ' + severity);\n    }\n}\nexport var DocumentValidator;\n(function (DocumentValidator) {\n    DocumentValidator.LexingError = 'lexing-error';\n    DocumentValidator.LexingWarning = 'lexing-warning';\n    DocumentValidator.LexingInfo = 'lexing-info';\n    DocumentValidator.LexingHint = 'lexing-hint';\n    DocumentValidator.ParsingError = 'parsing-error';\n    DocumentValidator.LinkingError = 'linking-error';\n})(DocumentValidator || (DocumentValidator = {}));\n//# sourceMappingURL=document-validator.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { isLinkingError } from '../syntax-tree.js';\nimport { getDocument, streamAst, streamReferences } from '../utils/ast-utils.js';\nimport { toDocumentSegment } from '../utils/cst-utils.js';\nimport { interruptAndCheck } from '../utils/promise-utils.js';\nimport { UriUtils } from '../utils/uri-utils.js';\nexport class DefaultAstNodeDescriptionProvider {\n    constructor(services) {\n        this.astNodeLocator = services.workspace.AstNodeLocator;\n        this.nameProvider = services.references.NameProvider;\n    }\n    createDescription(node, name, document) {\n        const doc = document !== null && document !== void 0 ? document : getDocument(node);\n        name !== null && name !== void 0 ? name : (name = this.nameProvider.getName(node));\n        const path = this.astNodeLocator.getAstNodePath(node);\n        if (!name) {\n            throw new Error(`Node at path ${path} has no name.`);\n        }\n        let nameNodeSegment;\n        const nameSegmentGetter = () => { var _a; return nameNodeSegment !== null && nameNodeSegment !== void 0 ? nameNodeSegment : (nameNodeSegment = toDocumentSegment((_a = this.nameProvider.getNameNode(node)) !== null && _a !== void 0 ? _a : node.$cstNode)); };\n        return {\n            node,\n            name,\n            get nameSegment() {\n                return nameSegmentGetter();\n            },\n            selectionSegment: toDocumentSegment(node.$cstNode),\n            type: node.$type,\n            documentUri: doc.uri,\n            path\n        };\n    }\n}\nexport class DefaultReferenceDescriptionProvider {\n    constructor(services) {\n        this.nodeLocator = services.workspace.AstNodeLocator;\n    }\n    async createDescriptions(document, cancelToken = CancellationToken.None) {\n        const descr = [];\n        const rootNode = document.parseResult.value;\n        for (const astNode of streamAst(rootNode)) {\n            await interruptAndCheck(cancelToken);\n            streamReferences(astNode).filter(refInfo => !isLinkingError(refInfo)).forEach(refInfo => {\n                // TODO: Consider logging a warning or throw an exception when DocumentState is < than Linked\n                const description = this.createDescription(refInfo);\n                if (description) {\n                    descr.push(description);\n                }\n            });\n        }\n        return descr;\n    }\n    createDescription(refInfo) {\n        const targetNodeDescr = refInfo.reference.$nodeDescription;\n        const refCstNode = refInfo.reference.$refNode;\n        if (!targetNodeDescr || !refCstNode) {\n            return undefined;\n        }\n        const docUri = getDocument(refInfo.container).uri;\n        return {\n            sourceUri: docUri,\n            sourcePath: this.nodeLocator.getAstNodePath(refInfo.container),\n            targetUri: targetNodeDescr.documentUri,\n            targetPath: targetNodeDescr.path,\n            segment: toDocumentSegment(refCstNode),\n            local: UriUtils.equals(targetNodeDescr.documentUri, docUri)\n        };\n    }\n}\n//# sourceMappingURL=ast-descriptions.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class DefaultAstNodeLocator {\n    constructor() {\n        this.segmentSeparator = '/';\n        this.indexSeparator = '@';\n    }\n    getAstNodePath(node) {\n        if (node.$container) {\n            const containerPath = this.getAstNodePath(node.$container);\n            const newSegment = this.getPathSegment(node);\n            const nodePath = containerPath + this.segmentSeparator + newSegment;\n            return nodePath;\n        }\n        return '';\n    }\n    getPathSegment({ $containerProperty, $containerIndex }) {\n        if (!$containerProperty) {\n            throw new Error(\"Missing '$containerProperty' in AST node.\");\n        }\n        if ($containerIndex !== undefined) {\n            return $containerProperty + this.indexSeparator + $containerIndex;\n        }\n        return $containerProperty;\n    }\n    getAstNode(node, path) {\n        const segments = path.split(this.segmentSeparator);\n        return segments.reduce((previousValue, currentValue) => {\n            if (!previousValue || currentValue.length === 0) {\n                return previousValue;\n            }\n            const propertyIndex = currentValue.indexOf(this.indexSeparator);\n            if (propertyIndex > 0) {\n                const property = currentValue.substring(0, propertyIndex);\n                const arrayIndex = parseInt(currentValue.substring(propertyIndex + 1));\n                const array = previousValue[property];\n                return array === null || array === void 0 ? void 0 : array[arrayIndex];\n            }\n            return previousValue[currentValue];\n        }, node);\n    }\n}\n//# sourceMappingURL=ast-node-locator.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport var Disposable;\n(function (Disposable) {\n    function create(callback) {\n        return {\n            dispose: async () => await callback()\n        };\n    }\n    Disposable.create = create;\n})(Disposable || (Disposable = {}));\n//# sourceMappingURL=disposable.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Emitter } from '../utils/event.js';\nimport { Deferred } from '../utils/promise-utils.js';\n/**\n * Base configuration provider for building up other configuration providers\n */\nexport class DefaultConfigurationProvider {\n    constructor(services) {\n        this._ready = new Deferred();\n        this.settings = {};\n        this.workspaceConfig = false;\n        this.onConfigurationSectionUpdateEmitter = new Emitter();\n        this.serviceRegistry = services.ServiceRegistry;\n    }\n    get ready() {\n        return this._ready.promise;\n    }\n    initialize(params) {\n        var _a, _b;\n        this.workspaceConfig = (_b = (_a = params.capabilities.workspace) === null || _a === void 0 ? void 0 : _a.configuration) !== null && _b !== void 0 ? _b : false;\n    }\n    async initialized(params) {\n        if (this.workspaceConfig) {\n            if (params.register) {\n                // params.register(...) is a function to be provided by the calling language server for the sake of\n                //  decoupling this implementation from the concrete LSP implementations, specifically the LSP Connection\n                const languages = this.serviceRegistry.all;\n                params.register({\n                    // Listen to configuration changes for all languages\n                    section: languages.map(lang => this.toSectionName(lang.LanguageMetaData.languageId))\n                });\n            }\n            if (params.fetchConfiguration) {\n                // params.fetchConfiguration(...) is a function to be provided by the calling language server for the sake of\n                //  decoupling this implementation from the concrete LSP implementations, specifically the LSP Connection\n                const configToUpdate = this.serviceRegistry.all.map(lang => ({\n                    // Fetch the configuration changes for all languages\n                    section: this.toSectionName(lang.LanguageMetaData.languageId)\n                }));\n                // get workspace configurations (default scope URI)\n                const configs = await params.fetchConfiguration(configToUpdate);\n                configToUpdate.forEach((conf, idx) => {\n                    this.updateSectionConfiguration(conf.section, configs[idx]);\n                });\n            }\n        }\n        this._ready.resolve();\n    }\n    /**\n     *  Updates the cached configurations using the `change` notification parameters.\n     *\n     * @param change The parameters of a change configuration notification.\n     * `settings` property of the change object could be expressed as `Record<string, Record<string, any>>`\n     */\n    updateConfiguration(change) {\n        if (!change.settings) {\n            return;\n        }\n        Object.keys(change.settings).forEach(section => {\n            const configuration = change.settings[section];\n            this.updateSectionConfiguration(section, configuration);\n            this.onConfigurationSectionUpdateEmitter.fire({ section, configuration });\n        });\n    }\n    updateSectionConfiguration(section, configuration) {\n        this.settings[section] = configuration;\n    }\n    /**\n    * Returns a configuration value stored for the given language.\n    *\n    * @param language The language id\n    * @param configuration Configuration name\n    */\n    async getConfiguration(language, configuration) {\n        await this.ready;\n        const sectionName = this.toSectionName(language);\n        if (this.settings[sectionName]) {\n            return this.settings[sectionName][configuration];\n        }\n    }\n    toSectionName(languageId) {\n        return `${languageId}`;\n    }\n    get onConfigurationSectionUpdate() {\n        return this.onConfigurationSectionUpdateEmitter.event;\n    }\n}\n//# sourceMappingURL=configuration.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { Disposable } from '../utils/disposable.js';\nimport { MultiMap } from '../utils/collections.js';\nimport { OperationCancelled, interruptAndCheck, isOperationCancelled } from '../utils/promise-utils.js';\nimport { stream } from '../utils/stream.js';\nimport { ValidationCategory } from '../validation/validation-registry.js';\nimport { DocumentState } from './documents.js';\nexport class DefaultDocumentBuilder {\n    constructor(services) {\n        this.updateBuildOptions = {\n            // Default: run only the built-in validation checks and those in the _fast_ category (includes those without category)\n            validation: {\n                categories: ['built-in', 'fast']\n            }\n        };\n        this.updateListeners = [];\n        this.buildPhaseListeners = new MultiMap();\n        this.documentPhaseListeners = new MultiMap();\n        this.buildState = new Map();\n        this.documentBuildWaiters = new Map();\n        this.currentState = DocumentState.Changed;\n        this.langiumDocuments = services.workspace.LangiumDocuments;\n        this.langiumDocumentFactory = services.workspace.LangiumDocumentFactory;\n        this.textDocuments = services.workspace.TextDocuments;\n        this.indexManager = services.workspace.IndexManager;\n        this.serviceRegistry = services.ServiceRegistry;\n    }\n    async build(documents, options = {}, cancelToken = CancellationToken.None) {\n        var _a, _b;\n        for (const document of documents) {\n            const key = document.uri.toString();\n            if (document.state === DocumentState.Validated) {\n                if (typeof options.validation === 'boolean' && options.validation) {\n                    // Force re-running all validation checks\n                    document.state = DocumentState.IndexedReferences;\n                    document.diagnostics = undefined;\n                    this.buildState.delete(key);\n                }\n                else if (typeof options.validation === 'object') {\n                    const buildState = this.buildState.get(key);\n                    const previousCategories = (_a = buildState === null || buildState === void 0 ? void 0 : buildState.result) === null || _a === void 0 ? void 0 : _a.validationChecks;\n                    if (previousCategories) {\n                        // Validation with explicit options was requested for a document that has already been partly validated.\n                        // In this case, we need to merge the previous validation categories with the new ones.\n                        const newCategories = (_b = options.validation.categories) !== null && _b !== void 0 ? _b : ValidationCategory.all;\n                        const categories = newCategories.filter(c => !previousCategories.includes(c));\n                        if (categories.length > 0) {\n                            this.buildState.set(key, {\n                                completed: false,\n                                options: {\n                                    validation: Object.assign(Object.assign({}, options.validation), { categories })\n                                },\n                                result: buildState.result\n                            });\n                            document.state = DocumentState.IndexedReferences;\n                        }\n                    }\n                }\n            }\n            else {\n                // Default: forget any previous build options\n                this.buildState.delete(key);\n            }\n        }\n        this.currentState = DocumentState.Changed;\n        await this.emitUpdate(documents.map(e => e.uri), []);\n        await this.buildDocuments(documents, options, cancelToken);\n    }\n    async update(changed, deleted, cancelToken = CancellationToken.None) {\n        this.currentState = DocumentState.Changed;\n        // Remove all metadata of documents that are reported as deleted\n        for (const deletedUri of deleted) {\n            this.langiumDocuments.deleteDocument(deletedUri);\n            this.buildState.delete(deletedUri.toString());\n            this.indexManager.remove(deletedUri);\n        }\n        // Set the state of all changed documents to `Changed` so they are completely rebuilt\n        for (const changedUri of changed) {\n            const invalidated = this.langiumDocuments.invalidateDocument(changedUri);\n            if (!invalidated) {\n                // We create an unparsed, invalid document.\n                // This will be parsed as soon as we reach the first document builder phase.\n                // This allows to cancel the parsing process later in case we need it.\n                const newDocument = this.langiumDocumentFactory.fromModel({ $type: 'INVALID' }, changedUri);\n                newDocument.state = DocumentState.Changed;\n                this.langiumDocuments.addDocument(newDocument);\n            }\n            this.buildState.delete(changedUri.toString());\n        }\n        // Set the state of all documents that should be relinked to `ComputedScopes` (if not already lower)\n        const allChangedUris = stream(changed).concat(deleted).map(uri => uri.toString()).toSet();\n        this.langiumDocuments.all\n            .filter(doc => !allChangedUris.has(doc.uri.toString()) && this.shouldRelink(doc, allChangedUris))\n            .forEach(doc => {\n            const linker = this.serviceRegistry.getServices(doc.uri).references.Linker;\n            linker.unlink(doc);\n            doc.state = Math.min(doc.state, DocumentState.ComputedScopes);\n            doc.diagnostics = undefined;\n        });\n        // Notify listeners of the update\n        await this.emitUpdate(changed, deleted);\n        // Only allow interrupting the execution after all state changes are done\n        await interruptAndCheck(cancelToken);\n        // Collect and sort all documents that we should rebuild\n        const rebuildDocuments = this.sortDocuments(this.langiumDocuments.all\n            .filter(doc => {\n            var _a;\n            // This includes those that were reported as changed and those that we selected for relinking\n            return doc.state < DocumentState.Linked\n                // This includes those for which a previous build has been cancelled\n                || !((_a = this.buildState.get(doc.uri.toString())) === null || _a === void 0 ? void 0 : _a.completed);\n        })\n            .toArray());\n        await this.buildDocuments(rebuildDocuments, this.updateBuildOptions, cancelToken);\n    }\n    async emitUpdate(changed, deleted) {\n        await Promise.all(this.updateListeners.map(listener => listener(changed, deleted)));\n    }\n    /**\n     * Sort the given documents by priority. By default, documents with an open text document are prioritized.\n     * This is useful to ensure that visible documents show their diagnostics before all other documents.\n     *\n     * This improves the responsiveness in large workspaces as users usually don't care about diagnostics\n     * in files that are currently not opened in the editor.\n     */\n    sortDocuments(documents) {\n        let left = 0;\n        let right = documents.length - 1;\n        while (left < right) {\n            while (left < documents.length && this.hasTextDocument(documents[left])) {\n                left++;\n            }\n            while (right >= 0 && !this.hasTextDocument(documents[right])) {\n                right--;\n            }\n            if (left < right) {\n                [documents[left], documents[right]] = [documents[right], documents[left]];\n            }\n        }\n        return documents;\n    }\n    hasTextDocument(doc) {\n        var _a;\n        return Boolean((_a = this.textDocuments) === null || _a === void 0 ? void 0 : _a.get(doc.uri));\n    }\n    /**\n     * Check whether the given document should be relinked after changes were found in the given URIs.\n     */\n    shouldRelink(document, changedUris) {\n        // Relink documents with linking errors -- maybe those references can be resolved now\n        if (document.references.some(ref => ref.error !== undefined)) {\n            return true;\n        }\n        // Check whether the document is affected by any of the changed URIs\n        return this.indexManager.isAffected(document, changedUris);\n    }\n    onUpdate(callback) {\n        this.updateListeners.push(callback);\n        return Disposable.create(() => {\n            const index = this.updateListeners.indexOf(callback);\n            if (index >= 0) {\n                this.updateListeners.splice(index, 1);\n            }\n        });\n    }\n    /**\n     * Build the given documents by stepping through all build phases. If a document's state indicates\n     * that a certain build phase is already done, the phase is skipped for that document.\n     *\n     * @param documents The documents to build.\n     * @param options the {@link BuildOptions} to use.\n     * @param cancelToken A cancellation token that can be used to cancel the build.\n     * @returns A promise that resolves when the build is done.\n     */\n    async buildDocuments(documents, options, cancelToken) {\n        this.prepareBuild(documents, options);\n        // 0. Parse content\n        await this.runCancelable(documents, DocumentState.Parsed, cancelToken, doc => this.langiumDocumentFactory.update(doc, cancelToken));\n        // 1. Index content\n        await this.runCancelable(documents, DocumentState.IndexedContent, cancelToken, doc => this.indexManager.updateContent(doc, cancelToken));\n        // 2. Compute scopes\n        await this.runCancelable(documents, DocumentState.ComputedScopes, cancelToken, async (doc) => {\n            const scopeComputation = this.serviceRegistry.getServices(doc.uri).references.ScopeComputation;\n            doc.precomputedScopes = await scopeComputation.computeLocalScopes(doc, cancelToken);\n        });\n        // 3. Linking\n        await this.runCancelable(documents, DocumentState.Linked, cancelToken, doc => {\n            const linker = this.serviceRegistry.getServices(doc.uri).references.Linker;\n            return linker.link(doc, cancelToken);\n        });\n        // 4. Index references\n        await this.runCancelable(documents, DocumentState.IndexedReferences, cancelToken, doc => this.indexManager.updateReferences(doc, cancelToken));\n        // 5. Validation\n        const toBeValidated = documents.filter(doc => this.shouldValidate(doc));\n        await this.runCancelable(toBeValidated, DocumentState.Validated, cancelToken, doc => this.validate(doc, cancelToken));\n        // If we've made it to this point without being cancelled, we can mark the build state as completed.\n        for (const doc of documents) {\n            const state = this.buildState.get(doc.uri.toString());\n            if (state) {\n                state.completed = true;\n            }\n        }\n    }\n    /**\n     * Runs prior to beginning the build process to update the {@link DocumentBuildState} for each document\n     *\n     * @param documents collection of documents to be built\n     * @param options the {@link BuildOptions} to use\n     */\n    prepareBuild(documents, options) {\n        for (const doc of documents) {\n            const key = doc.uri.toString();\n            const state = this.buildState.get(key);\n            // If the document has no previous build state, we set it. If it has one, but it's already marked\n            // as completed, we overwrite it. If the previous build was not completed, we keep its state\n            // and continue where it was cancelled.\n            if (!state || state.completed) {\n                this.buildState.set(key, {\n                    completed: false,\n                    options,\n                    result: state === null || state === void 0 ? void 0 : state.result\n                });\n            }\n        }\n    }\n    /**\n     * Runs a cancelable operation on a set of documents to bring them to a specified {@link DocumentState}.\n     *\n     * @param documents The array of documents to process.\n     * @param targetState The target {@link DocumentState} to bring the documents to.\n     * @param cancelToken A token that can be used to cancel the operation.\n     * @param callback A function to be called for each document.\n     * @returns A promise that resolves when all documents have been processed or the operation is canceled.\n     * @throws Will throw `OperationCancelled` if the operation is canceled via a `CancellationToken`.\n     */\n    async runCancelable(documents, targetState, cancelToken, callback) {\n        const filtered = documents.filter(doc => doc.state < targetState);\n        for (const document of filtered) {\n            await interruptAndCheck(cancelToken);\n            await callback(document);\n            document.state = targetState;\n            await this.notifyDocumentPhase(document, targetState, cancelToken);\n        }\n        // Do not use `filtered` here, as that will miss documents that have previously reached the current target state\n        // For example, this happens in case the cancellation triggers between the processing of two documents\n        // Or files that were picked up during the workspace initialization\n        const targetStateDocs = documents.filter(doc => doc.state === targetState);\n        await this.notifyBuildPhase(targetStateDocs, targetState, cancelToken);\n        this.currentState = targetState;\n    }\n    onBuildPhase(targetState, callback) {\n        this.buildPhaseListeners.add(targetState, callback);\n        return Disposable.create(() => {\n            this.buildPhaseListeners.delete(targetState, callback);\n        });\n    }\n    onDocumentPhase(targetState, callback) {\n        this.documentPhaseListeners.add(targetState, callback);\n        return Disposable.create(() => {\n            this.documentPhaseListeners.delete(targetState, callback);\n        });\n    }\n    waitUntil(state, uriOrToken, cancelToken) {\n        let uri = undefined;\n        if (uriOrToken && 'path' in uriOrToken) {\n            uri = uriOrToken;\n        }\n        else {\n            cancelToken = uriOrToken;\n        }\n        cancelToken !== null && cancelToken !== void 0 ? cancelToken : (cancelToken = CancellationToken.None);\n        if (uri) {\n            const document = this.langiumDocuments.getDocument(uri);\n            if (document && document.state > state) {\n                return Promise.resolve(uri);\n            }\n        }\n        if (this.currentState >= state) {\n            return Promise.resolve(undefined);\n        }\n        else if (cancelToken.isCancellationRequested) {\n            return Promise.reject(OperationCancelled);\n        }\n        return new Promise((resolve, reject) => {\n            const buildDisposable = this.onBuildPhase(state, () => {\n                buildDisposable.dispose();\n                cancelDisposable.dispose();\n                if (uri) {\n                    const document = this.langiumDocuments.getDocument(uri);\n                    resolve(document === null || document === void 0 ? void 0 : document.uri);\n                }\n                else {\n                    resolve(undefined);\n                }\n            });\n            const cancelDisposable = cancelToken.onCancellationRequested(() => {\n                buildDisposable.dispose();\n                cancelDisposable.dispose();\n                reject(OperationCancelled);\n            });\n        });\n    }\n    async notifyDocumentPhase(document, state, cancelToken) {\n        const listeners = this.documentPhaseListeners.get(state);\n        const listenersCopy = listeners.slice();\n        for (const listener of listenersCopy) {\n            try {\n                await listener(document, cancelToken);\n            }\n            catch (err) {\n                // Ignore cancellation errors\n                // We want to finish the listeners before throwing\n                if (!isOperationCancelled(err)) {\n                    throw err;\n                }\n            }\n        }\n    }\n    async notifyBuildPhase(documents, state, cancelToken) {\n        if (documents.length === 0) {\n            // Don't notify when no document has been processed\n            return;\n        }\n        const listeners = this.buildPhaseListeners.get(state);\n        const listenersCopy = listeners.slice();\n        for (const listener of listenersCopy) {\n            await interruptAndCheck(cancelToken);\n            await listener(documents, cancelToken);\n        }\n    }\n    /**\n     * Determine whether the given document should be validated during a build. The default\n     * implementation checks the `validation` property of the build options. If it's set to `true`\n     * or a `ValidationOptions` object, the document is included in the validation phase.\n     */\n    shouldValidate(document) {\n        return Boolean(this.getBuildOptions(document).validation);\n    }\n    /**\n     * Run validation checks on the given document and store the resulting diagnostics in the document.\n     * If the document already contains diagnostics, the new ones are added to the list.\n     */\n    async validate(document, cancelToken) {\n        var _a, _b;\n        const validator = this.serviceRegistry.getServices(document.uri).validation.DocumentValidator;\n        const validationSetting = this.getBuildOptions(document).validation;\n        const options = typeof validationSetting === 'object' ? validationSetting : undefined;\n        const diagnostics = await validator.validateDocument(document, options, cancelToken);\n        if (document.diagnostics) {\n            document.diagnostics.push(...diagnostics);\n        }\n        else {\n            document.diagnostics = diagnostics;\n        }\n        // Store information about the executed validation in the build state\n        const state = this.buildState.get(document.uri.toString());\n        if (state) {\n            (_a = state.result) !== null && _a !== void 0 ? _a : (state.result = {});\n            const newCategories = (_b = options === null || options === void 0 ? void 0 : options.categories) !== null && _b !== void 0 ? _b : ValidationCategory.all;\n            if (state.result.validationChecks) {\n                state.result.validationChecks.push(...newCategories);\n            }\n            else {\n                state.result.validationChecks = [...newCategories];\n            }\n        }\n    }\n    getBuildOptions(document) {\n        var _a, _b;\n        return (_b = (_a = this.buildState.get(document.uri.toString())) === null || _a === void 0 ? void 0 : _a.options) !== null && _b !== void 0 ? _b : {};\n    }\n}\n//# sourceMappingURL=document-builder.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { getDocument } from '../utils/ast-utils.js';\nimport { ContextCache } from '../utils/caching.js';\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { stream } from '../utils/stream.js';\nimport { UriUtils } from '../utils/uri-utils.js';\nexport class DefaultIndexManager {\n    constructor(services) {\n        /**\n         * The symbol index stores all `AstNodeDescription` items exported by a document.\n         * The key used in this map is the string representation of the specific document URI.\n         */\n        this.symbolIndex = new Map();\n        /**\n         * This is a cache for the `allElements()` method.\n         * It caches the descriptions from `symbolIndex` grouped by types.\n         */\n        this.symbolByTypeIndex = new ContextCache();\n        /**\n         * This index keeps track of all `ReferenceDescription` items exported by a document.\n         * This is used to compute which elements are affected by a document change\n         * and for finding references to an AST node.\n         */\n        this.referenceIndex = new Map();\n        this.documents = services.workspace.LangiumDocuments;\n        this.serviceRegistry = services.ServiceRegistry;\n        this.astReflection = services.AstReflection;\n    }\n    findAllReferences(targetNode, astNodePath) {\n        const targetDocUri = getDocument(targetNode).uri;\n        const result = [];\n        this.referenceIndex.forEach(docRefs => {\n            docRefs.forEach(refDescr => {\n                if (UriUtils.equals(refDescr.targetUri, targetDocUri) && refDescr.targetPath === astNodePath) {\n                    result.push(refDescr);\n                }\n            });\n        });\n        return stream(result);\n    }\n    allElements(nodeType, uris) {\n        let documentUris = stream(this.symbolIndex.keys());\n        if (uris) {\n            documentUris = documentUris.filter(uri => !uris || uris.has(uri));\n        }\n        return documentUris\n            .map(uri => this.getFileDescriptions(uri, nodeType))\n            .flat();\n    }\n    getFileDescriptions(uri, nodeType) {\n        var _a;\n        if (!nodeType) {\n            return (_a = this.symbolIndex.get(uri)) !== null && _a !== void 0 ? _a : [];\n        }\n        const descriptions = this.symbolByTypeIndex.get(uri, nodeType, () => {\n            var _a;\n            const allFileDescriptions = (_a = this.symbolIndex.get(uri)) !== null && _a !== void 0 ? _a : [];\n            return allFileDescriptions.filter(e => this.astReflection.isSubtype(e.type, nodeType));\n        });\n        return descriptions;\n    }\n    remove(uri) {\n        const uriString = uri.toString();\n        this.symbolIndex.delete(uriString);\n        this.symbolByTypeIndex.clear(uriString);\n        this.referenceIndex.delete(uriString);\n    }\n    async updateContent(document, cancelToken = CancellationToken.None) {\n        const services = this.serviceRegistry.getServices(document.uri);\n        const exports = await services.references.ScopeComputation.computeExports(document, cancelToken);\n        const uri = document.uri.toString();\n        this.symbolIndex.set(uri, exports);\n        this.symbolByTypeIndex.clear(uri);\n    }\n    async updateReferences(document, cancelToken = CancellationToken.None) {\n        const services = this.serviceRegistry.getServices(document.uri);\n        const indexData = await services.workspace.ReferenceDescriptionProvider.createDescriptions(document, cancelToken);\n        this.referenceIndex.set(document.uri.toString(), indexData);\n    }\n    isAffected(document, changedUris) {\n        const references = this.referenceIndex.get(document.uri.toString());\n        if (!references) {\n            return false;\n        }\n        return references.some(ref => !ref.local && changedUris.has(ref.targetUri.toString()));\n    }\n}\n//# sourceMappingURL=index-manager.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { Deferred, interruptAndCheck } from '../utils/promise-utils.js';\nimport { URI, UriUtils } from '../utils/uri-utils.js';\nexport class DefaultWorkspaceManager {\n    constructor(services) {\n        this.initialBuildOptions = {};\n        this._ready = new Deferred();\n        this.serviceRegistry = services.ServiceRegistry;\n        this.langiumDocuments = services.workspace.LangiumDocuments;\n        this.documentBuilder = services.workspace.DocumentBuilder;\n        this.fileSystemProvider = services.workspace.FileSystemProvider;\n        this.mutex = services.workspace.WorkspaceLock;\n    }\n    get ready() {\n        return this._ready.promise;\n    }\n    get workspaceFolders() {\n        return this.folders;\n    }\n    initialize(params) {\n        var _a;\n        this.folders = (_a = params.workspaceFolders) !== null && _a !== void 0 ? _a : undefined;\n    }\n    initialized(_params) {\n        // Initialize the workspace even if there are no workspace folders\n        // We still want to load additional documents (language library or similar) during initialization\n        return this.mutex.write(token => { var _a; return this.initializeWorkspace((_a = this.folders) !== null && _a !== void 0 ? _a : [], token); });\n    }\n    async initializeWorkspace(folders, cancelToken = CancellationToken.None) {\n        const documents = await this.performStartup(folders);\n        // Only after creating all documents do we check whether we need to cancel the initialization\n        // The document builder will later pick up on all unprocessed documents\n        await interruptAndCheck(cancelToken);\n        await this.documentBuilder.build(documents, this.initialBuildOptions, cancelToken);\n    }\n    /**\n     * Performs the uninterruptable startup sequence of the workspace manager.\n     * This methods loads all documents in the workspace and other documents and returns them.\n     */\n    async performStartup(folders) {\n        const fileExtensions = this.serviceRegistry.all.flatMap(e => e.LanguageMetaData.fileExtensions);\n        const documents = [];\n        const collector = (document) => {\n            documents.push(document);\n            if (!this.langiumDocuments.hasDocument(document.uri)) {\n                this.langiumDocuments.addDocument(document);\n            }\n        };\n        // Even though we don't await the initialization of the workspace manager,\n        // we can still assume that all library documents and file documents are loaded by the time we start building documents.\n        // The mutex prevents anything from performing a workspace build until we check the cancellation token\n        await this.loadAdditionalDocuments(folders, collector);\n        await Promise.all(folders.map(wf => [wf, this.getRootFolder(wf)])\n            .map(async (entry) => this.traverseFolder(...entry, fileExtensions, collector)));\n        this._ready.resolve();\n        return documents;\n    }\n    /**\n     * Load all additional documents that shall be visible in the context of the given workspace\n     * folders and add them to the collector. This can be used to include built-in libraries of\n     * your language, which can be either loaded from provided files or constructed in memory.\n     */\n    loadAdditionalDocuments(_folders, _collector) {\n        return Promise.resolve();\n    }\n    /**\n     * Determine the root folder of the source documents in the given workspace folder.\n     * The default implementation returns the URI of the workspace folder, but you can override\n     * this to return a subfolder like `src` instead.\n     */\n    getRootFolder(workspaceFolder) {\n        return URI.parse(workspaceFolder.uri);\n    }\n    /**\n     * Traverse the file system folder identified by the given URI and its subfolders. All\n     * contained files that match the file extensions are added to the collector.\n     */\n    async traverseFolder(workspaceFolder, folderPath, fileExtensions, collector) {\n        const content = await this.fileSystemProvider.readDirectory(folderPath);\n        await Promise.all(content.map(async (entry) => {\n            if (this.includeEntry(workspaceFolder, entry, fileExtensions)) {\n                if (entry.isDirectory) {\n                    await this.traverseFolder(workspaceFolder, entry.uri, fileExtensions, collector);\n                }\n                else if (entry.isFile) {\n                    const document = await this.langiumDocuments.getOrCreateDocument(entry.uri);\n                    collector(document);\n                }\n            }\n        }));\n    }\n    /**\n     * Determine whether the given folder entry shall be included while indexing the workspace.\n     */\n    includeEntry(_workspaceFolder, entry, fileExtensions) {\n        const name = UriUtils.basename(entry.uri);\n        if (name.startsWith('.')) {\n            return false;\n        }\n        if (entry.isDirectory) {\n            return name !== 'node_modules' && name !== 'out';\n        }\n        else if (entry.isFile) {\n            const extname = UriUtils.extname(entry.uri);\n            return fileExtensions.includes(extname);\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=workspace-manager.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Lexer as ChevrotainLexer, defaultLexerErrorProvider } from 'chevrotain';\nexport class DefaultLexerErrorMessageProvider {\n    buildUnexpectedCharactersMessage(fullText, startOffset, length, line, column) {\n        return defaultLexerErrorProvider.buildUnexpectedCharactersMessage(fullText, startOffset, length, line, column);\n    }\n    buildUnableToPopLexerModeMessage(token) {\n        return defaultLexerErrorProvider.buildUnableToPopLexerModeMessage(token);\n    }\n}\nexport const DEFAULT_TOKENIZE_OPTIONS = { mode: 'full' };\nexport class DefaultLexer {\n    constructor(services) {\n        this.errorMessageProvider = services.parser.LexerErrorMessageProvider;\n        this.tokenBuilder = services.parser.TokenBuilder;\n        const tokens = this.tokenBuilder.buildTokens(services.Grammar, {\n            caseInsensitive: services.LanguageMetaData.caseInsensitive\n        });\n        this.tokenTypes = this.toTokenTypeDictionary(tokens);\n        const lexerTokens = isTokenTypeDictionary(tokens) ? Object.values(tokens) : tokens;\n        const production = services.LanguageMetaData.mode === 'production';\n        this.chevrotainLexer = new ChevrotainLexer(lexerTokens, {\n            positionTracking: 'full',\n            skipValidations: production,\n            errorMessageProvider: this.errorMessageProvider\n        });\n    }\n    get definition() {\n        return this.tokenTypes;\n    }\n    tokenize(text, _options = DEFAULT_TOKENIZE_OPTIONS) {\n        var _a, _b, _c;\n        const chevrotainResult = this.chevrotainLexer.tokenize(text);\n        return {\n            tokens: chevrotainResult.tokens,\n            errors: chevrotainResult.errors,\n            hidden: (_a = chevrotainResult.groups.hidden) !== null && _a !== void 0 ? _a : [],\n            report: (_c = (_b = this.tokenBuilder).flushLexingReport) === null || _c === void 0 ? void 0 : _c.call(_b, text)\n        };\n    }\n    toTokenTypeDictionary(buildTokens) {\n        if (isTokenTypeDictionary(buildTokens))\n            return buildTokens;\n        const tokens = isIMultiModeLexerDefinition(buildTokens) ? Object.values(buildTokens.modes).flat() : buildTokens;\n        const res = {};\n        tokens.forEach(token => res[token.name] = token);\n        return res;\n    }\n}\n/**\n * Returns a check whether the given TokenVocabulary is TokenType array\n */\nexport function isTokenTypeArray(tokenVocabulary) {\n    return Array.isArray(tokenVocabulary) && (tokenVocabulary.length === 0 || 'name' in tokenVocabulary[0]);\n}\n/**\n * Returns a check whether the given TokenVocabulary is IMultiModeLexerDefinition\n */\nexport function isIMultiModeLexerDefinition(tokenVocabulary) {\n    return tokenVocabulary && 'modes' in tokenVocabulary && 'defaultMode' in tokenVocabulary;\n}\n/**\n * Returns a check whether the given TokenVocabulary is TokenTypeDictionary\n */\nexport function isTokenTypeDictionary(tokenVocabulary) {\n    return !isTokenTypeArray(tokenVocabulary) && !isIMultiModeLexerDefinition(tokenVocabulary);\n}\n//# sourceMappingURL=lexer.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Position, Range } from 'vscode-languageserver-types';\nimport { NEWLINE_REGEXP, escapeRegExp } from '../utils/regexp-utils.js';\nimport { URI } from '../utils/uri-utils.js';\nexport function parseJSDoc(node, start, options) {\n    let opts;\n    let position;\n    if (typeof node === 'string') {\n        position = start;\n        opts = options;\n    }\n    else {\n        position = node.range.start;\n        opts = start;\n    }\n    if (!position) {\n        position = Position.create(0, 0);\n    }\n    const lines = getLines(node);\n    const normalizedOptions = normalizeOptions(opts);\n    const tokens = tokenize({\n        lines,\n        position,\n        options: normalizedOptions\n    });\n    return parseJSDocComment({\n        index: 0,\n        tokens,\n        position\n    });\n}\nexport function isJSDoc(node, options) {\n    const normalizedOptions = normalizeOptions(options);\n    const lines = getLines(node);\n    if (lines.length === 0) {\n        return false;\n    }\n    const first = lines[0];\n    const last = lines[lines.length - 1];\n    const firstRegex = normalizedOptions.start;\n    const lastRegex = normalizedOptions.end;\n    return Boolean(firstRegex === null || firstRegex === void 0 ? void 0 : firstRegex.exec(first)) && Boolean(lastRegex === null || lastRegex === void 0 ? void 0 : lastRegex.exec(last));\n}\nfunction getLines(node) {\n    let content = '';\n    if (typeof node === 'string') {\n        content = node;\n    }\n    else {\n        content = node.text;\n    }\n    const lines = content.split(NEWLINE_REGEXP);\n    return lines;\n}\nconst tagRegex = /\\s*(@([\\p{L}][\\p{L}\\p{N}]*)?)/uy;\nconst inlineTagRegex = /\\{(@[\\p{L}][\\p{L}\\p{N}]*)(\\s*)([^\\r\\n}]+)?\\}/gu;\nfunction tokenize(context) {\n    var _a, _b, _c;\n    const tokens = [];\n    let currentLine = context.position.line;\n    let currentCharacter = context.position.character;\n    for (let i = 0; i < context.lines.length; i++) {\n        const first = i === 0;\n        const last = i === context.lines.length - 1;\n        let line = context.lines[i];\n        let index = 0;\n        if (first && context.options.start) {\n            const match = (_a = context.options.start) === null || _a === void 0 ? void 0 : _a.exec(line);\n            if (match) {\n                index = match.index + match[0].length;\n            }\n        }\n        else {\n            const match = (_b = context.options.line) === null || _b === void 0 ? void 0 : _b.exec(line);\n            if (match) {\n                index = match.index + match[0].length;\n            }\n        }\n        if (last) {\n            const match = (_c = context.options.end) === null || _c === void 0 ? void 0 : _c.exec(line);\n            if (match) {\n                line = line.substring(0, match.index);\n            }\n        }\n        line = line.substring(0, lastCharacter(line));\n        const whitespaceEnd = skipWhitespace(line, index);\n        if (whitespaceEnd >= line.length) {\n            // Only create a break token when we already have previous tokens\n            if (tokens.length > 0) {\n                const position = Position.create(currentLine, currentCharacter);\n                tokens.push({\n                    type: 'break',\n                    content: '',\n                    range: Range.create(position, position)\n                });\n            }\n        }\n        else {\n            tagRegex.lastIndex = index;\n            const tagMatch = tagRegex.exec(line);\n            if (tagMatch) {\n                const fullMatch = tagMatch[0];\n                const value = tagMatch[1];\n                const start = Position.create(currentLine, currentCharacter + index);\n                const end = Position.create(currentLine, currentCharacter + index + fullMatch.length);\n                tokens.push({\n                    type: 'tag',\n                    content: value,\n                    range: Range.create(start, end)\n                });\n                index += fullMatch.length;\n                index = skipWhitespace(line, index);\n            }\n            if (index < line.length) {\n                const rest = line.substring(index);\n                const inlineTagMatches = Array.from(rest.matchAll(inlineTagRegex));\n                tokens.push(...buildInlineTokens(inlineTagMatches, rest, currentLine, currentCharacter + index));\n            }\n        }\n        currentLine++;\n        currentCharacter = 0;\n    }\n    // Remove last break token if there is one\n    if (tokens.length > 0 && tokens[tokens.length - 1].type === 'break') {\n        return tokens.slice(0, -1);\n    }\n    return tokens;\n}\nfunction buildInlineTokens(tags, line, lineIndex, characterIndex) {\n    const tokens = [];\n    if (tags.length === 0) {\n        const start = Position.create(lineIndex, characterIndex);\n        const end = Position.create(lineIndex, characterIndex + line.length);\n        tokens.push({\n            type: 'text',\n            content: line,\n            range: Range.create(start, end)\n        });\n    }\n    else {\n        let lastIndex = 0;\n        for (const match of tags) {\n            const matchIndex = match.index;\n            const startContent = line.substring(lastIndex, matchIndex);\n            if (startContent.length > 0) {\n                tokens.push({\n                    type: 'text',\n                    content: line.substring(lastIndex, matchIndex),\n                    range: Range.create(Position.create(lineIndex, lastIndex + characterIndex), Position.create(lineIndex, matchIndex + characterIndex))\n                });\n            }\n            let offset = startContent.length + 1;\n            const tagName = match[1];\n            tokens.push({\n                type: 'inline-tag',\n                content: tagName,\n                range: Range.create(Position.create(lineIndex, lastIndex + offset + characterIndex), Position.create(lineIndex, lastIndex + offset + tagName.length + characterIndex))\n            });\n            offset += tagName.length;\n            if (match.length === 4) {\n                offset += match[2].length;\n                const value = match[3];\n                tokens.push({\n                    type: 'text',\n                    content: value,\n                    range: Range.create(Position.create(lineIndex, lastIndex + offset + characterIndex), Position.create(lineIndex, lastIndex + offset + value.length + characterIndex))\n                });\n            }\n            else {\n                tokens.push({\n                    type: 'text',\n                    content: '',\n                    range: Range.create(Position.create(lineIndex, lastIndex + offset + characterIndex), Position.create(lineIndex, lastIndex + offset + characterIndex))\n                });\n            }\n            lastIndex = matchIndex + match[0].length;\n        }\n        const endContent = line.substring(lastIndex);\n        if (endContent.length > 0) {\n            tokens.push({\n                type: 'text',\n                content: endContent,\n                range: Range.create(Position.create(lineIndex, lastIndex + characterIndex), Position.create(lineIndex, lastIndex + characterIndex + endContent.length))\n            });\n        }\n    }\n    return tokens;\n}\nconst nonWhitespaceRegex = /\\S/;\nconst whitespaceEndRegex = /\\s*$/;\nfunction skipWhitespace(line, index) {\n    const match = line.substring(index).match(nonWhitespaceRegex);\n    if (match) {\n        return index + match.index;\n    }\n    else {\n        return line.length;\n    }\n}\nfunction lastCharacter(line) {\n    const match = line.match(whitespaceEndRegex);\n    if (match && typeof match.index === 'number') {\n        return match.index;\n    }\n    return undefined;\n}\n// Parsing\nfunction parseJSDocComment(context) {\n    var _a, _b, _c, _d;\n    const startPosition = Position.create(context.position.line, context.position.character);\n    if (context.tokens.length === 0) {\n        return new JSDocCommentImpl([], Range.create(startPosition, startPosition));\n    }\n    const elements = [];\n    while (context.index < context.tokens.length) {\n        const element = parseJSDocElement(context, elements[elements.length - 1]);\n        if (element) {\n            elements.push(element);\n        }\n    }\n    const start = (_b = (_a = elements[0]) === null || _a === void 0 ? void 0 : _a.range.start) !== null && _b !== void 0 ? _b : startPosition;\n    const end = (_d = (_c = elements[elements.length - 1]) === null || _c === void 0 ? void 0 : _c.range.end) !== null && _d !== void 0 ? _d : startPosition;\n    return new JSDocCommentImpl(elements, Range.create(start, end));\n}\nfunction parseJSDocElement(context, last) {\n    const next = context.tokens[context.index];\n    if (next.type === 'tag') {\n        return parseJSDocTag(context, false);\n    }\n    else if (next.type === 'text' || next.type === 'inline-tag') {\n        return parseJSDocText(context);\n    }\n    else {\n        appendEmptyLine(next, last);\n        context.index++;\n        return undefined;\n    }\n}\nfunction appendEmptyLine(token, element) {\n    if (element) {\n        const line = new JSDocLineImpl('', token.range);\n        if ('inlines' in element) {\n            element.inlines.push(line);\n        }\n        else {\n            element.content.inlines.push(line);\n        }\n    }\n}\nfunction parseJSDocText(context) {\n    let token = context.tokens[context.index];\n    const firstToken = token;\n    let lastToken = token;\n    const lines = [];\n    while (token && token.type !== 'break' && token.type !== 'tag') {\n        lines.push(parseJSDocInline(context));\n        lastToken = token;\n        token = context.tokens[context.index];\n    }\n    return new JSDocTextImpl(lines, Range.create(firstToken.range.start, lastToken.range.end));\n}\nfunction parseJSDocInline(context) {\n    const token = context.tokens[context.index];\n    if (token.type === 'inline-tag') {\n        return parseJSDocTag(context, true);\n    }\n    else {\n        return parseJSDocLine(context);\n    }\n}\nfunction parseJSDocTag(context, inline) {\n    const tagToken = context.tokens[context.index++];\n    const name = tagToken.content.substring(1);\n    const nextToken = context.tokens[context.index];\n    if ((nextToken === null || nextToken === void 0 ? void 0 : nextToken.type) === 'text') {\n        if (inline) {\n            const docLine = parseJSDocLine(context);\n            return new JSDocTagImpl(name, new JSDocTextImpl([docLine], docLine.range), inline, Range.create(tagToken.range.start, docLine.range.end));\n        }\n        else {\n            const textDoc = parseJSDocText(context);\n            return new JSDocTagImpl(name, textDoc, inline, Range.create(tagToken.range.start, textDoc.range.end));\n        }\n    }\n    else {\n        const range = tagToken.range;\n        return new JSDocTagImpl(name, new JSDocTextImpl([], range), inline, range);\n    }\n}\nfunction parseJSDocLine(context) {\n    const token = context.tokens[context.index++];\n    return new JSDocLineImpl(token.content, token.range);\n}\nfunction normalizeOptions(options) {\n    if (!options) {\n        return normalizeOptions({\n            start: '/**',\n            end: '*/',\n            line: '*'\n        });\n    }\n    const { start, end, line } = options;\n    return {\n        start: normalizeOption(start, true),\n        end: normalizeOption(end, false),\n        line: normalizeOption(line, true)\n    };\n}\nfunction normalizeOption(option, start) {\n    if (typeof option === 'string' || typeof option === 'object') {\n        const escaped = typeof option === 'string' ? escapeRegExp(option) : option.source;\n        if (start) {\n            return new RegExp(`^\\\\s*${escaped}`);\n        }\n        else {\n            return new RegExp(`\\\\s*${escaped}\\\\s*$`);\n        }\n    }\n    else {\n        return option;\n    }\n}\nclass JSDocCommentImpl {\n    constructor(elements, range) {\n        this.elements = elements;\n        this.range = range;\n    }\n    getTag(name) {\n        return this.getAllTags().find(e => e.name === name);\n    }\n    getTags(name) {\n        return this.getAllTags().filter(e => e.name === name);\n    }\n    getAllTags() {\n        return this.elements.filter((e) => 'name' in e);\n    }\n    toString() {\n        let value = '';\n        for (const element of this.elements) {\n            if (value.length === 0) {\n                value = element.toString();\n            }\n            else {\n                const text = element.toString();\n                value += fillNewlines(value) + text;\n            }\n        }\n        return value.trim();\n    }\n    toMarkdown(options) {\n        let value = '';\n        for (const element of this.elements) {\n            if (value.length === 0) {\n                value = element.toMarkdown(options);\n            }\n            else {\n                const text = element.toMarkdown(options);\n                value += fillNewlines(value) + text;\n            }\n        }\n        return value.trim();\n    }\n}\nclass JSDocTagImpl {\n    constructor(name, content, inline, range) {\n        this.name = name;\n        this.content = content;\n        this.inline = inline;\n        this.range = range;\n    }\n    toString() {\n        let text = `@${this.name}`;\n        const content = this.content.toString();\n        if (this.content.inlines.length === 1) {\n            text = `${text} ${content}`;\n        }\n        else if (this.content.inlines.length > 1) {\n            text = `${text}\\n${content}`;\n        }\n        if (this.inline) {\n            // Inline tags are surrounded by curly braces\n            return `{${text}}`;\n        }\n        else {\n            return text;\n        }\n    }\n    toMarkdown(options) {\n        var _a, _b;\n        return (_b = (_a = options === null || options === void 0 ? void 0 : options.renderTag) === null || _a === void 0 ? void 0 : _a.call(options, this)) !== null && _b !== void 0 ? _b : this.toMarkdownDefault(options);\n    }\n    toMarkdownDefault(options) {\n        const content = this.content.toMarkdown(options);\n        if (this.inline) {\n            const rendered = renderInlineTag(this.name, content, options !== null && options !== void 0 ? options : {});\n            if (typeof rendered === 'string') {\n                return rendered;\n            }\n        }\n        let marker = '';\n        if ((options === null || options === void 0 ? void 0 : options.tag) === 'italic' || (options === null || options === void 0 ? void 0 : options.tag) === undefined) {\n            marker = '*';\n        }\n        else if ((options === null || options === void 0 ? void 0 : options.tag) === 'bold') {\n            marker = '**';\n        }\n        else if ((options === null || options === void 0 ? void 0 : options.tag) === 'bold-italic') {\n            marker = '***';\n        }\n        let text = `${marker}@${this.name}${marker}`;\n        if (this.content.inlines.length === 1) {\n            text = `${text} — ${content}`;\n        }\n        else if (this.content.inlines.length > 1) {\n            text = `${text}\\n${content}`;\n        }\n        if (this.inline) {\n            // Inline tags are surrounded by curly braces\n            return `{${text}}`;\n        }\n        else {\n            return text;\n        }\n    }\n}\nfunction renderInlineTag(tag, content, options) {\n    var _a, _b;\n    if (tag === 'linkplain' || tag === 'linkcode' || tag === 'link') {\n        const index = content.indexOf(' ');\n        let display = content;\n        if (index > 0) {\n            const displayStart = skipWhitespace(content, index);\n            display = content.substring(displayStart);\n            content = content.substring(0, index);\n        }\n        if (tag === 'linkcode' || (tag === 'link' && options.link === 'code')) {\n            // Surround the display value in a markdown inline code block\n            display = `\\`${display}\\``;\n        }\n        const renderedLink = (_b = (_a = options.renderLink) === null || _a === void 0 ? void 0 : _a.call(options, content, display)) !== null && _b !== void 0 ? _b : renderLinkDefault(content, display);\n        return renderedLink;\n    }\n    return undefined;\n}\nfunction renderLinkDefault(content, display) {\n    try {\n        URI.parse(content, true);\n        return `[${display}](${content})`;\n    }\n    catch (_a) {\n        return content;\n    }\n}\nclass JSDocTextImpl {\n    constructor(lines, range) {\n        this.inlines = lines;\n        this.range = range;\n    }\n    toString() {\n        let text = '';\n        for (let i = 0; i < this.inlines.length; i++) {\n            const inline = this.inlines[i];\n            const next = this.inlines[i + 1];\n            text += inline.toString();\n            if (next && next.range.start.line > inline.range.start.line) {\n                text += '\\n';\n            }\n        }\n        return text;\n    }\n    toMarkdown(options) {\n        let text = '';\n        for (let i = 0; i < this.inlines.length; i++) {\n            const inline = this.inlines[i];\n            const next = this.inlines[i + 1];\n            text += inline.toMarkdown(options);\n            if (next && next.range.start.line > inline.range.start.line) {\n                text += '\\n';\n            }\n        }\n        return text;\n    }\n}\nclass JSDocLineImpl {\n    constructor(text, range) {\n        this.text = text;\n        this.range = range;\n    }\n    toString() {\n        return this.text;\n    }\n    toMarkdown() {\n        return this.text;\n    }\n}\nfunction fillNewlines(text) {\n    if (text.endsWith('\\n')) {\n        return '\\n';\n    }\n    else {\n        return '\\n\\n';\n    }\n}\n//# sourceMappingURL=jsdoc.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { getDocument } from '../utils/ast-utils.js';\nimport { isJSDoc, parseJSDoc } from './jsdoc.js';\nexport class JSDocDocumentationProvider {\n    constructor(services) {\n        this.indexManager = services.shared.workspace.IndexManager;\n        this.commentProvider = services.documentation.CommentProvider;\n    }\n    getDocumentation(node) {\n        const comment = this.commentProvider.getComment(node);\n        if (comment && isJSDoc(comment)) {\n            const parsedJSDoc = parseJSDoc(comment);\n            return parsedJSDoc.toMarkdown({\n                renderLink: (link, display) => {\n                    return this.documentationLinkRenderer(node, link, display);\n                },\n                renderTag: (tag) => {\n                    return this.documentationTagRenderer(node, tag);\n                }\n            });\n        }\n        return undefined;\n    }\n    documentationLinkRenderer(node, name, display) {\n        var _a;\n        const description = (_a = this.findNameInPrecomputedScopes(node, name)) !== null && _a !== void 0 ? _a : this.findNameInGlobalScope(node, name);\n        if (description && description.nameSegment) {\n            const line = description.nameSegment.range.start.line + 1;\n            const character = description.nameSegment.range.start.character + 1;\n            const uri = description.documentUri.with({ fragment: `L${line},${character}` });\n            return `[${display}](${uri.toString()})`;\n        }\n        else {\n            return undefined;\n        }\n    }\n    documentationTagRenderer(_node, _tag) {\n        // Fall back to the default tag rendering\n        return undefined;\n    }\n    findNameInPrecomputedScopes(node, name) {\n        const document = getDocument(node);\n        const precomputed = document.precomputedScopes;\n        if (!precomputed) {\n            return undefined;\n        }\n        let currentNode = node;\n        do {\n            const allDescriptions = precomputed.get(currentNode);\n            const description = allDescriptions.find(e => e.name === name);\n            if (description) {\n                return description;\n            }\n            currentNode = currentNode.$container;\n        } while (currentNode);\n        return undefined;\n    }\n    findNameInGlobalScope(node, name) {\n        const description = this.indexManager.allElements().find(e => e.name === name);\n        return description;\n    }\n}\n//# sourceMappingURL=documentation-provider.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isAstNodeWithComment } from '../serializer/json-serializer.js';\nimport { findCommentNode } from '../utils/cst-utils.js';\nexport class DefaultCommentProvider {\n    constructor(services) {\n        this.grammarConfig = () => services.parser.GrammarConfig;\n    }\n    getComment(node) {\n        var _a;\n        if (isAstNodeWithComment(node)) {\n            return node.$comment;\n        }\n        return (_a = findCommentNode(node.$cstNode, this.grammarConfig().multilineCommentRules)) === null || _a === void 0 ? void 0 : _a.text;\n    }\n}\n//# sourceMappingURL=comment-provider.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Deferred, OperationCancelled } from '../utils/promise-utils.js';\nimport { Emitter } from '../utils/event.js';\n/**\n * Default implementation of the async parser which simply wraps the sync parser in a promise.\n *\n * @remarks\n * A real implementation would create worker threads or web workers to offload the parsing work.\n */\nexport class DefaultAsyncParser {\n    constructor(services) {\n        this.syncParser = services.parser.LangiumParser;\n    }\n    parse(text, _cancelToken) {\n        return Promise.resolve(this.syncParser.parse(text));\n    }\n}\nexport class AbstractThreadedAsyncParser {\n    constructor(services) {\n        /**\n         * The thread count determines how many threads are used to parse files in parallel.\n         * The default value is 8. Decreasing this value increases startup performance, but decreases parallel parsing performance.\n         */\n        this.threadCount = 8;\n        /**\n         * The termination delay determines how long the parser waits for a thread to finish after a cancellation request.\n         * The default value is 200(ms).\n         */\n        this.terminationDelay = 200;\n        this.workerPool = [];\n        this.queue = [];\n        this.hydrator = services.serializer.Hydrator;\n    }\n    initializeWorkers() {\n        while (this.workerPool.length < this.threadCount) {\n            const worker = this.createWorker();\n            worker.onReady(() => {\n                if (this.queue.length > 0) {\n                    const deferred = this.queue.shift();\n                    if (deferred) {\n                        worker.lock();\n                        deferred.resolve(worker);\n                    }\n                }\n            });\n            this.workerPool.push(worker);\n        }\n    }\n    async parse(text, cancelToken) {\n        const worker = await this.acquireParserWorker(cancelToken);\n        const deferred = new Deferred();\n        let timeout;\n        // If the cancellation token is requested, we wait for a certain time before terminating the worker.\n        // Since the cancellation token lives longer than the parsing process, we need to dispose the event listener.\n        // Otherwise, we might accidentally terminate the worker after the parsing process has finished.\n        const cancellation = cancelToken.onCancellationRequested(() => {\n            timeout = setTimeout(() => {\n                this.terminateWorker(worker);\n            }, this.terminationDelay);\n        });\n        worker.parse(text).then(result => {\n            const hydrated = this.hydrator.hydrate(result);\n            deferred.resolve(hydrated);\n        }).catch(err => {\n            deferred.reject(err);\n        }).finally(() => {\n            cancellation.dispose();\n            clearTimeout(timeout);\n        });\n        return deferred.promise;\n    }\n    terminateWorker(worker) {\n        worker.terminate();\n        const index = this.workerPool.indexOf(worker);\n        if (index >= 0) {\n            this.workerPool.splice(index, 1);\n        }\n    }\n    async acquireParserWorker(cancelToken) {\n        this.initializeWorkers();\n        for (const worker of this.workerPool) {\n            if (worker.ready) {\n                worker.lock();\n                return worker;\n            }\n        }\n        const deferred = new Deferred();\n        cancelToken.onCancellationRequested(() => {\n            const index = this.queue.indexOf(deferred);\n            if (index >= 0) {\n                this.queue.splice(index, 1);\n            }\n            deferred.reject(OperationCancelled);\n        });\n        this.queue.push(deferred);\n        return deferred.promise;\n    }\n}\nexport class ParserWorker {\n    get ready() {\n        return this._ready;\n    }\n    get onReady() {\n        return this.onReadyEmitter.event;\n    }\n    constructor(sendMessage, onMessage, onError, terminate) {\n        this.onReadyEmitter = new Emitter();\n        this.deferred = new Deferred();\n        this._ready = true;\n        this._parsing = false;\n        this.sendMessage = sendMessage;\n        this._terminate = terminate;\n        onMessage(result => {\n            const parseResult = result;\n            this.deferred.resolve(parseResult);\n            this.unlock();\n        });\n        onError(error => {\n            this.deferred.reject(error);\n            this.unlock();\n        });\n    }\n    terminate() {\n        this.deferred.reject(OperationCancelled);\n        this._terminate();\n    }\n    lock() {\n        this._ready = false;\n    }\n    unlock() {\n        this._parsing = false;\n        this._ready = true;\n        this.onReadyEmitter.fire();\n    }\n    parse(text) {\n        if (this._parsing) {\n            throw new Error('Parser worker is busy');\n        }\n        this._parsing = true;\n        this.deferred = new Deferred();\n        this.sendMessage(text);\n        return this.deferred.promise;\n    }\n}\n//# sourceMappingURL=async-parser.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken, CancellationTokenSource } from '../utils/cancellation.js';\nimport { Deferred, isOperationCancelled, startCancelableOperation } from '../utils/promise-utils.js';\nexport class DefaultWorkspaceLock {\n    constructor() {\n        this.previousTokenSource = new CancellationTokenSource();\n        this.writeQueue = [];\n        this.readQueue = [];\n        this.done = true;\n    }\n    write(action) {\n        this.cancelWrite();\n        const tokenSource = startCancelableOperation();\n        this.previousTokenSource = tokenSource;\n        return this.enqueue(this.writeQueue, action, tokenSource.token);\n    }\n    read(action) {\n        return this.enqueue(this.readQueue, action);\n    }\n    enqueue(queue, action, cancellationToken = CancellationToken.None) {\n        const deferred = new Deferred();\n        const entry = {\n            action,\n            deferred,\n            cancellationToken\n        };\n        queue.push(entry);\n        this.performNextOperation();\n        return deferred.promise;\n    }\n    async performNextOperation() {\n        if (!this.done) {\n            return;\n        }\n        const entries = [];\n        if (this.writeQueue.length > 0) {\n            // Just perform the next write action\n            entries.push(this.writeQueue.shift());\n        }\n        else if (this.readQueue.length > 0) {\n            // Empty the read queue and perform all actions in parallel\n            entries.push(...this.readQueue.splice(0, this.readQueue.length));\n        }\n        else {\n            return;\n        }\n        this.done = false;\n        await Promise.all(entries.map(async ({ action, deferred, cancellationToken }) => {\n            try {\n                // Move the execution of the action to the next event loop tick via `Promise.resolve()`\n                const result = await Promise.resolve().then(() => action(cancellationToken));\n                deferred.resolve(result);\n            }\n            catch (err) {\n                if (isOperationCancelled(err)) {\n                    // If the operation was cancelled, we don't want to reject the promise\n                    deferred.resolve(undefined);\n                }\n                else {\n                    deferred.reject(err);\n                }\n            }\n        }));\n        this.done = true;\n        this.performNextOperation();\n    }\n    cancelWrite() {\n        this.previousTokenSource.cancel();\n    }\n}\n//# sourceMappingURL=workspace-lock.js.map","/******************************************************************************\n * Copyright 2024 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CompositeCstNodeImpl, LeafCstNodeImpl, RootCstNodeImpl } from '../parser/cst-node-builder.js';\nimport { isAbstractElement } from '../languages/generated/ast.js';\nimport { isRootCstNode, isCompositeCstNode, isLeafCstNode, isAstNode, isReference } from '../syntax-tree.js';\nimport { streamAst } from '../utils/ast-utils.js';\nimport { BiMap } from '../utils/collections.js';\nimport { streamCst } from '../utils/cst-utils.js';\nexport class DefaultHydrator {\n    constructor(services) {\n        this.grammarElementIdMap = new BiMap();\n        this.tokenTypeIdMap = new BiMap();\n        this.grammar = services.Grammar;\n        this.lexer = services.parser.Lexer;\n        this.linker = services.references.Linker;\n    }\n    dehydrate(result) {\n        return {\n            lexerErrors: result.lexerErrors,\n            lexerReport: result.lexerReport ? this.dehydrateLexerReport(result.lexerReport) : undefined,\n            // We need to create shallow copies of the errors\n            // The original errors inherit from the `Error` class, which is not transferable across worker threads\n            parserErrors: result.parserErrors.map(e => (Object.assign(Object.assign({}, e), { message: e.message }))),\n            value: this.dehydrateAstNode(result.value, this.createDehyrationContext(result.value))\n        };\n    }\n    dehydrateLexerReport(lexerReport) {\n        // By default, lexer reports are serializable\n        return lexerReport;\n    }\n    createDehyrationContext(node) {\n        const astNodes = new Map();\n        const cstNodes = new Map();\n        for (const astNode of streamAst(node)) {\n            astNodes.set(astNode, {});\n        }\n        if (node.$cstNode) {\n            for (const cstNode of streamCst(node.$cstNode)) {\n                cstNodes.set(cstNode, {});\n            }\n        }\n        return {\n            astNodes,\n            cstNodes\n        };\n    }\n    dehydrateAstNode(node, context) {\n        const obj = context.astNodes.get(node);\n        obj.$type = node.$type;\n        obj.$containerIndex = node.$containerIndex;\n        obj.$containerProperty = node.$containerProperty;\n        if (node.$cstNode !== undefined) {\n            obj.$cstNode = this.dehydrateCstNode(node.$cstNode, context);\n        }\n        for (const [name, value] of Object.entries(node)) {\n            if (name.startsWith('$')) {\n                continue;\n            }\n            if (Array.isArray(value)) {\n                const arr = [];\n                obj[name] = arr;\n                for (const item of value) {\n                    if (isAstNode(item)) {\n                        arr.push(this.dehydrateAstNode(item, context));\n                    }\n                    else if (isReference(item)) {\n                        arr.push(this.dehydrateReference(item, context));\n                    }\n                    else {\n                        arr.push(item);\n                    }\n                }\n            }\n            else if (isAstNode(value)) {\n                obj[name] = this.dehydrateAstNode(value, context);\n            }\n            else if (isReference(value)) {\n                obj[name] = this.dehydrateReference(value, context);\n            }\n            else if (value !== undefined) {\n                obj[name] = value;\n            }\n        }\n        return obj;\n    }\n    dehydrateReference(reference, context) {\n        const obj = {};\n        obj.$refText = reference.$refText;\n        if (reference.$refNode) {\n            obj.$refNode = context.cstNodes.get(reference.$refNode);\n        }\n        return obj;\n    }\n    dehydrateCstNode(node, context) {\n        const cstNode = context.cstNodes.get(node);\n        if (isRootCstNode(node)) {\n            cstNode.fullText = node.fullText;\n        }\n        else {\n            // Note: This returns undefined for hidden nodes (i.e. comments)\n            cstNode.grammarSource = this.getGrammarElementId(node.grammarSource);\n        }\n        cstNode.hidden = node.hidden;\n        cstNode.astNode = context.astNodes.get(node.astNode);\n        if (isCompositeCstNode(node)) {\n            cstNode.content = node.content.map(child => this.dehydrateCstNode(child, context));\n        }\n        else if (isLeafCstNode(node)) {\n            cstNode.tokenType = node.tokenType.name;\n            cstNode.offset = node.offset;\n            cstNode.length = node.length;\n            cstNode.startLine = node.range.start.line;\n            cstNode.startColumn = node.range.start.character;\n            cstNode.endLine = node.range.end.line;\n            cstNode.endColumn = node.range.end.character;\n        }\n        return cstNode;\n    }\n    hydrate(result) {\n        const node = result.value;\n        const context = this.createHydrationContext(node);\n        if ('$cstNode' in node) {\n            this.hydrateCstNode(node.$cstNode, context);\n        }\n        return {\n            lexerErrors: result.lexerErrors,\n            lexerReport: result.lexerReport,\n            parserErrors: result.parserErrors,\n            value: this.hydrateAstNode(node, context)\n        };\n    }\n    createHydrationContext(node) {\n        const astNodes = new Map();\n        const cstNodes = new Map();\n        for (const astNode of streamAst(node)) {\n            astNodes.set(astNode, {});\n        }\n        let root;\n        if (node.$cstNode) {\n            for (const cstNode of streamCst(node.$cstNode)) {\n                let cst;\n                if ('fullText' in cstNode) {\n                    cst = new RootCstNodeImpl(cstNode.fullText);\n                    root = cst;\n                }\n                else if ('content' in cstNode) {\n                    cst = new CompositeCstNodeImpl();\n                }\n                else if ('tokenType' in cstNode) {\n                    cst = this.hydrateCstLeafNode(cstNode);\n                }\n                if (cst) {\n                    cstNodes.set(cstNode, cst);\n                    cst.root = root;\n                }\n            }\n        }\n        return {\n            astNodes,\n            cstNodes\n        };\n    }\n    hydrateAstNode(node, context) {\n        const astNode = context.astNodes.get(node);\n        astNode.$type = node.$type;\n        astNode.$containerIndex = node.$containerIndex;\n        astNode.$containerProperty = node.$containerProperty;\n        if (node.$cstNode) {\n            astNode.$cstNode = context.cstNodes.get(node.$cstNode);\n        }\n        for (const [name, value] of Object.entries(node)) {\n            if (name.startsWith('$')) {\n                continue;\n            }\n            if (Array.isArray(value)) {\n                const arr = [];\n                astNode[name] = arr;\n                for (const item of value) {\n                    if (isAstNode(item)) {\n                        arr.push(this.setParent(this.hydrateAstNode(item, context), astNode));\n                    }\n                    else if (isReference(item)) {\n                        arr.push(this.hydrateReference(item, astNode, name, context));\n                    }\n                    else {\n                        arr.push(item);\n                    }\n                }\n            }\n            else if (isAstNode(value)) {\n                astNode[name] = this.setParent(this.hydrateAstNode(value, context), astNode);\n            }\n            else if (isReference(value)) {\n                astNode[name] = this.hydrateReference(value, astNode, name, context);\n            }\n            else if (value !== undefined) {\n                astNode[name] = value;\n            }\n        }\n        return astNode;\n    }\n    setParent(node, parent) {\n        node.$container = parent;\n        return node;\n    }\n    hydrateReference(reference, node, name, context) {\n        return this.linker.buildReference(node, name, context.cstNodes.get(reference.$refNode), reference.$refText);\n    }\n    hydrateCstNode(cstNode, context, num = 0) {\n        const cstNodeObj = context.cstNodes.get(cstNode);\n        if (typeof cstNode.grammarSource === 'number') {\n            cstNodeObj.grammarSource = this.getGrammarElement(cstNode.grammarSource);\n        }\n        cstNodeObj.astNode = context.astNodes.get(cstNode.astNode);\n        if (isCompositeCstNode(cstNodeObj)) {\n            for (const child of cstNode.content) {\n                const hydrated = this.hydrateCstNode(child, context, num++);\n                cstNodeObj.content.push(hydrated);\n            }\n        }\n        return cstNodeObj;\n    }\n    hydrateCstLeafNode(cstNode) {\n        const tokenType = this.getTokenType(cstNode.tokenType);\n        const offset = cstNode.offset;\n        const length = cstNode.length;\n        const startLine = cstNode.startLine;\n        const startColumn = cstNode.startColumn;\n        const endLine = cstNode.endLine;\n        const endColumn = cstNode.endColumn;\n        const hidden = cstNode.hidden;\n        const node = new LeafCstNodeImpl(offset, length, {\n            start: {\n                line: startLine,\n                character: startColumn\n            },\n            end: {\n                line: endLine,\n                character: endColumn\n            }\n        }, tokenType, hidden);\n        return node;\n    }\n    getTokenType(name) {\n        return this.lexer.definition[name];\n    }\n    getGrammarElementId(node) {\n        if (!node) {\n            return undefined;\n        }\n        if (this.grammarElementIdMap.size === 0) {\n            this.createGrammarElementIdMap();\n        }\n        return this.grammarElementIdMap.get(node);\n    }\n    getGrammarElement(id) {\n        if (this.grammarElementIdMap.size === 0) {\n            this.createGrammarElementIdMap();\n        }\n        const element = this.grammarElementIdMap.getKey(id);\n        return element;\n    }\n    createGrammarElementIdMap() {\n        let id = 0;\n        for (const element of streamAst(this.grammar)) {\n            if (isAbstractElement(element)) {\n                this.grammarElementIdMap.set(element, id++);\n            }\n        }\n    }\n}\n//# sourceMappingURL=hydrator.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n******************************************************************************/\nimport { createGrammarConfig } from './languages/grammar-config.js';\nimport { createCompletionParser } from './parser/completion-parser-builder.js';\nimport { createLangiumParser } from './parser/langium-parser-builder.js';\nimport { DefaultTokenBuilder } from './parser/token-builder.js';\nimport { DefaultValueConverter } from './parser/value-converter.js';\nimport { DefaultLinker } from './references/linker.js';\nimport { DefaultNameProvider } from './references/name-provider.js';\nimport { DefaultReferences } from './references/references.js';\nimport { DefaultScopeComputation } from './references/scope-computation.js';\nimport { DefaultScopeProvider } from './references/scope-provider.js';\nimport { DefaultJsonSerializer } from './serializer/json-serializer.js';\nimport { DefaultServiceRegistry } from './service-registry.js';\nimport { DefaultDocumentValidator } from './validation/document-validator.js';\nimport { ValidationRegistry } from './validation/validation-registry.js';\nimport { DefaultAstNodeDescriptionProvider, DefaultReferenceDescriptionProvider } from './workspace/ast-descriptions.js';\nimport { DefaultAstNodeLocator } from './workspace/ast-node-locator.js';\nimport { DefaultConfigurationProvider } from './workspace/configuration.js';\nimport { DefaultDocumentBuilder } from './workspace/document-builder.js';\nimport { DefaultLangiumDocumentFactory, DefaultLangiumDocuments } from './workspace/documents.js';\nimport { DefaultIndexManager } from './workspace/index-manager.js';\nimport { DefaultWorkspaceManager } from './workspace/workspace-manager.js';\nimport { DefaultLexer, DefaultLexerErrorMessageProvider } from './parser/lexer.js';\nimport { JSDocDocumentationProvider } from './documentation/documentation-provider.js';\nimport { DefaultCommentProvider } from './documentation/comment-provider.js';\nimport { LangiumParserErrorMessageProvider } from './parser/langium-parser.js';\nimport { DefaultAsyncParser } from './parser/async-parser.js';\nimport { DefaultWorkspaceLock } from './workspace/workspace-lock.js';\nimport { DefaultHydrator } from './serializer/hydrator.js';\n/**\n * Creates a dependency injection module configuring the default core services.\n * This is a set of services that are dedicated to a specific language.\n */\nexport function createDefaultCoreModule(context) {\n    return {\n        documentation: {\n            CommentProvider: (services) => new DefaultCommentProvider(services),\n            DocumentationProvider: (services) => new JSDocDocumentationProvider(services)\n        },\n        parser: {\n            AsyncParser: (services) => new DefaultAsyncParser(services),\n            GrammarConfig: (services) => createGrammarConfig(services),\n            LangiumParser: (services) => createLangiumParser(services),\n            CompletionParser: (services) => createCompletionParser(services),\n            ValueConverter: () => new DefaultValueConverter(),\n            TokenBuilder: () => new DefaultTokenBuilder(),\n            Lexer: (services) => new DefaultLexer(services),\n            ParserErrorMessageProvider: () => new LangiumParserErrorMessageProvider(),\n            LexerErrorMessageProvider: () => new DefaultLexerErrorMessageProvider()\n        },\n        workspace: {\n            AstNodeLocator: () => new DefaultAstNodeLocator(),\n            AstNodeDescriptionProvider: (services) => new DefaultAstNodeDescriptionProvider(services),\n            ReferenceDescriptionProvider: (services) => new DefaultReferenceDescriptionProvider(services)\n        },\n        references: {\n            Linker: (services) => new DefaultLinker(services),\n            NameProvider: () => new DefaultNameProvider(),\n            ScopeProvider: (services) => new DefaultScopeProvider(services),\n            ScopeComputation: (services) => new DefaultScopeComputation(services),\n            References: (services) => new DefaultReferences(services)\n        },\n        serializer: {\n            Hydrator: (services) => new DefaultHydrator(services),\n            JsonSerializer: (services) => new DefaultJsonSerializer(services)\n        },\n        validation: {\n            DocumentValidator: (services) => new DefaultDocumentValidator(services),\n            ValidationRegistry: (services) => new ValidationRegistry(services)\n        },\n        shared: () => context.shared\n    };\n}\n/**\n * Creates a dependency injection module configuring the default shared core services.\n * This is the set of services that are shared between multiple languages.\n */\nexport function createDefaultSharedCoreModule(context) {\n    return {\n        ServiceRegistry: (services) => new DefaultServiceRegistry(services),\n        workspace: {\n            LangiumDocuments: (services) => new DefaultLangiumDocuments(services),\n            LangiumDocumentFactory: (services) => new DefaultLangiumDocumentFactory(services),\n            DocumentBuilder: (services) => new DefaultDocumentBuilder(services),\n            IndexManager: (services) => new DefaultIndexManager(services),\n            WorkspaceManager: (services) => new DefaultWorkspaceManager(services),\n            FileSystemProvider: (services) => context.fileSystemProvider(services),\n            WorkspaceLock: () => new DefaultWorkspaceLock(),\n            ConfigurationProvider: (services) => new DefaultConfigurationProvider(services)\n        }\n    };\n}\n//# sourceMappingURL=default-module.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { DefaultNameRegexp } from '../utils/cst-utils.js';\nimport { isCommentTerminal, terminalRegex } from '../utils/grammar-utils.js';\nimport { isMultilineComment } from '../utils/regexp-utils.js';\nimport { isTerminalRule } from './generated/ast.js';\n/**\n * Create the default grammar configuration (used by `createDefaultModule`). This can be overridden in a\n * language-specific module.\n */\nexport function createGrammarConfig(services) {\n    const rules = [];\n    const grammar = services.Grammar;\n    for (const rule of grammar.rules) {\n        if (isTerminalRule(rule) && isCommentTerminal(rule) && isMultilineComment(terminalRegex(rule))) {\n            rules.push(rule.name);\n        }\n    }\n    return {\n        multilineCommentRules: rules,\n        nameRegexp: DefaultNameRegexp\n    };\n}\n//# sourceMappingURL=grammar-config.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { LangiumCompletionParser } from './langium-parser.js';\nimport { createParser } from './parser-builder-base.js';\nexport function createCompletionParser(services) {\n    const grammar = services.Grammar;\n    const lexer = services.parser.Lexer;\n    const parser = new LangiumCompletionParser(services);\n    createParser(grammar, parser, lexer.definition);\n    parser.finalize();\n    return parser;\n}\n//# sourceMappingURL=completion-parser-builder.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport var Module;\n(function (Module) {\n    Module.merge = (m1, m2) => _merge(_merge({}, m1), m2);\n})(Module || (Module = {}));\n/**\n * Given a set of modules, the inject function returns a lazily evaluated injector\n * that injects dependencies into the requested service when it is requested the\n * first time. Subsequent requests will return the same service.\n *\n * In the case of cyclic dependencies, an Error will be thrown. This can be fixed\n * by injecting a provider `() => T` instead of a `T`.\n *\n * Please note that the arguments may be objects or arrays. However, the result will\n * be an object. Using it with for..of will have no effect.\n *\n * @param module1 first Module\n * @param module2 (optional) second Module\n * @param module3 (optional) third Module\n * @param module4 (optional) fourth Module\n * @param module5 (optional) fifth Module\n * @param module6 (optional) sixth Module\n * @param module7 (optional) seventh Module\n * @param module8 (optional) eighth Module\n * @param module9 (optional) ninth Module\n * @returns a new object of type I\n */\nexport function inject(module1, module2, module3, module4, module5, module6, module7, module8, module9) {\n    const module = [module1, module2, module3, module4, module5, module6, module7, module8, module9].reduce(_merge, {});\n    return _inject(module);\n}\nconst isProxy = Symbol('isProxy');\n/**\n * Eagerly load all services in the given dependency injection container. This is sometimes\n * necessary because services can register event listeners in their constructors.\n */\nexport function eagerLoad(item) {\n    if (item && item[isProxy]) {\n        for (const value of Object.values(item)) {\n            eagerLoad(value);\n        }\n    }\n    return item;\n}\n/**\n * Helper function that returns an injector by creating a proxy.\n * Invariant: injector is of type I. If injector is undefined, then T = I.\n */\nfunction _inject(module, injector) {\n    const proxy = new Proxy({}, {\n        deleteProperty: () => false,\n        set: () => {\n            throw new Error('Cannot set property on injected service container');\n        },\n        get: (obj, prop) => {\n            if (prop === isProxy) {\n                return true;\n            }\n            else {\n                return _resolve(obj, prop, module, injector || proxy);\n            }\n        },\n        getOwnPropertyDescriptor: (obj, prop) => (_resolve(obj, prop, module, injector || proxy), Object.getOwnPropertyDescriptor(obj, prop)), // used by for..in\n        has: (_, prop) => prop in module, // used by ..in..\n        ownKeys: () => [...Object.getOwnPropertyNames(module)] // used by for..in\n    });\n    return proxy;\n}\n/**\n * Internally used to tag a requested dependency, directly before calling the factory.\n * This allows us to find cycles during instance creation.\n */\nconst __requested__ = Symbol();\n/**\n * Returns the value `obj[prop]`. If the value does not exist, yet, it is resolved from\n * the module description. The result of service factories is cached. Groups are\n * recursively proxied.\n *\n * @param obj an object holding all group proxies and services\n * @param prop the key of a value within obj\n * @param module an object containing groups and service factories\n * @param injector the first level proxy that provides access to all values\n * @returns the requested value `obj[prop]`\n * @throws Error if a dependency cycle is detected\n */\nfunction _resolve(obj, prop, module, injector) {\n    if (prop in obj) {\n        if (obj[prop] instanceof Error) {\n            throw new Error('Construction failure. Please make sure that your dependencies are constructable.', { cause: obj[prop] });\n        }\n        if (obj[prop] === __requested__) {\n            throw new Error('Cycle detected. Please make \"' + String(prop) + '\" lazy. Visit https://langium.org/docs/reference/configuration-services/#resolving-cyclic-dependencies');\n        }\n        return obj[prop];\n    }\n    else if (prop in module) {\n        const value = module[prop];\n        obj[prop] = __requested__;\n        try {\n            obj[prop] = (typeof value === 'function') ? value(injector) : _inject(value, injector);\n        }\n        catch (error) {\n            obj[prop] = error instanceof Error ? error : undefined;\n            throw error;\n        }\n        return obj[prop];\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * Performs a deep-merge of two modules by writing source entries into the target module.\n *\n * @param target the module which is written\n * @param source the module which is read\n * @returns the target module\n */\nfunction _merge(target, source) {\n    if (source) {\n        for (const [key, value2] of Object.entries(source)) {\n            if (value2 !== undefined) {\n                const value1 = target[key];\n                if (value1 !== null && value2 !== null && typeof value1 === 'object' && typeof value2 === 'object') {\n                    target[key] = _merge(value1, value2);\n                }\n                else {\n                    target[key] = value2;\n                }\n            }\n        }\n    }\n    return target;\n}\n//# sourceMappingURL=dependency-injection.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet _ral;\nfunction RAL() {\n    if (_ral === undefined) {\n        throw new Error(`No runtime abstraction layer installed`);\n    }\n    return _ral;\n}\n(function (RAL) {\n    function install(ral) {\n        if (ral === undefined) {\n            throw new Error(`No runtime abstraction layer provided`);\n        }\n        _ral = ral;\n    }\n    RAL.install = install;\n})(RAL || (RAL = {}));\nexports.default = RAL;\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isAstNode, isReference } from '../syntax-tree.js';\nimport { DONE_RESULT, stream, StreamImpl, TreeStreamImpl } from './stream.js';\nimport { inRange } from './cst-utils.js';\n/**\n * Link the `$container` and other related properties of every AST node that is directly contained\n * in the given `node`.\n */\nexport function linkContentToContainer(node) {\n    for (const [name, value] of Object.entries(node)) {\n        if (!name.startsWith('$')) {\n            if (Array.isArray(value)) {\n                value.forEach((item, index) => {\n                    if (isAstNode(item)) {\n                        item.$container = node;\n                        item.$containerProperty = name;\n                        item.$containerIndex = index;\n                    }\n                });\n            }\n            else if (isAstNode(value)) {\n                value.$container = node;\n                value.$containerProperty = name;\n            }\n        }\n    }\n}\n/**\n * Walk along the hierarchy of containers from the given AST node to the root and return the first\n * node that matches the type predicate. If the start node itself matches, it is returned.\n * If no container matches, `undefined` is returned.\n */\nexport function getContainerOfType(node, typePredicate) {\n    let item = node;\n    while (item) {\n        if (typePredicate(item)) {\n            return item;\n        }\n        item = item.$container;\n    }\n    return undefined;\n}\n/**\n * Walk along the hierarchy of containers from the given AST node to the root and check for existence\n * of a container that matches the given predicate. The start node is included in the checks.\n */\nexport function hasContainerOfType(node, predicate) {\n    let item = node;\n    while (item) {\n        if (predicate(item)) {\n            return true;\n        }\n        item = item.$container;\n    }\n    return false;\n}\n/**\n * Retrieve the document in which the given AST node is contained. A reference to the document is\n * usually held by the root node of the AST.\n *\n * @throws an error if the node is not contained in a document.\n */\nexport function getDocument(node) {\n    const rootNode = findRootNode(node);\n    const result = rootNode.$document;\n    if (!result) {\n        throw new Error('AST node has no document.');\n    }\n    return result;\n}\n/**\n * Returns the root node of the given AST node by following the `$container` references.\n */\nexport function findRootNode(node) {\n    while (node.$container) {\n        node = node.$container;\n    }\n    return node;\n}\n/**\n * Create a stream of all AST nodes that are directly contained in the given node. This includes\n * single-valued as well as multi-valued (array) properties.\n */\nexport function streamContents(node, options) {\n    if (!node) {\n        throw new Error('Node must be an AstNode.');\n    }\n    const range = options === null || options === void 0 ? void 0 : options.range;\n    return new StreamImpl(() => ({\n        keys: Object.keys(node),\n        keyIndex: 0,\n        arrayIndex: 0\n    }), state => {\n        while (state.keyIndex < state.keys.length) {\n            const property = state.keys[state.keyIndex];\n            if (!property.startsWith('$')) {\n                const value = node[property];\n                if (isAstNode(value)) {\n                    state.keyIndex++;\n                    if (isAstNodeInRange(value, range)) {\n                        return { done: false, value };\n                    }\n                }\n                else if (Array.isArray(value)) {\n                    while (state.arrayIndex < value.length) {\n                        const index = state.arrayIndex++;\n                        const element = value[index];\n                        if (isAstNode(element) && isAstNodeInRange(element, range)) {\n                            return { done: false, value: element };\n                        }\n                    }\n                    state.arrayIndex = 0;\n                }\n            }\n            state.keyIndex++;\n        }\n        return DONE_RESULT;\n    });\n}\n/**\n * Create a stream of all AST nodes that are directly and indirectly contained in the given root node.\n * This does not include the root node itself.\n */\nexport function streamAllContents(root, options) {\n    if (!root) {\n        throw new Error('Root node must be an AstNode.');\n    }\n    return new TreeStreamImpl(root, node => streamContents(node, options));\n}\n/**\n * Create a stream of all AST nodes that are directly and indirectly contained in the given root node,\n * including the root node itself.\n */\nexport function streamAst(root, options) {\n    if (!root) {\n        throw new Error('Root node must be an AstNode.');\n    }\n    else if ((options === null || options === void 0 ? void 0 : options.range) && !isAstNodeInRange(root, options.range)) {\n        // Return an empty stream if the root node isn't in range\n        return new TreeStreamImpl(root, () => []);\n    }\n    return new TreeStreamImpl(root, node => streamContents(node, options), { includeRoot: true });\n}\nfunction isAstNodeInRange(astNode, range) {\n    var _a;\n    if (!range) {\n        return true;\n    }\n    const nodeRange = (_a = astNode.$cstNode) === null || _a === void 0 ? void 0 : _a.range;\n    if (!nodeRange) {\n        return false;\n    }\n    return inRange(nodeRange, range);\n}\n/**\n * Create a stream of all cross-references that are held by the given AST node. This includes\n * single-valued as well as multi-valued (array) properties.\n */\nexport function streamReferences(node) {\n    return new StreamImpl(() => ({\n        keys: Object.keys(node),\n        keyIndex: 0,\n        arrayIndex: 0\n    }), state => {\n        while (state.keyIndex < state.keys.length) {\n            const property = state.keys[state.keyIndex];\n            if (!property.startsWith('$')) {\n                const value = node[property];\n                if (isReference(value)) {\n                    state.keyIndex++;\n                    return { done: false, value: { reference: value, container: node, property } };\n                }\n                else if (Array.isArray(value)) {\n                    while (state.arrayIndex < value.length) {\n                        const index = state.arrayIndex++;\n                        const element = value[index];\n                        if (isReference(element)) {\n                            return { done: false, value: { reference: element, container: node, property, index } };\n                        }\n                    }\n                    state.arrayIndex = 0;\n                }\n            }\n            state.keyIndex++;\n        }\n        return DONE_RESULT;\n    });\n}\n/**\n * Returns a Stream of references to the target node from the AstNode tree\n *\n * @param targetNode AstNode we are looking for\n * @param lookup AstNode where we search for references. If not provided, the root node of the document is used as the default value\n */\nexport function findLocalReferences(targetNode, lookup = getDocument(targetNode).parseResult.value) {\n    const refs = [];\n    streamAst(lookup).forEach(node => {\n        streamReferences(node).forEach(refInfo => {\n            if (refInfo.reference.ref === targetNode) {\n                refs.push(refInfo.reference);\n            }\n        });\n    });\n    return stream(refs);\n}\n/**\n * Assigns all mandatory AST properties to the specified node.\n *\n * @param reflection Reflection object used to gather mandatory properties for the node.\n * @param node Specified node is modified in place and properties are directly assigned.\n */\nexport function assignMandatoryProperties(reflection, node) {\n    const typeMetaData = reflection.getTypeMetaData(node.$type);\n    const genericNode = node;\n    for (const property of typeMetaData.properties) {\n        // Only set the value if the property is not already set and if it has a default value\n        if (property.defaultValue !== undefined && genericNode[property.name] === undefined) {\n            genericNode[property.name] = copyDefaultValue(property.defaultValue);\n        }\n    }\n}\nfunction copyDefaultValue(propertyType) {\n    if (Array.isArray(propertyType)) {\n        return [...propertyType.map(copyDefaultValue)];\n    }\n    else {\n        return propertyType;\n    }\n}\n/**\n * Creates a deep copy of the specified AST node.\n * The resulting copy will only contain semantically relevant information, such as the `$type` property and AST properties.\n *\n * References are copied without resolved cross reference. The specified function is used to rebuild them.\n */\nexport function copyAstNode(node, buildReference) {\n    const copy = { $type: node.$type };\n    for (const [name, value] of Object.entries(node)) {\n        if (!name.startsWith('$')) {\n            if (isAstNode(value)) {\n                copy[name] = copyAstNode(value, buildReference);\n            }\n            else if (isReference(value)) {\n                copy[name] = buildReference(copy, name, value.$refNode, value.$refText);\n            }\n            else if (Array.isArray(value)) {\n                const copiedArray = [];\n                for (const element of value) {\n                    if (isAstNode(element)) {\n                        copiedArray.push(copyAstNode(element, buildReference));\n                    }\n                    else if (isReference(element)) {\n                        copiedArray.push(buildReference(copy, name, element.$refNode, element.$refText));\n                    }\n                    else {\n                        copiedArray.push(element);\n                    }\n                }\n                copy[name] = copiedArray;\n            }\n            else {\n                copy[name] = value;\n            }\n        }\n    }\n    linkContentToContainer(copy);\n    return copy;\n}\n//# sourceMappingURL=ast-utils.js.map","import {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  MermaidGeneratedSharedModule,\n  PieGeneratedModule,\n  __name\n} from \"./chunk-4KMFLZZN.mjs\";\n\n// src/language/pie/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/pie/tokenBuilder.ts\nvar PieTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"PieTokenBuilder\");\n  }\n  constructor() {\n    super([\"pie\", \"showData\"]);\n  }\n};\n\n// src/language/pie/valueConverter.ts\nvar PieValueConverter = class extends AbstractMermaidValueConverter {\n  static {\n    __name(this, \"PieValueConverter\");\n  }\n  runCustomConverter(rule, input, _cstNode) {\n    if (rule.name !== \"PIE_SECTION_LABEL\") {\n      return void 0;\n    }\n    return input.replace(/\"/g, \"\").trim();\n  }\n};\n\n// src/language/pie/module.ts\nvar PieModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new PieTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new PieValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createPieServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Pie = inject(\n    createDefaultCoreModule({ shared }),\n    PieGeneratedModule,\n    PieModule\n  );\n  shared.ServiceRegistry.register(Pie);\n  return { shared, Pie };\n}\n__name(createPieServices, \"createPieServices\");\n\nexport {\n  PieModule,\n  createPieServices\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  CommonValueConverter,\n  MermaidGeneratedSharedModule,\n  PacketGeneratedModule,\n  __name\n} from \"./chunk-4KMFLZZN.mjs\";\n\n// src/language/packet/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/packet/tokenBuilder.ts\nvar PacketTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"PacketTokenBuilder\");\n  }\n  constructor() {\n    super([\"packet\"]);\n  }\n};\n\n// src/language/packet/module.ts\nvar PacketModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new PacketTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createPacketServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Packet = inject(\n    createDefaultCoreModule({ shared }),\n    PacketGeneratedModule,\n    PacketModule\n  );\n  shared.ServiceRegistry.register(Packet);\n  return { shared, Packet };\n}\n__name(createPacketServices, \"createPacketServices\");\n\nexport {\n  PacketModule,\n  createPacketServices\n};\n","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CancellationTokenSource = exports.CancellationToken = void 0;\nconst ral_1 = require(\"./ral\");\nconst Is = require(\"./is\");\nconst events_1 = require(\"./events\");\nvar CancellationToken;\n(function (CancellationToken) {\n    CancellationToken.None = Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: events_1.Event.None\n    });\n    CancellationToken.Cancelled = Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: events_1.Event.None\n    });\n    function is(value) {\n        const candidate = value;\n        return candidate && (candidate === CancellationToken.None\n            || candidate === CancellationToken.Cancelled\n            || (Is.boolean(candidate.isCancellationRequested) && !!candidate.onCancellationRequested));\n    }\n    CancellationToken.is = is;\n})(CancellationToken || (exports.CancellationToken = CancellationToken = {}));\nconst shortcutEvent = Object.freeze(function (callback, context) {\n    const handle = (0, ral_1.default)().timer.setTimeout(callback.bind(context), 0);\n    return { dispose() { handle.dispose(); } };\n});\nclass MutableToken {\n    constructor() {\n        this._isCancelled = false;\n    }\n    cancel() {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this.dispose();\n            }\n        }\n    }\n    get isCancellationRequested() {\n        return this._isCancelled;\n    }\n    get onCancellationRequested() {\n        if (this._isCancelled) {\n            return shortcutEvent;\n        }\n        if (!this._emitter) {\n            this._emitter = new events_1.Emitter();\n        }\n        return this._emitter.event;\n    }\n    dispose() {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = undefined;\n        }\n    }\n}\nclass CancellationTokenSource {\n    get token() {\n        if (!this._token) {\n            // be lazy and create the token only when\n            // actually needed\n            this._token = new MutableToken();\n        }\n        return this._token;\n    }\n    cancel() {\n        if (!this._token) {\n            // save an object by returning the default\n            // cancelled token when cancellation happens\n            // before someone asks for the token\n            this._token = CancellationToken.Cancelled;\n        }\n        else {\n            this._token.cancel();\n        }\n    }\n    dispose() {\n        if (!this._token) {\n            // ensure to initialize with an empty token if we had none\n            this._token = CancellationToken.None;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually dispose\n            this._token.dispose();\n        }\n    }\n}\nexports.CancellationTokenSource = CancellationTokenSource;\n"],"names":["getAllReachableRules","grammar","allTerminals","ruleNames","Set","entryRule","rules","find","e","entry","getEntryRule","topMostRules","concat","filter","hidden","getHiddenRules","rule","ruleDfs","has","name","add","visitedSet","forEach","node","refRule","ref","getCrossReferenceTerminal","crossRef","terminal","type","nameAssigment","findNameAssignment","isCommentTerminal","terminalRule","terminalRegex","findNodesForProperty","property","findNodesForPropertyInternal","astNode","findNodeForProperty","index","nodes","length","undefined","Math","max","min","element","first","nodeFeature","grammarSource","feature","content","flatMap","findNodeForKeyword","keyword","findNodesForKeywordInternal","value","treeIterator","iterator","result","keywordNodes","next","done","childNode","push","prune","findAssignment","cstNode","_a","container","assignment","startNode","$container","findNameAssignmentInternal","Map","cache","go","refType","childAssignment","set","get","toLowerCase","typeRef","isDataTypeRule","isDataTypeRuleInternal","visited","Boolean","definition","getExplicitRuleType","inferredType","dataType","returnType","getTypeName","actionType","action","getActionType","Error","getRuleType","_b","_c","flags","s","i","u","source","abstractElementToRegex","flagText","Object","entries","map","join","RegExp","WILDCARD","withCardinality","alternatives","elements","cardinality","lookahead","group","range","right","keywordToRegex","left","wrap","characterRangeToRegex","negate","until","lastSlash","regex","lastIndexOf","substring","regexFlags","includes","$type","options","toFastProperties","toBecomeFast","FakeConstructor","prototype","fakeInstance","fakeAccess","bar","array","start","end","Array","n","guard","toInteger","hasOwnProperty","object","isArrayLike","keys","key","call","predicate","props","prop","path","isObjectLike","nodeIsRegExp","isRegExp","tokenLabel","tokType","obj","isString","LABEL","AbstractProduction","this","_definition","constructor","accept","visitor","visit","prod","super","idx","v","referencedRule","Rule","orgText","Alternative","ignoreAmbiguities","Option","RepetitionMandatory","RepetitionMandatoryWithSeparator","Repetition","RepetitionWithSeparator","Alternation","hasPredicates","Terminal","serializeProduction","convertDefinition","serializedNonTerminal","nonTerminalName","label","separator","terminalType","serializedTerminal","terminalLabel","pattern","PATTERN","nodeAny","visitNonTerminal","visitAlternative","visitOption","visitRepetitionMandatory","visitRepetitionMandatoryWithSeparator","visitRepetitionWithSeparator","visitRepetition","visitAlternation","visitTerminal","visitRule","collection","func","isArray","nativeMax","fromIndex","indexOf","isOptionalProd","alreadyVisited","subProd","getProductionDslName","RestWalker","walk","prevRest","currRest","walkProdRef","walkTerminal","walkFlat","walkOption","walkAtLeastOne","walkAtLeastOneSep","walkManySep","walkMany","walkOr","refProd","flatProd","fullOrRest","optionProd","atLeastOneProd","fullAtLeastOneRest","atLeastOneSepProd","fullAtLeastOneSepRest","restForRepetitionWithSeparator","manyProd","fullManyRest","manySepProd","fullManySepRest","orProd","alt","prodWrapper","repSepProd","isSequenceProd","firstSet","seq","currSubProd","nextSubProdIdx","hasInnerProdsRemaining","isLastInnerProdOptional","firstForSequence","isBranchingProd","allAlternativesFirsts","innerProd","firstForBranching","ResyncFollowsWalker","topProd","follows","startWalking","followName","inner","occurenceInParent","fullRest","t_in_topProd_follows","TypeError","args","arguments","apply","values","iteratee","comparator","isCommon","valuesLength","outer","computed","valuesIndex","isArrayLikeObject","resIndex","PRINT_ERROR","msg","console","error","PRINT_WARNING","warn","regExpAstCache","regExpParser","getRegExpAst","regExp","regExpStr","toString","regExpAst","complementErrorMessage","failedOptimizationPrefixMsg","getOptimizedStartCodesIndices","ensureOptimizations","ast","firstCharOptimizedIndices","ignoreCase","message","msgSuffix","terms","term","atom","addOptimizedIdxToResult","complement","code","rangeCode","from","to","minOptimizationVal","minUnOptVal","maxUnOptVal","minOptIdx","charCodeToOptimizedIndex","maxOptIdx","currOptIdx","isOptionalQuantifier","quantifier","atLeast","isWholeOptional","optimizedCharIdx","char","String","fromCharCode","upperChar","toUpperCase","charCodeAt","lowerChar","handleIgnoreCase","findCode","setNode","targetCharCodes","codeOrRange","targetCode","CharCodeFinder","found","visitChildren","visitLookahead","visitNegativeLookahead","visitCharacter","visitSet","canMatchCharCode","charCodes","charCodeFinder","DEFAULT_MODE","MODES","SUPPORT_STICKY","sticky","analyzeTokenTypes","tokenTypes","tracer","defaults","useSticky","debug","safeMode","positionTracking","lineTerminatorCharacters","onlyRelevantTypes","isEmpty","charCodeToOptimizedIdxMap","initCharCodeToOptimizedIndexMap","currType","Lexer","NA","allTransformedPatterns","patternIdxToType","patternIdxToGroup","patternIdxToLongerAltIdxArr","patternIdxToPushMode","patternIdxToPopMode","patternIdxToCanLineTerminator","patternIdxToIsCustom","patternIdxToShort","emptyGroups","patternIdxToConfig","hasCustom","currPattern","regExpSource","addStickyFlag","addStartOfInput","isFunction","exec","escapedRegExpString","replace","wrappedRegExp","tokenTypeIdx","clazz","groupName","GROUP","SKIPPED","isUndefined","longerAltType","LONGER_ALT","PUSH_MODE","lineTerminatorCharCodes","getCharCodes","LINE_BREAKS","checkLineBreaksIssues","isCustomPattern","isShortPattern","reduce","acc","x","longerAlt","canLineTerminator","isCustom","short","pop","tokenType","canBeOptimized","charCodeToPatternIdxToConfig","currTokType","optimizedIdx","addToMapOfArrays","START_CHARS_HINT","lastOptimizedIdx","charOrInt","currOptimizedIdx","unicode","optimizedCodes","validatePatterns","validModesNames","errors","missingResult","tokenTypesWithMissingPattern","LexerDefinitionErrorType","MISSING_PATTERN","valid","findMissingPatterns","invalidResult","tokenTypesWithInvalidPattern","INVALID_PATTERN","findInvalidPatterns","validTokenTypes","withRegExpPatterns","EndAnchorFinder","visitEndAnchor","invalidRegex","regexpAst","endAnchorVisitor","end_of_input","test","EOI_ANCHOR_FOUND","findEndOfInputAnchor","StartAnchorFinder","visitStartAnchor","startAnchorVisitor","start_of_input","SOI_ANCHOR_FOUND","findStartOfInputAnchor","invalidFlags","multiline","global","UNSUPPORTED_FLAGS_FOUND","findUnsupportedFlags","identicalPatterns","outerType","innerType","duplicatePatterns","currIdenticalSet","setOfIdentical","tokenTypeNames","DUPLICATE_PATTERNS_FOUND","findDuplicatePatterns","matchesEmptyString","EMPTY_MATCH_PATTERN","findEmptyMatchRegExps","validateRegExpPattern","invalidTypes","INVALID_GROUP_TYPE_FOUND","findInvalidGroupType","validModes","invalidModes","PUSH_MODE_DOES_NOT_EXIST","findModesThatDoNotExist","canBeTested","str","metaChars","noMetaChar","testIdx","regExpArray","testTokenType","UNREACHABLE_PATTERN","findUnreachablePatterns","performWarningRuntimeChecks","lexerDefinition","trackLines","warnings","hasAnyLineBreak","allTokenTypes","modes","concreteTokenTypes","terminatorCharCodes","currIssue","details","issue","IDENTIFY_TERMINATOR","errMsg","CUSTOM_LINE_BREAK","buildLineBreakIssueMessage","warningDescriptor","NO_LINE_BREAKS_FLAGS","LineTerminatorOptimizedTester","text","len","lastIndex","c","charsOrCodes","numOrString","charCode","timer","Date","getTime","val","time","tokenStructuredMatcher","tokInstance","tokConstructor","instanceType","isParent","categoryMatchesMap","tokenStructuredMatcherNoCategories","token","tokenShortNameIdx","tokenIdxToClass","augmentTokenTypes","tokenTypesAndParents","clone","categories","searching","CATEGORIES","newCategories","expandCategories","hasShortKeyProperty","hasCategoriesProperty","categoryMatches","hasExtendingTokensTypesMapProperty","assignTokenDefaultProps","singleAssignCategoriesToksMap","assignCategoriesMapProp","assignCategoriesTokensProp","nextNode","pathNode","nextCategory","newPath","isTokenType","defaultLexerErrorProvider","buildUnableToPopLexerModeMessage","image","buildUnexpectedCharactersMessage","fullText","startOffset","line","column","charAt","DEFAULT_LEXER_CONFIG","deferDefinitionErrorsHandling","lineTerminatorsPattern","errorMessageProvider","traceInitPerf","skipValidations","recoveryEnabled","freeze","config","lexerDefinitionErrors","lexerDefinitionWarning","trackStartLines","trackEndLines","canModeBeOptimized","TRACE_INIT","phaseDesc","phaseImpl","traceInitIndent","indent","traceInitMaxIdent","log","traceMethod","traceInitVal","Infinity","actualDefinition","hasOnlySingleMode","defaultMode","MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE","MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY","MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST","currModeValue","currModeName","currIdx","LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED","currLongerAlt","MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE","performRuntimeChecks","allModeNames","currModDef","currModName","currAnalyzeResult","allErrMessagesString","chopInput","identity","match","matchWithTest","updateLastIndex","noop","matchWithExec","handleModes","computeNewColumn","updateTokenEndLineColumnLocation","createTokenInstance","createFullToken","createStartOnlyToken","createOffsetOnlyToken","addToken","addTokenUsingPush","handlePayload","handlePayloadWithCustom","addTokenUsingMemberAccess","handlePayloadNoCustom","unOptimizedModes","cannotBeOptimized","modeName","tokenize","initialMode","tokenizeInternal","j","k","matchAltImage","matchedImage","payload","altPayload","imageLength","newToken","errLength","orgLength","offset","matchedTokensIndex","guessedNumberOfTokens","floor","matchedTokens","groups","clonedResult","groupKeys","currKey","currGroupValue","cloneEmptyGroups","lineTerminatorPattern","currModePatternsLength","currCharCodeToPatternIdxToConfig","modeStack","emptyArray","getPossiblePatterns","getPossiblePatternsSlow","getPossiblePatternsOptimized","possiblePatterns","pop_mode","popToken","startLine","startColumn","newMode","last","modeCanBeOptimized","push_mode","currConfig","nextCharCode","chosenPatternIdxToConfig","chosenPatternsLength","singleCharCode","longerAltLength","longerAltConfig","longerAltPattern","foundTerminator","lastLTEndOffset","numOfLTsInMatch","errorStartOffset","errorLine","errorColumn","foundResyncPoint","tokens","pushMode","newLastIndex","lastLTIdx","lastCharIsLT","fixForEndingInLT","endLine","endColumn","oldColumn","endOffset","tokenVector","tokenToAdd","PARENT","POP_MODE","createToken","createTokenInternal","EOF","tokenMatcher","defaultParserErrorProvider","buildMismatchTokenMessage","expected","actual","previous","ruleName","buildNotAllInputParsedMessage","firstRedundant","buildNoViableAltMessage","expectedPathsPerAlt","customUserDescription","errPrefix","errSuffix","allLookAheadPaths","currAltPaths","nextValidTokenSequences","currPath","currTokenType","itemMsg","buildEarlyExitMessage","expectedIterationPaths","defaultGrammarResolverErrorProvider","buildRuleNotFoundError","topLevelRule","undefinedRule","defaultGrammarValidatorErrorProvider","buildDuplicateFoundError","duplicateProds","topLevelName","duplicateProd","dslName","extraArgument","buildNamespaceConflictError","buildAlternationPrefixAmbiguityError","pathMsg","prefixPath","currTok","occurrence","alternation","ambiguityIndices","buildAlternationAmbiguityError","currtok","currMessage","buildEmptyRepetitionError","repetition","buildTokenNameError","buildEmptyAlternationError","emptyChoiceIdx","buildTooManyAlternativesError","buildLeftRecursionError","leftRecursionPath","currRule","buildInvalidRuleNameError","buildDuplicateRuleNameError","grammarName","GastRefResolverVisitor","nameToTopRule","errMsgProvider","resolveRefs","currTopLevel","ParserDefinitionErrorType","UNRESOLVED_SUBRULE_REF","unresolvedRefName","setter","accumulator","initializer","PROD_TYPE","AbstractNextPossibleTokensWalker","possibleTokTypes","nextProductionName","nextProductionOccurrence","isAtEndOfPath","ruleStack","reverse","occurrenceStack","updateExpectedNext","NextAfterTokenWalker","nextTerminalName","nextTerminalOccurrence","lastTok","lastTokOccurrence","restProd","AbstractNextTerminalAfterProductionWalker","topRule","isEndOfRule","NextTerminalAfterManyWalker","firstAfterMany","NextTerminalAfterManySepWalker","firstAfterManySep","NextTerminalAfterAtLeastOneWalker","firstAfterAtLeastOne","NextTerminalAfterAtLeastOneSepWalker","atleastOneSepProd","firstAfterfirstAfterAtLeastOneSep","possiblePathsFrom","targetDef","maxLength","getAlternativesForProd","newDef","currAlt","partialPath","suffixDef","nextPossibleTokensAfter","initialDef","tokMatcher","maxLookAhead","EXIT_NON_TERMINAL","EXIT_NON_TERMINAL_ARR","EXIT_ALTERNATIVE","foundCompletePath","tokenVectorLength","minimalAlternativesIndex","possiblePaths","def","currDef","currRuleStack","currOccurrenceStack","nextPath","nextIdx","nextTokenType","nextTokenOccurrence","newRuleStack","newOccurrenceStack","nextPathWithout","nextPathWith","secondIteration","separatorGast","nthRepetition","currAltPath","expandTopLevelRule","newCurrOccurrenceStack","getProdType","OPTION","REPETITION","REPETITION_MANDATORY","REPETITION_MANDATORY_WITH_SEPARATOR","REPETITION_WITH_SEPARATOR","ALTERNATION","getLookaheadPaths","prodType","maxLookahead","getLookaheadPathsForOr","getLookaheadPathsForOptionalProd","buildAlternativesLookAheadFunc","alts","dynamicTokensEnabled","numOfAlts","areAllOneTokenLookahead","orAlts","predicates","GATE","t","currNumOfPaths","currPredicate","currPathLength","nextToken","LA","singleTokenAlts","choiceToAlt","currExtendingType","buildSingleAlternativeLookaheadFunction","numOfPaths","singleTokensTypes","expectedTokenUniqueKey","RestDefinitionFinderWalker","targetOccurrence","targetProdType","restDef","checkIsTarget","expectedProdType","InsideDefinitionFinderVisitor","targetRef","expectedProdName","initializeArrayOfArrays","size","pathToHashKeys","longerKeys","currShorterKey","categoriesKeySuffix","isUniquePrefixHash","altKnownPathsKeys","searchPathKeys","currAltIdx","otherAltKnownPathsKeys","searchIdx","lookAheadSequenceFromAlternatives","altsDefs","partialAlts","finalResult","altsHashes","dict","item","newData","pathLength","currDataset","altIdx","currAltPathsAndSuffixes","currPathIdx","currPathPrefix","prefixKeys","currAltResult","containsPath","newPartialPathsAndSuffixes","ruleGrammar","insideDefVisitor","insideDef","afterDef","alternative","searchPath","compareOtherPath","otherPath","searchTok","otherTok","areTokenCategoriesNotUsed","lookAheadPaths","singleAltPaths","singlePath","validateGrammar","topLevels","duplicateErrors","collectorVisitor","OccurrenceValidationCollector","allRuleProductions","allProductions","productionGroups","identifyProductionForDuplicates","duplicates","currGroup","currDuplicates","firstProd","defError","DUPLICATE_PRODUCTIONS","param","getExtraProductionArgument","parameter","validateDuplicateProductions","termsNamespaceConflictErrors","tokenNames","currToken","currRuleName","CONFLICT_TOKENS_RULES_NAMESPACE","checkTerminalAndNoneTerminalsNameSpace","tooManyAltsErrors","curRule","orCollector","OrCollector","ors","alternations","currOr","TOO_MANY_ALTS","validateTooManyAlts","duplicateRulesError","allRules","className","occurrences","DUPLICATE_RULE_NAME","validateRuleDoesNotAlreadyExist","subrule","option","manySep","atLeastOne","atLeastOneSep","many","or","validateNoLeftRecursion","nextNonTerminals","getFirstNoneTerminal","LEFT_RECURSION","validNextSteps","errorsFromNextSteps","currRefRule","currSubDef","isFirstOptional","hasMore","rest","validateAmbiguousAlternationAlternatives","globalMaxLookahead","currOccurrence","actualMaxLookahead","altsAmbiguityErrors","foundAmbiguousPaths","identicalAmbiguities","altsCurrPathAppearsIn","currOtherAlt","currOtherAltIdx","currErrors","currAmbDescriptor","ambgIndices","AMBIGUOUS_ALTS","checkAlternativesAmbiguities","altsPrefixAmbiguityErrors","pathsAndIndices","currPathsAndIdx","currPathAndIdx","targetIdx","targetPath","prefixAmbiguitiesPathsAndIndices","searchPathAndIdx","prefix","other","otherTokType","currAmbPathAndIdx","AMBIGUOUS_PREFIX_ALTS","checkPrefixAlternativesAmbiguities","RepetitionCollector","actualOptions","topRulesTable","refResolver","MISMATCHED_TOKEN_EXCEPTION","NO_VIABLE_ALT_EXCEPTION","EARLY_EXIT_EXCEPTION","NOT_ALL_INPUT_PARSED_EXCEPTION","RECOGNITION_EXCEPTION_NAMES","isRecognitionException","RecognitionException","resyncedTokens","setPrototypeOf","captureStackTrace","MismatchedTokenException","previousToken","NoViableAltException","NotAllInputParsedException","EarlyExitException","EOF_FOLLOW_KEY","IN_RULE_RECOVERY_EXCEPTION","InRuleRecoveryException","attemptInRepetitionRecovery","prodFunc","lookaheadFunc","dslMethodIdx","prodOccurrence","nextToksWalker","notStuck","getKeyForAutomaticLookahead","firstAfterRepInfo","firstAfterRepMap","getCurrRuleFullName","getGAstProductions","expectTokAfterLastMatch","nextTokIdx","RULE_STACK","shouldInRepetitionRecoveryBeTried","tryInRepetitionRecovery","AT_LEAST_ONE_IDX","MANY_SEP_IDX","AT_LEAST_ONE_SEP_IDX","ruleIdx","LLkLookaheadStrategy","DEFAULT_PARSER_CONFIG","validate","leftRecursionErrors","emptyAltErrors","validateEmptyOrAlternatives","ambiguousAltsErrors","emptyRepetitionErrors","validateSomeNonEmptyLookaheadPath","currTopRule","exceptLast","currAlternative","possibleFirstInAlt","NONE_LAST_EMPTY_ALT","validateEmptyOrAlternative","topLevelRules","currProd","pathsInsideProduction","NO_NON_EMPTY_LOOKAHEAD","buildLookaheadForAlternation","laFuncBuilder","buildLookaheadFuncForOr","buildLookaheadForOptional","lookaheadBuilder","buildLookaheadFuncForOptionalProd","dslMethods","repetitionWithSeparator","repetitionMandatory","repetitionMandatoryWithSeparator","reset","setNodeLocationOnlyOffset","currNodeLocation","newLocationInfo","isNaN","setNodeLocationFull","defineNameProp","nameValue","defineProperty","enumerable","configurable","writable","defaultVisit","ctx","childrenNames","childrenNamesLength","currChildArray","currChildArrayLength","currChild","children","createBaseSemanticVisitorConstructor","derivedConstructor","semanticProto","validateVisitor","semanticDefinitionErrors","visitorInstance","missingErrors","missingRuleNames","CstVisitorDefinitionError","MISSING_METHOD","methodName","validateMissingCstMethods","errorMessages","currDefError","_RULE_NAMES","RECORDING_NULL_OBJECT","description","HANDLE_SEPARATOR","MAX_METHOD_IDX","pow","RFT","RECORDING_PHASE_TOKEN","RECORDING_PHASE_CSTNODE","recordProd","prodConstructor","mainProdArg","handleSep","assertMethodIdxIsValid","prevProd","recordingProdStack","grammarAction","DEF","newProd","SEP","MAX_LOOKAHEAD","recordOrProd","hasOptions","newOrProd","IGNORE_AMBIGUITIES","currAltFlat","ALT","getIdxSuffix","KNOWN_RECORDER_ERROR","END_OF_FILE","NaN","outputCst","nodeLocationTracking","DEFAULT_RULE_CONFIG","recoveryValueFunc","resyncEnabled","derivedCtor","EMPTY_ALT","Parser","performSelfAnalysis","parserInstance","defErrorsMsgs","selfAnalysisDone","enableRecording","definedRulesNames","originalGrammarAction","recordedRuleGast","topLevelRuleRecord","gastProductionsCache","disableRecording","resolverErrors","definitionErrors","validationErrors","tokensMap","lookaheadValidationErrors","lookaheadValidationErrorMessages","lookaheadStrategy","errorMessage","assign","CUSTOM_LOOKAHEAD_VALIDATION","validateLookahead","allFollows","topProductions","reSyncFollows","currRefsFollow","computeAllProdsFollows","resyncFollows","initialize","preComputeLookaheadFunctions","DEFER_DEFINITION_ERRORS_HANDLING","tokenVocabulary","that","initErrorHandler","initLexerAdapter","initLooksAhead","initRecognizerEngine","initRecoverable","initTreeBuilder","initContentAssist","initGastRecorder","initPerformanceTracer","getTokenToInsert","tokToInsert","isInsertedInRecovery","canTokenTypeBeInsertedInRecovery","canTokenTypeBeDeletedInRecovery","grammarRule","grammarRuleArgs","lookAheadFunc","expectedTokType","reSyncTokType","findReSyncTokenType","savedLexerState","exportLexerState","passedResyncPoint","nextTokenWithoutResync","generateErrorMessage","SAVE_ERROR","SKIP_TOKEN","addToResyncTokens","importLexerState","isBackTracking","canPerformInRuleRecovery","getFollowsForInRuleRecovery","tokIdxInRule","grammarPath","getCurrentGrammarPath","getNextPossibleTokenTypes","tryInRuleRecovery","canRecoverWithSingleTokenInsertion","canRecoverWithSingleTokenDeletion","nextTok","consumeToken","expectedToken","mismatchedTok","possibleFollowsTokType","isInCurrentRuleReSyncSet","followKey","getCurrFollowKey","currentRuleReSyncSet","getFollowSetFromFollowKey","allPossibleReSyncTokTypes","flattenFollowSet","foundMatch","resyncTokType","currRuleShortName","getLastExplicitRuleShortName","currRuleIdx","getLastExplicitRuleOccurrenceIndex","prevRuleShortName","getPreviousExplicitRuleShortName","shortRuleNameToFullName","idxInCallingRule","inRule","buildFullFollowKeyStack","explicitRuleStack","explicitOccurrenceStack","RULE_OCCURRENCE_STACK","followStack","resyncTokens","reSyncTo","getHumanReadableRuleStack","currShortName","lookAheadFuncsCache","collectMethods","prodIdx","laFunc","fullRuleNameToShort","setLaFuncCache","computeLookaheadFunc","prodKey","prodMaxLookahead","dslMethodName","getLaFuncFromCache","CST_STACK","setNodeLocationFromToken","setNodeLocationFromNode","cstPostRule","setInitialNodeLocation","setInitialNodeLocationFullRecovery","cstPostRuleFull","setInitialNodeLocationFullRegular","setInitialNodeLocationOnlyOffsetRecovery","cstPostRuleOnlyOffset","setInitialNodeLocationOnlyOffsetRegular","cstInvocationStateUpdate","cstFinallyStateUpdate","cstPostTerminal","cstPostNonTerminal","location","fullRuleName","create","ruleCstNode","prevToken","loc","consumedToken","rootCst","tokenTypeName","ruleCstResult","preCstNode","ruleResult","addNoneTerminalToCst","getBaseCstVisitorConstructor","baseCstVisitorConstructor","newBaseCstVisitorConstructor","getBaseCstVisitorConstructorWithDefaults","baseCstVisitorWithDefaultsConstructor","newConstructor","baseConstructor","withDefaultsProto","createBaseVisitorConstructorWithDefaults","tokVector","tokVectorLength","input","newInput","howMuch","soughtIdx","newState","resetLexerState","moveToTerminatedState","getLexerPosition","shortRuleNameToFull","ruleShortNameIdx","subruleIdx","isBackTrackingStack","uniqueTokens","isObject","noTokenCategoriesUsed","tokenConstructor","defineRule","impl","shortName","invokeRuleWithTry","ruleInvocationStateUpdate","cst","invokeRuleCatch","ruleFinallyStateUpdate","resyncEnabledConfig","isFirstInvokedRule","reSyncEnabled","recogError","partialCstResult","recoveredNode","optionInternal","actionORMethodDef","optionInternalLogic","orgLookaheadFunction","atLeastOneInternal","laKey","atLeastOneInternalLogic","raiseEarlyExitException","ERR_MSG","doSingleRepetition","atLeastOneSepFirstInternal","atLeastOneSepFirstInternalLogic","separatorLookAheadFunc","CONSUME","repetitionSepSecondInternal","manyInternal","manyInternalLogic","lookaheadFunction","manySepFirstInternal","manySepFirstInternalLogic","nextTerminalAfterWalker","beforeIteration","orInternal","altsOrOpts","altIdxToTake","raiseNoAltException","isAtEndOfInput","firstRedundantTok","subruleInternal","ruleToCall","ARGS","subruleInternalError","consumeInternal","consumeInternalError","eFromConsumption","consumeInternalRecovery","eFromInRuleRecovery","saveRecogState","savedErrors","savedRuleStack","lexerState","reloadRecogState","fullName","ACTION","consume","CONSUME1","CONSUME2","CONSUME3","CONSUME4","CONSUME5","CONSUME6","CONSUME7","CONSUME8","CONSUME9","SUBRULE","SUBRULE1","SUBRULE2","SUBRULE3","SUBRULE4","SUBRULE5","SUBRULE6","SUBRULE7","SUBRULE8","SUBRULE9","OPTION1","OPTION2","OPTION3","OPTION4","OPTION5","OPTION6","OPTION7","OPTION8","OPTION9","OR","OR1","OR2","OR3","OR4","OR5","OR6","OR7","OR8","OR9","MANY","MANY1","MANY2","MANY3","MANY4","MANY5","MANY6","MANY7","MANY8","MANY9","MANY_SEP","MANY_SEP1","MANY_SEP2","MANY_SEP3","MANY_SEP4","MANY_SEP5","MANY_SEP6","MANY_SEP7","MANY_SEP8","MANY_SEP9","AT_LEAST_ONE","AT_LEAST_ONE1","AT_LEAST_ONE2","AT_LEAST_ONE3","AT_LEAST_ONE4","AT_LEAST_ONE5","AT_LEAST_ONE6","AT_LEAST_ONE7","AT_LEAST_ONE8","AT_LEAST_ONE9","AT_LEAST_ONE_SEP","AT_LEAST_ONE_SEP1","AT_LEAST_ONE_SEP2","AT_LEAST_ONE_SEP3","AT_LEAST_ONE_SEP4","AT_LEAST_ONE_SEP5","AT_LEAST_ONE_SEP6","AT_LEAST_ONE_SEP7","AT_LEAST_ONE_SEP8","AT_LEAST_ONE_SEP9","RULE","implementation","ruleImplementation","OVERRIDE_RULE","ruleErrors","INVALID_RULE_OVERRIDE","validateRuleIsOverridden","BACKTRACK","orgState","getSerializedGastProductions","topRules","_errors","context","ruleOccurrenceStack","newErrors","userDefinedErrMsg","insideProdPaths","actualTokens","errMsgTypes","lookAheadPathsPerAlternative","computeContentAssist","startRuleName","precedingInput","startRuleGast","topRuleName","topProduction","RECORDING_PHASE","arg1","arg2","consumeInternalRecord","subruleInternalRecord","optionInternalRecord","orInternalRecord","manyInternalRecord","manySepFirstInternalRecord","atLeastOneInternalRecord","atLeastOneSepFirstInternalRecord","ACTION_RECORD","BACKTRACK_RECORD","LA_RECORD","newTopLevelRule","originalError","mutabilityError","JSON","stringify","newNoneTerminal","userTraceInitPerf","traceIsNumber","baseCtor","baseProto","getOwnPropertyNames","propName","basePropDescriptor","getOwnPropertyDescriptor","EmbeddedActionsParser","configClone","minimalGrammarModule","Grammar","LanguageMetaData","caseInsensitive","fileExtensions","languageId","minimalSharedGrammarModule","AstReflection","loadGrammarFromJson","json","services","shared","ServiceRegistry","register","createMinimalGrammarServices","serializer","JsonSerializer","deserialize","workspace","LangiumDocumentFactory","fromModel","parse","__defProp","__name","target","Statement","Architecture","reflection","isInstance","Axis","Branch","Checkout","CherryPicking","ClassDefStatement","Commit","Curve","Edge","Entry","GitGraph","Group","Info","Item","Junction","Merge","Packet","PacketBlock","Pie","PieSection","Radar","Service","Treemap","loadedInfoGrammar","loadedPacketGrammar","loadedPieGrammar","loadedArchitectureGrammar","loadedGitGraphGrammar","loadedRadarGrammar","loadedTreemapGrammar","TreemapRow","Direction","Leaf","Section","MermaidAstReflection","getAllTypes","computeIsSubtype","subtype","supertype","isSubtype","getReferenceType","refInfo","referenceId","getTypeMetaData","properties","defaultValue","InfoGrammar","PacketGrammar","PieGrammar","ArchitectureGrammar","GitGraphGrammar","RadarGrammar","TreemapGrammar","InfoLanguageMetaData","mode","PacketLanguageMetaData","PieLanguageMetaData","ArchitectureLanguageMetaData","GitGraphLanguageMetaData","RadarLanguageMetaData","TreemapLanguageMetaData","MermaidGeneratedSharedModule","InfoGeneratedModule","parser","PacketGeneratedModule","PieGeneratedModule","ArchitectureGeneratedModule","GitGraphGeneratedModule","RadarGeneratedModule","TreemapGeneratedModule","rulesRegexes","ACC_DESCR","ACC_TITLE","TITLE","AbstractMermaidValueConverter","runConverter","runCommonConverter","runCustomConverter","_cstNode","trim","CommonValueConverter","_rule","_input","AbstractMermaidTokenBuilder","keywords","buildKeywordTokens","terminalTokens","InfoTokenBuilder","InfoModule","TokenBuilder","ValueConverter","createInfoServices","ErrorWithLocation","character","assertUnreachable","_","StreamImpl","startFn","nextFn","state","Symbol","count","toArray","toSet","toMap","keyFn","valueFn","entryStream","firstDone","DONE_RESULT","addSeparator","searchElement","every","some","callbackfn","nonNullable","initialValue","previousValue","reduceRight","recursiveReduce","findIndex","mapped","isIterable","flat","depth","stream","head","tail","skipCount","limit","maxSize","distinct","by","internalState","exclude","otherKeySet","ownKey","EMPTY_STREAM","collections","collIndex","arrIndex","TreeStreamImpl","root","iterators","includeRoot","pruned","Reduction","sum","a","b","product","DefaultTokenBuilder","diagnostics","buildTokens","reachableRules","buildTerminalTokens","terminalToken","unshift","flushLexingReport","popDiagnostics","fragment","buildTerminalToken","requiresCustomPattern","regexPatternFunction","stickyRegex","sort","buildKeywordToken","keywordPattern","buildKeywordPattern","findLongerAlt","longerAlts","AbstractRule","AbstractType","Condition","TypeDefinition","ValueLiteral","AbstractElement","isAbstractElement","ArrayLiteral","ArrayType","BooleanLiteral","isBooleanLiteral","Conjunction","isConjunction","Disjunction","isDisjunction","GrammarImport","InferredType","isInferredType","Interface","isInterface","NamedArgument","Negation","isNegation","NumberLiteral","Parameter","ParameterReference","isParameterReference","ParserRule","isParserRule","ReferenceType","ReturnType","isReturnType","SimpleType","isSimpleType","StringLiteral","TerminalRule","isTerminalRule","Type","isType","TypeAttribute","UnionType","Action","isAction","Alternatives","isAlternatives","Assignment","isAssignment","CharacterRange","isCharacterRange","CrossReference","isCrossReference","EndOfFile","isEndOfFile","isGroup","Keyword","isKeyword","NegatedToken","isNegatedToken","RegexToken","isRegexToken","RuleCall","isRuleCall","TerminalAlternatives","isTerminalAlternatives","TerminalGroup","isTerminalGroup","TerminalRuleCall","isTerminalRuleCall","UnorderedGroup","isUnorderedGroup","UntilToken","isUntilToken","Wildcard","isWildcard","LangiumGrammarAstReflection","isAstNode","isReference","$refText","isAstNodeDescription","isLinkingError","reference","AbstractAstReflection","subtypes","allSubtypes","nested","existing","getAllSubTypes","allTypes","types","possibleSubType","isCompositeCstNode","isLeafCstNode","isRootCstNode","cc","insertToSet","subItem","addFlag","flagObj","flagKey","ASSERT_EXISTS","ASSERT_NEVER_REACH_HERE","isCharacter","digitsCharCodes","wordCharCodes","whitespaceCodes","hexDigitPattern","decimalPattern","decimalPatternNoZero","RegExpParser","groupIdx","saveState","restoreState","consumeChar","disjunction","begin","multiLine","isRegExpFlag","popChar","peekChar","isTerm","isAssertion","assertion","isBacktracking","atMost","integerIncludingZero","isDigit","greedy","dotAll","atomEscape","characterClass","isPatternCharacter","patternCharacter","isQuantifier","decimalEscapeAtom","characterClassEscape","controlEscapeAtom","controlLetterEscapeAtom","nulCharacterAtom","hexEscapeSequenceAtom","regExpUnicodeEscapeSequenceAtom","identityEscapeAtom","positiveInteger","escapeCode","letter","parseHexDigits","classPatternCharacterAtom","isClassAtom","classAtom","isRangeDash","classEscape","capturing","groupAst","number","parseInt","nextChar","isAtom","prevState","howMany","hexString","hexChar","BaseRegExpVisitor","child","subChild","visitPattern","visitFlags","visitDisjunction","visitWordBoundary","visitNonWordBoundary","visitGroup","visitGroupBackReference","visitQuantifier","exports","Emitter","Event","ral_1","_disposable","dispose","None","CallbackList","callback","bucket","_callbacks","_contexts","remove","foundCallbackWithDifferentContext","splice","invoke","ret","callbacks","slice","contexts","default","_options","event","_event","listener","thisArgs","disposables","onFirstListenerAdd","_noop","onLastListenerRemove","fire","NEWLINE_REGEXP","regexpParser","TerminalRegExpVisitor","isStarting","endRegexpStack","endRegex","startRegexp","escapedChar","escapeRegExp","isMultilineComment","regexp","whitespaceCharacters","split","isWhitespace","ws","getCaseInsensitivePattern","partialMatches","partial","re","process","tmp","appendRaw","nbChars","substr","appendOptional","partialRegExp","RadarTokenBuilder","RadarModule","createRadarServices","ArchitectureTokenBuilder","ArchitectureValueConverter","ArchitectureModule","createArchitectureServices","TreemapTokenBuilder","classDefRegex","TreemapValueConverter","parseFloat","styleText","registerValidationChecks","validator","validation","TreemapValidator","registry","ValidationRegistry","checks","checkSingleRoot","bind","doc","rootNodeIndentation","row","TreemapRows","TreemapModule","createTreemapServices","GitGraphTokenBuilder","GitGraphModule","createGitGraphServices","EmptyFileSystemProvider","readFile","readDirectory","EmptyFileSystem","fileSystemProvider","getDiagramElement","id","securityLevel","sandboxElement","contentDocument","body","select","DefaultValueConverter","convert","convertInt","convertString","convertID","convertNumber","convertBoolean","convertBigint","convertDate","convertEscapeCharacter","BigInt","Number","RangeComparison","streamCst","isChildNode","parent","tokenToRange","toDocumentSegment","inRange","comparison","Before","After","startInside","endInside","Inside","OverlapBack","OverlapFront","Outside","compareRange","DefaultNameRegexp","findCommentNode","commentNames","getPreviousNode","isCommentNode","LIB","r","o","h","resolve","cwd","normalize","isAbsolute","relative","f","l","g","_makeLong","dirname","basename","extname","format","dir","base","ext","sep","delimiter","win32","posix","d","toStringTag","URI","Utils","P","platform","navigator","userAgent","scheme","authority","query","isUri","fsPath","with","m","C","file","y","toJSON","revive","_formatted","external","_fsPath","_sep","$mid","encodeURIComponent","p","decodeURIComponent","A","w","joinPath","resolvePath","string","stringArray","boolean","elem","parsers","initializers","info","async","createInfoServices2","LangiumParser","packet","createPacketServices","createPacketServices2","pie","createPieServices","createPieServices2","architecture","createArchitectureServices2","gitGraph","createGitGraphServices2","radar","createRadarServices2","treemap","createTreemapServices2","diagramType","lexerErrors","parserErrors","MermaidParseError","err","setupViewPortForSVG","svg","padding","cssDiagram","useMaxWidth","attr","width","height","calculateDimensionsWithPadding","viewBox","createViewBox","bounds","getBBox","buildATNKey","AbstractTransition","isEpsilon","AtomTransition","EpsilonTransition","RuleTransition","ruleStart","followState","createATN","atn","decisionMap","decisionStates","ruleToStartState","ruleToStopState","states","ruleLength","stop","createRuleStartAndStopATNStates","ruleBlock","block","buildRuleHandle","production","tokenRef","currentRule","nonTerminal","addTransition","ruleRef","defineDecisionState","handle","makeAlts","optional","epsilon","starState","star","repetitionSep","plusState","plus","repetitionMandatorySep","handles","altsLength","transition","transitions","isRuleTransition","ruleTransition","removeState","makeBlock","blkStart","blkEnd","loop","loopback","loopEnd","decision","epsilonOnlyTransitions","nextTokenWithinRule","stateNumber","DFA_ERROR","ATNConfigSet","configs","finalize","getATNConfigKey","stack","createDFACache","startState","predicateSet","atnStartState","PredicateSet","is","EMPTY_PREDICATES","LLStarLookaheadStrategy","logging","dfas","decisionLength","decisionToDFA","initATNSimulator","decisionIndex","isLL1Sequence","prediction","gate","adaptivePredict","flatten","sequences","allowEmpty","fullSet","altSet","indices","dfaCaches","dfa","addDFAState","newDFAState","computeStartState","performLookahead","s0","previousD","edges","computeLookaheadTarget","buildAdaptivePredictError","isAcceptState","reach","intermediate","skippedStopStates","transitionLength","getReachableTarget","closure","hasConfigInRuleStopState","computeReachSet","addDFAEdge","predictedAlt","getUniqueAlt","uniqueAlt","allConfigsInRuleStopStates","altSets","configToAlts","getConflictingAltSets","hasConflictingAltSet","hasStateAssociatedWithOneAlt","hasConflictTerminatingPrediction","reportLookaheadAmbiguity","atnState","buildAmbiguityError","current","nextTransitions","actualToken","possibleTokenTypes","tokenPath","mapKey","numberOfTransitions","atnStack","getEpsilonTarget","DocumentUri","integer","uinteger","Position","Range","Location","LocationLink","Color","ColorInformation","ColorPresentation","FoldingRangeKind","FoldingRange","DiagnosticRelatedInformation","DiagnosticSeverity","DiagnosticTag","CodeDescription","Diagnostic","Command","TextEdit","ChangeAnnotation","ChangeAnnotationIdentifier","AnnotatedTextEdit","TextDocumentEdit","CreateFile","RenameFile","DeleteFile","WorkspaceEdit","TextDocumentIdentifier","VersionedTextDocumentIdentifier","OptionalVersionedTextDocumentIdentifier","TextDocumentItem","MarkupKind","MarkupContent","CompletionItemKind","InsertTextFormat","CompletionItemTag","InsertReplaceEdit","InsertTextMode","CompletionItemLabelDetails","CompletionItem","CompletionList","MarkedString","Hover","ParameterInformation","SignatureInformation","DocumentHighlightKind","DocumentHighlight","SymbolKind","SymbolTag","SymbolInformation","WorkspaceSymbol","DocumentSymbol","CodeActionKind","CodeActionTriggerKind","CodeActionContext","CodeAction","CodeLens","FormattingOptions","DocumentLink","SelectionRange","SemanticTokenTypes","SemanticTokenModifiers","SemanticTokens","InlineValueText","InlineValueVariableLookup","InlineValueEvaluatableExpression","InlineValueContext","InlayHintKind","InlayHintLabelPart","InlayHint","StringValue","InlineCompletionItem","InlineCompletionList","InlineCompletionTriggerKind","SelectedCompletionInfo","InlineCompletionContext","WorkspaceFolder","MIN_VALUE","MAX_VALUE","candidate","Is","objectLiteral","one","two","three","four","uri","targetUri","targetRange","targetSelectionRange","originSelectionRange","red","green","blue","alpha","numberRange","color","textEdit","additionalTextEdits","typedArray","Comment","Imports","Region","startCharacter","endCharacter","kind","collapsedText","defined","Warning","Information","Hint","Unnecessary","Deprecated","href","severity","relatedInformation","codeDescription","title","command","newText","insert","position","del","needsConfirmation","annotation","annotationId","textDocument","edits","overwrite","ignoreIfExists","oldUri","newUri","recursive","ignoreIfNotExists","changes","documentChanges","change","version","PlainText","Markdown","Text","Method","Function","Constructor","Field","Variable","Class","Module","Property","Unit","Value","Enum","Snippet","File","Reference","Folder","EnumMember","Constant","Struct","Operator","TypeParameter","asIs","adjustIndentation","detail","items","isIncomplete","fromPlainText","plainText","language","contents","documentation","parameters","Read","Write","Namespace","Package","Key","Null","containerName","selectionRange","deprecated","tags","Empty","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Source","SourceOrganizeImports","SourceFixAll","Invoked","Automatic","only","triggerKind","kindOrCommandOrEdit","checkKind","edit","isPreferred","data","tabSize","insertSpaces","resultId","variableName","caseSensitiveLookup","expression","frameId","stoppedLocation","tooltip","textEdits","paddingLeft","paddingRight","createSnippet","insertText","filterText","selectedCompletionInfo","TextDocument","mergeSort","compare","leftIdx","rightIdx","FullTextDocument","lineCount","getText","positionAt","offsetAt","applyEdits","document","sortedEdits","diff","lastModifiedOffset","_uri","_languageId","_version","_content","_lineOffsets","update","getLineOffsets","lineOffsets","isLineStart","ch","low","high","mid","lineOffset","nextLineOffset","check","CstNodeBuilder","nodeStack","rootNode","buildRootNode","RootCstNodeImpl","buildCompositeNode","compositeNode","CompositeCstNodeImpl","buildLeafNode","leafNode","LeafCstNodeImpl","removeNode","addHiddenNodes","added","construct","$cstNode","AbstractCstNode","_astNode","_offset","_length","_hidden","_tokenType","_range","CstNodeContainer","firstNonHiddenNode","lastNonHiddenNode","firstNode","lastNode","_rangeCache","firstRange","lastRange","addParents","_text","DatatypeSymbol","isDataTypeNode","withRuleSuffix","endsWith","AbstractLangiumParser","_unorderedGroups","lexer","wrapper","ChevrotainWrapper","ParserConfig","ParserErrorMessageProvider","choices","wrapOr","wrapOption","wrapMany","wrapAtLeastOne","getRule","isRecording","IS_RECORDING","unorderedGroups","getRuleStack","wrapSelfAnalysis","nodeBuilder","assignmentMap","linker","references","Linker","converter","astReflection","computeRuleType","ruleMethod","DEFINE_RULE","startImplementation","mainRule","explicit","lexerResult","clear","lexerReport","report","createNode","extractHiddenTokens","hiddenTokens","wrapConsume","isValidToken","isCrossRef","getAssignment","convertedValue","operator","subruleResult","wrapSubrule","performSubruleAssignment","newItem","assignWithoutOverride","buildReference","existingValue","newValue","targetCstNode","AbstractParserErrorMessageProvider","LangiumParserErrorMessageProvider","LangiumCompletionParser","elementStack","lastElementStack","nextTokenIndex","stackSize","resetState","tokenIndex","keepStackSize","resetStackSize","removeUnexpectedElements","before","after","defaultConfig","useDefaultLookahead","createParser","parserContext","reachable","parserRules","buildElement","buildRules","ignoreGuard","method","buildKeyword","buildAction","buildCrossReference","ruleCall","namedArgs","buildPredicate","ruleArgs","ruleTarget","buildRuleCallPredicate","getToken","buildRuleCall","methods","predicatedMethod","getGuardCondition","buildAlternatives","orIdx","idFunc","lParser","groupState","trackedAlternatives","wrapped","delete","buildUnorderedGroup","buildGroup","condition","true","guardCondition","assignTerminal","getRuleName","createLangiumParser","prepareLangiumParser","lastTick","globalInterruptionPeriod","isOperationCancelled","interruptAndCheck","performance","now","Promise","setImmediate","setTimeout","isCancellationRequested","promise","reject","arg","isIncremental","getWellformedRange","addedLineOffsets","computeLineOffsets","isFull","ensureBeforeEOL","isEOL","rangeLength","isAtLineStart","textOffset","getWellformedEdit","spans","DocumentState","DefaultLangiumDocumentFactory","serviceRegistry","textDocuments","TextDocuments","FileSystemProvider","fromUri","cancellationToken","createAsync","fromTextDocument","fromString","model","$model","parseResult","createLangiumDocument","cancelToken","parseAsync","Parsed","textDocumentGetter","createTextDocumentGetter","$document","oldText","getServices","AsyncParser","textDoc","DefaultLangiumDocuments","documentMap","langiumDocumentFactory","all","addDocument","uriString","getDocument","getOrCreateDocument","createDocument","then","hasDocument","invalidateDocument","langiumDoc","unlink","Changed","precomputedScopes","deleteDocument","ref_resolving","DefaultLinker","langiumDocuments","LangiumDocuments","scopeProvider","ScopeProvider","astNodeLocator","AstNodeLocator","link","doLink","_ref","getCandidate","_nodeDescription","documentUri","linkedNode","loadAstNode","createLinkingError","getScope","getElement","refNode","refText","$refNode","refData","getLinkedNode","ComputedScopes","descr","getAstNodePath","$nodeDescription","nodeDescription","getAstNode","targetDescription","referenceType","DefaultNameProvider","getName","isNamed","getNameNode","UriUtils","equals","fromPath","toPath","fromParts","toParts","repeat","DefaultReferences","nameProvider","NameProvider","IndexManager","nodeLocator","findDeclaration","sourceCstNode","nodeElem","nameNode","findDeclarationNode","targetNode","findReferences","refs","includeDeclaration","getReferenceToSelf","indexReferences","findAllReferences","sourceUri","sourcePath","segment","local","MultiMap","addAll","entriesGroupedByKey","BiMap","inverse","getKey","DefaultScopeComputation","descriptions","AstNodeDescriptionProvider","computeExports","computeExportsForNode","parentNode","exportNode","createDescription","computeLocalScopes","scopes","processNode","StreamScope","outerScope","getAllElements","MapScope","localName","elementStream","DisposableCache","toDispose","isDisposed","onDispose","disposable","throwIfDisposed","SimpleCache","provider","ContextCache","contextKey","cacheForContext","contextCache","documentCache","WorkspaceCache","sharedServices","DocumentBuilder","onBuildPhase","onUpdate","_changed","deleted","DefaultScopeProvider","indexManager","globalScopeCache","precomputed","currentNode","allDescriptions","desc","getGlobalScope","createScope","createScopeForNodes","_context","allElements","isIntermediateReference","DefaultJsonSerializer","ignoreProperties","commentProvider","CommentProvider","serialize","serializeOptions","specificReplacer","replacer","defaultReplacer","currentDocument","space","deserializeOptions","linkNode","sourceText","textRegions","comments","uriConverter","_d","refValue","targetDocument","$ref","$error","addAstNodeRegionWithAssignmentsTo","$textRegion","documentURI","$sourceText","comment","getComment","$comment","createDocumentSegment","assignments","startsWith","propertyAssignments","containerProperty","containerIndex","propertyName","reviveReference","mutable","$containerProperty","$containerIndex","getRefNode","fragmentIndex","DefaultServiceRegistry","fileExtensionMap","languageIdMap","singleton","hasServices","diagnosticData","ValidationCategory","DocumentValidator","entriesBefore","entriesAfter","checksRecord","thisObj","category","wrapValidationException","addEntry","handleException","functionality","messageContext","getChecks","registerBeforeDocument","checkBefore","wrapPreparationException","registerAfterDocument","checkAfter","checksBefore","checksAfter","DefaultDocumentValidator","validationRegistry","metadata","validateDocument","processLexingErrors","stopAfterLexingErrors","LexingError","processParsingErrors","stopAfterParsingErrors","ParsingError","processLinkingErrors","stopAfterLinkingErrors","LinkingError","validateAst","lexerDiagnostics","lexerDiagnostic","diagnostic","toDiagnosticSeverity","toDiagnosticData","getSource","parserError","linkingError","containerType","toDiagnostic","validationItems","acceptor","validateAstBefore","validateAstNodes","validateAstAfter","getDiagnosticRange","LexingWarning","LexingInfo","LexingHint","DefaultAstNodeDescriptionProvider","nameNodeSegment","nameSegmentGetter","nameSegment","selectionSegment","DefaultReferenceDescriptionProvider","createDescriptions","targetNodeDescr","refCstNode","docUri","DefaultAstNodeLocator","segmentSeparator","indexSeparator","containerPath","newSegment","getPathSegment","currentValue","propertyIndex","arrayIndex","Disposable","DefaultConfigurationProvider","_ready","settings","workspaceConfig","onConfigurationSectionUpdateEmitter","ready","params","capabilities","configuration","initialized","languages","section","lang","toSectionName","fetchConfiguration","configToUpdate","conf","updateSectionConfiguration","updateConfiguration","getConfiguration","sectionName","onConfigurationSectionUpdate","DefaultDocumentBuilder","updateBuildOptions","updateListeners","buildPhaseListeners","documentPhaseListeners","buildState","documentBuildWaiters","currentState","build","documents","Validated","IndexedReferences","previousCategories","validationChecks","completed","emitUpdate","buildDocuments","changed","deletedUri","changedUri","newDocument","allChangedUris","shouldRelink","rebuildDocuments","sortDocuments","Linked","hasTextDocument","changedUris","isAffected","prepareBuild","runCancelable","IndexedContent","updateContent","scopeComputation","ScopeComputation","updateReferences","toBeValidated","shouldValidate","targetState","filtered","notifyDocumentPhase","targetStateDocs","notifyBuildPhase","onDocumentPhase","waitUntil","uriOrToken","buildDisposable","cancelDisposable","onCancellationRequested","listenersCopy","getBuildOptions","validationSetting","DefaultIndexManager","symbolIndex","symbolByTypeIndex","referenceIndex","astNodePath","targetDocUri","docRefs","refDescr","nodeType","uris","documentUris","getFileDescriptions","indexData","ReferenceDescriptionProvider","DefaultWorkspaceManager","initialBuildOptions","documentBuilder","mutex","WorkspaceLock","workspaceFolders","folders","_params","write","initializeWorkspace","performStartup","collector","loadAdditionalDocuments","wf","getRootFolder","traverseFolder","_folders","_collector","workspaceFolder","folderPath","includeEntry","isDirectory","isFile","_workspaceFolder","DefaultLexerErrorMessageProvider","DEFAULT_TOKENIZE_OPTIONS","DefaultLexer","LexerErrorMessageProvider","tokenBuilder","toTokenTypeDictionary","lexerTokens","isTokenTypeDictionary","chevrotainLexer","chevrotainResult","isIMultiModeLexerDefinition","res","isTokenTypeArray","parseJSDoc","opts","currentLine","currentCharacter","lines","lastCharacter","skipWhitespace","tagRegex","tagMatch","fullMatch","inlineTagMatches","matchAll","inlineTagRegex","buildInlineTokens","getLines","normalizeOptions","startPosition","JSDocCommentImpl","parseJSDocElement","parseJSDocComment","lineIndex","characterIndex","matchIndex","startContent","tagName","endContent","nonWhitespaceRegex","whitespaceEndRegex","parseJSDocTag","parseJSDocText","JSDocLineImpl","inlines","appendEmptyLine","firstToken","lastToken","parseJSDocInline","JSDocTextImpl","parseJSDocLine","inline","tagToken","docLine","JSDocTagImpl","normalizeOption","escaped","getTag","getAllTags","getTags","fillNewlines","toMarkdown","renderTag","toMarkdownDefault","rendered","tag","display","displayStart","renderedLink","renderLink","renderLinkDefault","renderInlineTag","marker","JSDocDocumentationProvider","getDocumentation","normalizedOptions","firstRegex","lastRegex","isJSDoc","documentationLinkRenderer","documentationTagRenderer","findNameInPrecomputedScopes","findNameInGlobalScope","_node","_tag","DefaultCommentProvider","grammarConfig","GrammarConfig","isAstNodeWithComment","multilineCommentRules","DefaultAsyncParser","syncParser","_cancelToken","DefaultWorkspaceLock","previousTokenSource","writeQueue","readQueue","cancelWrite","tokenSource","enqueue","read","queue","deferred","performNextOperation","shift","cancel","DefaultHydrator","grammarElementIdMap","tokenTypeIdMap","dehydrate","dehydrateLexerReport","dehydrateAstNode","createDehyrationContext","astNodes","cstNodes","dehydrateCstNode","arr","dehydrateReference","getGrammarElementId","hydrate","createHydrationContext","hydrateCstNode","hydrateAstNode","hydrateCstLeafNode","setParent","hydrateReference","num","cstNodeObj","getGrammarElement","hydrated","getTokenType","createGrammarElementIdMap","createDefaultCoreModule","DocumentationProvider","nameRegexp","createGrammarConfig","CompletionParser","createCompletionParser","References","Hydrator","createDefaultSharedCoreModule","WorkspaceManager","ConfigurationProvider","inject","module1","module2","module3","module4","module5","module6","module7","module8","module9","_inject","_merge","merge","m1","m2","isProxy","module","injector","proxy","Proxy","deleteProperty","_resolve","ownKeys","__requested__","cause","value2","value1","_ral","RAL","install","ral","linkContentToContainer","getContainerOfType","typePredicate","findRootNode","streamContents","keyIndex","isAstNodeInRange","streamAllContents","streamAst","nodeRange","streamReferences","assignMandatoryProperties","typeMetaData","genericNode","copyDefaultValue","propertyType","PieTokenBuilder","PieValueConverter","PieModule","PacketTokenBuilder","PacketModule","events_1","CancellationToken","Cancelled","shortcutEvent","MutableToken","_isCancelled","_emitter","_token"],"sourceRoot":""}