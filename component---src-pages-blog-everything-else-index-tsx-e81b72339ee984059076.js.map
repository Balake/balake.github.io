{"version":3,"file":"component---src-pages-blog-everything-else-index-tsx-e81b72339ee984059076.js","mappings":"4LAYA,MAAMA,EAAYA,CAACC,EAASC,KACxB,MAAMC,EAAQ,IAAIC,KAAKH,EAAEI,KAAKC,YAAYC,MAG1C,OAFc,IAAIH,KAAKF,EAAEG,KAAKC,YAAYC,MAE7BC,UAAYL,EAAMK,WAGtBC,EAA8CC,IAAA,IAAC,MAAEC,GAAOD,EAAA,OACjEE,EAAAA,cAAA,OAAKC,UAAU,sCACVF,EAAMG,KAAKd,GAAWe,KAAIC,IAAA,IAAC,KAAEX,GAAMW,EAAA,OAChCJ,EAAAA,cAAA,OACIK,IAAKZ,EAAKa,SAASC,gBACnBN,UAAU,oDAEVD,EAAAA,cAACQ,EAAAA,GAAI,CACDC,IAAIC,EAAAA,EAAAA,GAAQjB,EAAKa,SAASC,iBAC1BN,UAAU,+BAEVD,EAAAA,cAACW,EAAAA,GAAI,CAACV,UAAU,iHACZD,EAAAA,cAACY,EAAAA,GAAU,KACPZ,EAAAA,cAACa,EAAAA,GAAS,CAACZ,UAAU,kGAChBR,EAAKC,YAAYoB,QAG1Bd,EAAAA,cAACe,EAAAA,GAAW,CAACd,UAAU,uBACnBD,EAAAA,cAACgB,EAAAA,GAAe,CAACf,UAAU,qFACtBR,EAAKC,YAAYuB,aAEtBjB,EAAAA,cAACgB,EAAAA,GAAe,CAACf,UAAU,qFACtB,IAAGiB,EAAAA,EAAAA,GAAczB,EAAKC,YAAYC,WAAWF,EAAK0B,OAAOC,WAAWC,gB,0GCvBrG,MAd2BC,KACvB,MAAMC,GCDOC,EAAAA,EAAAA,IAAe,cA6BhBC,MAAMC,MD3BlB,OACI1B,EAAAA,cAAA,WACIA,EAAAA,cAAA,UAAI,mBACJA,EAAAA,cAAA,SAAG,yGAIHA,EAAAA,cAACH,EAAAA,EAAc,CAACE,MAAOwB,K,gLETnC,SAASZ,EAAIb,GAAwD,IAAvD,UAAEG,KAAc0B,GAAoC7B,EACjE,OACCE,EAAAA,cAAA,MAAA4B,OAAAC,OAAA,CACC,YAAU,OACV5B,WAAW6B,EAAAA,EAAAA,IACV,oFACA7B,IAEG0B,GAGP,CAEA,SAASf,EAAUR,GAAwD,IAAvD,UAAEH,KAAc0B,GAAoCvB,EACvE,OACCJ,EAAAA,cAAA,MAAA4B,OAAAC,OAAA,CACC,YAAU,cACV5B,WAAW6B,EAAAA,EAAAA,IACV,6JACA7B,IAEG0B,GAGP,CAEA,SAASd,EAASkB,GAAwD,IAAvD,UAAE9B,KAAc0B,GAAoCI,EACtE,OACC/B,EAAAA,cAAA,MAAA4B,OAAAC,OAAA,CACC,YAAU,aACV5B,WAAW6B,EAAAA,EAAAA,IAAG,6BAA8B7B,IACxC0B,GAGP,CAEA,SAASX,EAAegB,GAAwD,IAAvD,UAAE/B,KAAc0B,GAAoCK,EAC5E,OACChC,EAAAA,cAAA,MAAA4B,OAAAC,OAAA,CACC,YAAU,mBACV5B,WAAW6B,EAAAA,EAAAA,IAAG,gCAAiC7B,IAC3C0B,GAGP,CAeA,SAASZ,EAAWkB,GAAwD,IAAvD,UAAEhC,KAAc0B,GAAoCM,EACxE,OACCjC,EAAAA,cAAA,MAAA4B,OAAAC,OAAA,CACC,YAAU,eACV5B,WAAW6B,EAAAA,EAAAA,IAAG,OAAQ7B,IAClB0B,GAGP,C","sources":["webpack://balake_blog/./components/containers/posts.tsx","webpack://balake_blog/./src/pages/blog/everything-else/index.tsx","webpack://balake_blog/./src/pages/blog/everything-else/_query.ts","webpack://balake_blog/./components/ui/card.tsx"],"sourcesContent":["import { Post } from \"@/lib/types/post\";\nimport { Link } from \"gatsby\";\nimport React from \"react\";\nimport {\n    Card,\n    CardContent,\n    CardDescription,\n    CardHeader,\n    CardTitle,\n} from \"../ui/card\";\nimport { getDateString, getSlug } from \"@/lib/utils\";\n\nconst sortPosts = (a: Post, b: Post) => {\n    const aDate = new Date(a.node.frontmatter.date);\n    const bDate = new Date(b.node.frontmatter.date);\n\n    return bDate.getTime() - aDate.getTime();\n}\n\nexport const PostsContainer: React.FC<{ posts: Post[] }> = ({ posts }) => (\n    <div className=\"py-4 flex flex-wrap gap-4 flex-row\">\n        {posts.sort(sortPosts).map(({ node }) => (\n            <div\n                key={node.internal.contentFilePath}\n                className=\"w-full sm:basis-[calc(50%-0.5rem)] flex-shrink-0\"\n            >\n                <Link\n                    to={getSlug(node.internal.contentFilePath)}\n                    className=\"no-underline cursor-pointer\"\n                >\n                    <Card className=\"group w-full hover:-translate-y-1 will-change-transform transition-all duration-300 ease-out hover:bg-primary\">\n                        <CardHeader>\n                            <CardTitle className=\"will-change-transform transition-all duration-300 ease-out group-hover:text-primary-foreground\">\n                                {node.frontmatter.title}\n                            </CardTitle>\n                        </CardHeader>\n                        <CardContent className=\"flex flex-col gap-4\">\n                            <CardDescription className=\"will-change-transform transition-all duration-300 ease-out group-hover:text-muted\">\n                                {node.frontmatter.description}\n                            </CardDescription>\n                            <CardDescription className=\"will-change-transform transition-all duration-300 ease-out group-hover:text-muted\">\n                                {`${getDateString(node.frontmatter.date)} - ${node.fields.timeToRead.text}`}\n                            </CardDescription>\n                        </CardContent>\n                    </Card>\n                </Link>\n            </div>\n        ))}\n    </div>\n);\n","import React from \"react\";\nimport { useEverythingElsePosts } from \"./_query\";\nimport { PostsContainer } from \"@/components/containers/posts\";\n\nconst EverythingElsePage = () => {\n    const everythingElsePosts = useEverythingElsePosts();\n    return (\n        <div>\n            <h1>Everything else</h1>\n            <p>\n                A wideâ€‘open space for everything else I explore unrelated to tech. What will I post? Not\n                even I know!\n            </p>\n            <PostsContainer posts={everythingElsePosts} />\n        </div>\n    );\n};\n\nexport default EverythingElsePage;\n","import { graphql, useStaticQuery } from \"gatsby\";\nimport type { Post } from \"@/lib/types/post\";\n\nconst useEverythingElsePosts = () => {\n    const data = useStaticQuery(graphql`\n    query everythingElsePosts {\n      space: allMdx(\n        filter: { internal: { contentFilePath: { regex: \"/posts/everything-else/\" } } }\n        sort: { frontmatter: { date: DESC } }\n      ) {\n        edges {\n          node {\n            fields {\n              timeToRead {\n                minutes\n                text\n                time\n                words\n              }\n            }\n            frontmatter {\n              title\n              description\n              date\n            }\n            internal {\n              contentFilePath\n            }\n          }\n        }\n      }\n    }\n  `);\n    return data.space.edges as Post[];\n};\n\nexport { useEverythingElsePosts };\n","import * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"card\"\n\t\t\tclassName={cn(\n\t\t\t\t\"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n\t\t\t\tclassName,\n\t\t\t)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"card-header\"\n\t\t\tclassName={cn(\n\t\t\t\t\"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n\t\t\t\tclassName,\n\t\t\t)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"card-title\"\n\t\t\tclassName={cn(\"leading-none font-semibold\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"card-description\"\n\t\t\tclassName={cn(\"text-muted-foreground text-sm\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"card-action\"\n\t\t\tclassName={cn(\n\t\t\t\t\"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n\t\t\t\tclassName,\n\t\t\t)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"card-content\"\n\t\t\tclassName={cn(\"px-6\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"card-footer\"\n\t\t\tclassName={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nexport {\n\tCard,\n\tCardHeader,\n\tCardFooter,\n\tCardTitle,\n\tCardAction,\n\tCardDescription,\n\tCardContent,\n};\n"],"names":["sortPosts","a","b","aDate","Date","node","frontmatter","date","getTime","PostsContainer","_ref","posts","React","className","sort","map","_ref2","key","internal","contentFilePath","Link","to","getSlug","Card","CardHeader","CardTitle","title","CardContent","CardDescription","description","getDateString","fields","timeToRead","text","EverythingElsePage","everythingElsePosts","useStaticQuery","space","edges","props","Object","assign","cn","_ref3","_ref4","_ref6"],"sourceRoot":""}