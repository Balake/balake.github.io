{"version":3,"file":"component---src-pages-index-tsx-a406e0fab695a017cb38.js","mappings":"mMA6DA,MAxDuCA,KACnC,MACMC,GCHIC,EAAAA,EAAAA,IAAe,cA4BhBC,IAAIC,MDzBmBC,QAC5B,CAACC,EAAMC,IAASD,EAAOC,EAAKC,KAAKC,OAAOC,WAAWC,OACnD,GAEJ,OACIC,EAAAA,cAAA,WACIA,EAAAA,cAAA,UAAI,YACJA,EAAAA,cAAA,SAAG,sMAKHA,EAAAA,cAAA,UACIA,EAAAA,cAAA,UACIA,EAAAA,cAACC,EAAAA,GAAI,CAACC,GAAG,cAAa,QAAW,6BAErCF,EAAAA,cAAA,UACIA,EAAAA,cAACC,EAAAA,GAAI,CAACC,GAAG,yBAAwB,mBAAsB,8DAG3DF,EAAAA,cAAA,UAAI,qCACJA,EAAAA,cAAA,UAAI,4CAERA,EAAAA,cAAA,SAAG,gOAMHA,EAAAA,cAAA,UAAI,SACJA,EAAAA,cAAA,SAAG,8XAQHA,EAAAA,cAAA,SAAG,gEAC+D,IAC9DA,EAAAA,cAACC,EAAAA,GAAI,CAACC,GAAG,UAAS,cAAiB,KAEvCF,EAAAA,cAAA,UAAI,SACJA,EAAAA,cAAA,SAAG,iBACHA,EAAAA,cAAA,OAAKG,UAAU,8CACXH,EAAAA,cAACI,EAAAA,GAAI,CAACD,UAAU,OACZH,EAAAA,cAACK,EAAAA,GAAS,KAAC,iCACXL,EAAAA,cAACM,EAAAA,GAAW,KAAEjB,M,gLElDlC,SAASe,EAAIG,GAAwD,IAAvD,UAAEJ,KAAcK,GAAoCD,EACjE,OACCP,EAAAA,cAAA,MAAAS,OAAAC,OAAA,CACC,YAAU,OACVP,WAAWQ,EAAAA,EAAAA,IACV,oFACAR,IAEGK,GAGP,CAEA,SAASI,EAAUC,GAAwD,IAAvD,UAAEV,KAAcK,GAAoCK,EACvE,OACCb,EAAAA,cAAA,MAAAS,OAAAC,OAAA,CACC,YAAU,cACVP,WAAWQ,EAAAA,EAAAA,IACV,6JACAR,IAEGK,GAGP,CAEA,SAASH,EAASS,GAAwD,IAAvD,UAAEX,KAAcK,GAAoCM,EACtE,OACCd,EAAAA,cAAA,MAAAS,OAAAC,OAAA,CACC,YAAU,aACVP,WAAWQ,EAAAA,EAAAA,IAAG,6BAA8BR,IACxCK,GAGP,CAEA,SAASO,EAAeC,GAAwD,IAAvD,UAAEb,KAAcK,GAAoCQ,EAC5E,OACChB,EAAAA,cAAA,MAAAS,OAAAC,OAAA,CACC,YAAU,mBACVP,WAAWQ,EAAAA,EAAAA,IAAG,gCAAiCR,IAC3CK,GAGP,CAeA,SAASF,EAAWW,GAAwD,IAAvD,UAAEd,KAAcK,GAAoCS,EACxE,OACCjB,EAAAA,cAAA,MAAAS,OAAAC,OAAA,CACC,YAAU,eACVP,WAAWQ,EAAAA,EAAAA,IAAG,OAAQR,IAClBK,GAGP,C","sources":["webpack://balake_blog/./src/pages/index.tsx","webpack://balake_blog/./src/pages/_query.ts","webpack://balake_blog/./components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Link, type PageProps } from \"gatsby\";\nimport { useAllPosts } from \"./_query\";\nimport { Card, CardContent, CardTitle } from \"@/components/ui/card\";\n\nconst IndexPage: React.FC<PageProps> = () => {\n    const allPosts = useAllPosts();\n    const totalWordCount = allPosts.reduce(\n        (prev, curr) => prev + curr.node.fields.timeToRead.words,\n        0,\n    );\n    return (\n        <div>\n            <h1>Welcome!</h1>\n            <p>\n                Here lies my attempt at creating and maintaining a digital record of my\n                organized (or not) thoughts. I have this site currently broken up into\n                two specific namespaces with two more coming later:\n            </p>\n            <ol>\n                <li>\n                    <Link to=\"/blog/tech\">Tech</Link> - things related to tech\n                </li>\n                <li>\n                    <Link to=\"/blog/everything-else\">Everything else</Link> - a wide open space for everything\n                    else unrelated to tech\n                </li>\n                <li>Various tools (coming eventually)</li>\n                <li>Project showcase (if I ever finish any)</li>\n            </ol>\n            <p>\n                So why am I splitting my posts up? Can't I accomplish the same thing\n                with something like post tags? Yes, yes I can. However, I have found\n                that for me, sometimes being less general results in a bit more purpose\n                and focus.\n            </p>\n            <h3>Goals</h3>\n            <p>\n                As with any project, my first goal is to get this site up and hosted, so\n                if you're seeing this, then success! Many of my projects don't see the\n                light of day. In order to be realistic, my main goal for this site is to\n                just be a place of written exploration more than anything. Maybe I can\n                help some others with my tech posts and maybe I can inspire others with\n                my non-tech posts.\n            </p>\n            <p>\n                For an idea of some of the things I might write about, see my{\" \"}\n                <Link to=\"/about\">about page</Link>.\n            </p>\n            <h3>Stats</h3>\n            <p>Just for fun:</p>\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 my-4\">\n                <Card className=\"p-4\">\n                    <CardTitle>Total words written for posts</CardTitle>\n                    <CardContent>{totalWordCount}</CardContent>\n                </Card>\n            </div>\n        </div>\n    );\n};\n\nexport default IndexPage;\n","import { graphql, useStaticQuery } from \"gatsby\";\nimport type { Post } from \"@/lib/types/post\";\n\nconst useAllPosts = () => {\n\tconst data = useStaticQuery(graphql`\n    query AllPosts {\n      all: allMdx(\n        filter: { internal: { contentFilePath: { regex: \"/posts/\" } } }\n      ) {\n        edges {\n          node {\n            fields {\n              timeToRead {\n                minutes\n                text\n                time\n                words\n              }\n            }\n            frontmatter {\n              title\n              description\n              date\n            }\n            internal {\n              contentFilePath\n            }\n          }\n        }\n      }\n    }\n  `);\n\treturn data.all.edges as Post[];\n};\n\nexport { useAllPosts };\n","import * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"card\"\n\t\t\tclassName={cn(\n\t\t\t\t\"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n\t\t\t\tclassName,\n\t\t\t)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"card-header\"\n\t\t\tclassName={cn(\n\t\t\t\t\"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n\t\t\t\tclassName,\n\t\t\t)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"card-title\"\n\t\t\tclassName={cn(\"leading-none font-semibold\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"card-description\"\n\t\t\tclassName={cn(\"text-muted-foreground text-sm\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"card-action\"\n\t\t\tclassName={cn(\n\t\t\t\t\"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n\t\t\t\tclassName,\n\t\t\t)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"card-content\"\n\t\t\tclassName={cn(\"px-6\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"card-footer\"\n\t\t\tclassName={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nexport {\n\tCard,\n\tCardHeader,\n\tCardFooter,\n\tCardTitle,\n\tCardAction,\n\tCardDescription,\n\tCardContent,\n};\n"],"names":["IndexPage","totalWordCount","useStaticQuery","all","edges","reduce","prev","curr","node","fields","timeToRead","words","React","Link","to","className","Card","CardTitle","CardContent","_ref","props","Object","assign","cn","CardHeader","_ref2","_ref3","CardDescription","_ref4","_ref6"],"sourceRoot":""}